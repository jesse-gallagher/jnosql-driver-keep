{
    "openapi": "3.0.2",
    "info": {
        "title": "HCL Project KEEP Core API v1",
        "version": "4.3.9",
        "description": "REST APIs for Domino and more done right. With declarative security and access to Code, Design and data",
        "contact": {
            "name": "HCL America Inc",
            "url": "https://opensource.hcltechsw.com/domino-keep-docs/",
            "email": "HeyHCL@pnp-hcl.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "https://www.apache.org/licenses/LICENSE-2.0"
        }
    },
    "servers": [
        {
            "url": "http://localhost:8880/api/v1",
            "description": "Local development server"
        },
        {
            "url": "{protocol}://{yourserver}:{port}/api/v1",
            "description": "Actual Server",
            "variables": {
                "protocol": {
                    "default": "https"
                },
                "port": {
                    "default": "8880"
                },
                "yourserver": {
                    "default": "localhost",
                    "description": "Fully qualified domain name"
                }
            }
        }
    ],
    "paths": {
        "/admin/application": {
            "summary": "Creates an external application",
            "post": {
                "requestBody": {
                    "description": "client_name, client_uri, redirect_uris, scope are requested. Other properties will be generated by the API.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OAuthApplicationRequest"
                            },
                            "examples": {
                                "applicationSimpleRequest": {
                                    "value": {
                                        "client_name": "My App",
                                        "description": "Super cool demo App",
                                        "redirect_uris": [
                                            "http://localhost/callback",
                                            "https://domino.projectcastle.io/identity",
                                            "https://www.projectcastle.io/oauth"
                                        ],
                                        "scope": "demo $DECRYPT",
                                        "client_uri": "https://www.projectcastle.io/coolapp",
                                        "logo_uri": "https://www.projectcastle.io/castle.jpg",
                                        "contacts": [
                                            "admin@projectcastle.io"
                                        ],
                                        "status": "isActive"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "admin"
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OAuthApplicationResponse"
                                },
                                "examples": {
                                    "applicationResponseSimple": {
                                        "value": {
                                            "@unid": "B7EF2F8AC28AEDC44825882B000AD946",
                                            "author": "CN=John Doe/O=Mauraders",
                                            "client_name": "My App",
                                            "description": "Super cool demo App",
                                            "client_id": "abcdef-1234-567890",
                                            "hasSecret": false,
                                            "redirect_uris": [
                                                "http://localhost/callback",
                                                "https://domino.projectcastle.io/identity",
                                                "https://www.projectcastle.io/oauth"
                                            ],
                                            "scope": "demo $DECRYPT",
                                            "client_uri": "https://www.projectcastle.io/coolapp",
                                            "logo_uri": "https://www.projectcastle.io/castle.jpg",
                                            "token_endpoint_auth_method": "client_secret_basic",
                                            "contacts": [
                                                "admin@projectcastle.io"
                                            ],
                                            "status": "isActive"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Successful creation"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    },
                    "501": {
                        "$ref": "#/components/responses/501"
                    }
                },
                "security": [
                    {
                        "jwt": [
                        ]
                    }
                ],
                "operationId": "createKeepApplication",
                "summary": "Creates an external application",
                "x-keep-version": 1
            }
        },
        "/admin/applications": {
            "summary": "Gets all external applications created by current user.",
            "get": {
                "tags": [
                    "admin"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/OAuthApplicationResponse"
                                    }
                                },
                                "examples": {
                                    "Sample": {
                                        "value": "{\n    {\n        \"@unid\": \"B7EF2F8AC28AEDC44825882B000AD946\",\n        \"author\": \"CN=John Doe/O=Mauraders\",\n        \"client_id\": \"9c5fed-38c4-441808\",\n        \"client_name\": \"My App\",\n        \"hasSecret\": false,\n        \"client_uri\": \"https://www.projectcastle.io/coolapp\",\n        \"contacts\": [\n            \"admin@projectcastle.io\",\n            \"CN=John Doe/O=Mauraders\"\n        ],\n        \"description\": \"Super cool demo App\",\n        \"logo_uri\": \"https://www.projectcastle.io/castle.jpg\",\n        \"redirect_uris\": [\n            \"https://www.projectcastle.io/oauth\",\n            \"http://localhost/callback\",\n            \"https://domino.projectcastle.io/identity\"\n        ],\n        \"scope\": \"demo $DECRYPT\",\n        \"status\": \"isActive\",\n        \"token_endpoint_auth_method\": \"client_secret_basic\"\n    },\n    {\n        \"@unid\": \"ED192F6438FDE92B4825882B000D33CE\",\n        \"author\": \"CN=John Doe/O=Mauraders\",\n        \"client_id\": \"1814ef-0ea9-fa81cc\",\n        \"client_name\": \"My App1\",\n        \"hasSecret\": false,\n        \"client_uri\": \"https://www.projectcastle.io/coolapp\",\n        \"contacts\": [\n            \"admin@projectcastle.io\",\n            \"CN=John Doe/O=Mauraders\"\n        ],\n        \"description\": \"Super cool demo App\",\n        \"logo_uri\": \"https://www.projectcastle.io/castle.jpg\",\n        \"redirect_uris\": [\n            \"https://www.projectcastle.io/oauth\",\n            \"http://localhost/callback\",\n            \"https://domino.projectcastle.io/identity\"\n        ],\n        \"scope\": \"demo $DECRYPT\",\n        \"status\": \"isActive\",\n        \"token_endpoint_auth_method\": \"client_secret_basic\"\n    }\n}"
                                    }
                                }
                            }
                        },
                        "description": "Successful retrieval"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "jwt": [
                        ]
                    }
                ],
                "operationId": "fetchMyApplications",
                "summary": "Gets my applications",
                "x-keep-version": 1
            }
        },
        "/admin/applications/all": {
            "summary": "Gets all external application",
            "get": {
                "tags": [
                    "admin"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/OAuthApplicationResponse"
                                    }
                                },
                                "examples": {
                                    "Sample": {
                                        "value": "{\n    {\n        \"@unid\": \"513077EE061332B64825882A000A7FB3\",\n        \"author\": \"CN=Full Admin/O=ibahcl\",\n        \"client_id\": \"*\",\n        \"client_name\": \"*\",\n        \"hasSecret\": false,\n        \"client_uri\": \"\",\n        \"contacts\": [\n            \"CN=Full Admin/O=ibahcl\"\n        ],\n        \"description\": \"\",\n        \"logo_uri\": \"\",\n        \"redirect_uris\": [],\n        \"scope\": \"\",\n        \"status\": \"disabled\",\n        \"token_endpoint_auth_method\": \"client_secret_basic\"\n    },\n    {\n        \"@unid\": \"B7EF2F8AC28AEDC44825882B000AD946\",\n        \"author\": \"CN=John Doe/O=Mauraders\",\n        \"client_id\": \"9c5fed-38c4-441808\",\n        \"client_name\": \"My App\",\n        \"hasSecret\": false,\n        \"client_uri\": \"https://www.projectcastle.io/coolapp\",\n        \"contacts\": [\n            \"admin@projectcastle.io\",\n            \"CN=John Doe/O=Mauraders\"\n        ],\n        \"description\": \"Super cool demo App\",\n        \"logo_uri\": \"https://www.projectcastle.io/castle.jpg\",\n        \"redirect_uris\": [\n            \"https://www.projectcastle.io/oauth\",\n            \"http://localhost/callback\",\n            \"https://domino.projectcastle.io/identity\"\n        ],\n        \"scope\": \"demo $DECRYPT\",\n        \"status\": \"isActive\",\n        \"token_endpoint_auth_method\": \"client_secret_basic\"\n    },\n    {\n        \"@unid\": \"ED192F6438FDE92B4825882B000D33CE\",\n        \"author\": \"CN=John Doe/O=Mauraders\",\n        \"client_id\": \"1814ef-0ea9-fa81cc\",\n        \"client_name\": \"My App1\",\n        \"hasSecret\": false,\n        \"client_uri\": \"https://www.projectcastle.io/coolapp\",\n        \"contacts\": [\n            \"admin@projectcastle.io\",\n            \"CN=John Doe/O=Mauraders\"\n        ],\n        \"description\": \"Super cool demo App\",\n        \"logo_uri\": \"https://www.projectcastle.io/castle.jpg\",\n        \"redirect_uris\": [\n            \"https://www.projectcastle.io/oauth\",\n            \"http://localhost/callback\",\n            \"https://domino.projectcastle.io/identity\"\n        ],\n        \"scope\": \"demo $DECRYPT\",\n        \"status\": \"isActive\",\n        \"token_endpoint_auth_method\": \"client_secret_basic\"\n    }\n}"
                                    }
                                }
                            }
                        },
                        "description": "Successful retrieval"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "jwt": [
                        ]
                    }
                ],
                "operationId": "fetchAllApplications",
                "summary": "Gets all applications",
                "x-keep-version": 1
            }
        },
        "/auth/basic": {
            "summary": "Login using basic, get back JWT",
            "description": "Exchange a basic auth for a JWT Token in the JSON response.\nUse for troubled APIs",
            "get": {
                "tags": [
                    "authentication"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthResult"
                                }
                            }
                        },
                        "description": "Successful auth"
                    },
                    "401": {
                        "description": "Wrong credentials"
                    }
                },
                "security": [
                    {
                        "basic": [
                        ]
                    }
                ],
                "operationId": "authLoginBasic",
                "summary": "Get identity information",
                "description": "Submit username and password in an authentication header and get valid JWT in return",
                "x-keep-version": 5
            }
        },
        "/auth/extend": {
            "summary": "Replace JWT to extend session",
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AuthResult"
                            },
                            "examples": {
                                "AuthExtend": {
                                    "value": {
                                        "bearer": "{{AUTH_KEY}}"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "authentication"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthResult"
                                }
                            }
                        },
                        "description": "Successful renew"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    }
                },
                "security": [
                    {
                        "jwt": [
                        ]
                    }
                ],
                "operationId": "authRenewJwt",
                "summary": "Get a new JWT for processing",
                "x-keep-version": 5
            }
        },
        "/auth/logout": {
            "summary": "Log out a current JWT based user",
            "post": {
                "requestBody": {
                    "description": "Logout body, fixed format",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LogoutBody"
                            },
                            "examples": {
                                "AuthLogout": {
                                    "value": {
                                        "logout": "Yes"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "authentication"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StatusMessage"
                                },
                                "examples": {
                                    "logout": {
                                        "value": {
                                            "statusText": "OK",
                                            "status": 200,
                                            "message": "CN=John Doe/O=ProjectKeep logged out (0 days, 1 hours, 59 minutes, 40 seconds.)"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Successful logout"
                    }
                },
                "security": [
                    {
                        "jwt": [
                        ]
                    }
                ],
                "operationId": "authLogout",
                "summary": "Logout and invalidate token",
                "x-keep-version": 1
            }
        },
        "/lists": {
            "summary": "Provides the lists (views/folders) present in a database",
            "get": {
                "tags": [
                    "data"
                ],
                "parameters": [
                    {
                        "name": "type",
                        "description": "Allows to specify views, folders, all\nTODO: categorized / calendar distinction?",
                        "schema": {
                            "enum": [
                                "all",
                                "folders",
                                "views"
                            ],
                            "type": "string"
                        },
                        "in": "query"
                    },
                    {
                        "examples": {
                            "CustomApp": {
                                "value": "demo"
                            },
                            "Directory": {
                                "value": "dominodirectory"
                            }
                        },
                        "name": "dataSource",
                        "description": "Keep alias for the database to be queried",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ListDesignItem"
                                    }
                                },
                                "examples": {
                                    "lists": {
                                        "value": [
                                            {
                                                "title": "($All)",
                                                "isFolder": false,
                                                "alias": [
                                                ],
                                                "unid": "0E35D520A1EBBB5B48258435003E8284"
                                            },
                                            {
                                                "title": "Customers",
                                                "isFolder": false,
                                                "alias": [
                                                ],
                                                "unid": "86C72C1BF64B6DF04825847100373215"
                                            }
                                        ]
                                    }
                                }
                            }
                        },
                        "description": "Shows list of views and folders in the database"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    },
                    "501": {
                        "$ref": "#/components/responses/501"
                    }
                },
                "security": [
                    {
                        "jwt": [
                        ]
                    }
                ],
                "operationId": "fetchViews",
                "summary": "Provide information on available views/folders",
                "description": "Uses db.getViews() and filters out excluded views",
                "x-keep-version": 1
            },
            "parameters": [
                {
                    "name": "type",
                    "description": "Allows to specify views, folders, all\nTODO: categorized / calendar distinction?",
                    "schema": {
                        "enum": [
                            "all",
                            "folders",
                            "views"
                        ],
                        "type": "string"
                    },
                    "in": "query"
                },
                {
                    "examples": {
                        "CustomApp": {
                            "value": "demo"
                        },
                        "Directory": {
                            "value": "dominodirectory"
                        }
                    },
                    "name": "dataSource",
                    "description": "Keep alias for the database to be queried",
                    "schema": {
                        "type": "string"
                    },
                    "in": "query",
                    "required": true
                }
            ]
        },
        "/odata/{dataSource}/{name}": {
            "summary": "Retrieve ODATA service Document",
            "description": "JSON Structure describing what a database can do",
            "get": {
                "tags": [
                    "odata"
                ],
                "parameters": [
                    {
                        "name": "$select",
                        "description": "Comma separated list of fields to return",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query"
                    },
                    {
                        "name": "name",
                        "description": "Form or view name to query",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    },
                    {
                        "name": "$top",
                        "description": "How many responses shall be provided",
                        "schema": {
                            "type": "integer"
                        },
                        "in": "query"
                    },
                    {
                        "name": "$filter",
                        "description": "OData Query to filter results server side",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query"
                    },
                    {
                        "name": "$search",
                        "description": "Searching for content",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query"
                    },
                    {
                        "name": "$orderby",
                        "description": "Sort order of result",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query"
                    },
                    {
                        "name": "$skip",
                        "description": "Start at what number of entries",
                        "schema": {
                            "type": "integer"
                        },
                        "in": "query"
                    },
                    {
                        "name": "$count",
                        "description": "only count elements",
                        "schema": {
                            "type": "boolean"
                        },
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataDbNameResponse"
                                },
                                "examples": {
                                    "ODataDbNameResponse": {
                                        "value": {
                                            "@odata.context": "http://localhost:8880/api/v1/odata/testdb/$metadata#TestForm",
                                            "value": [
                                                {
                                                    "@odata.id": "http://localhost:8880/api/v1/odata/testdb/TestForm/40618262F3167AD74825881400245261",
                                                    "@odata.editLink": "http://localhost:8880/api/v1/odata/testdb/TestForm/40618262F3167AD74825881400245261",
                                                    "@odata.etag": "W/\" 6242a8fb\"",
                                                    "_x0040_unid": "40618262F3167AD74825881400245261",
                                                    "_x0040_parentUnid": "F29238E3622EB4FE48258814002451C8",
                                                    "_x0040_noteid": 6486,
                                                    "_x0040_created": "2022-03-29T14:36:43+08:00",
                                                    "_x0040_lastmodified": "2022-03-29T14:36:43+08:00",
                                                    "_x0040_revision": "bc021da739785e3a7efb4b3beebd5bcc",
                                                    "_x0040_lastaccessed": "2022-03-29T14:36:43+08:00",
                                                    "_x0040_size": 139,
                                                    "_x0040_unread": true,
                                                    "Color": "Yellow",
                                                    "Form": "TestForm",
                                                    "Pet": "Kelp gull",
                                                    "email": "patger7k@soup.io",
                                                    "first_name": "Pablo",
                                                    "gender": "Male",
                                                    "ip_address": "245.54.137.150",
                                                    "last_name": "Atger"
                                                },
                                                {
                                                    "@odata.id": "http://localhost:8880/api/v1/odata/testdb/TestForm/99A6E13F05C7153F4825881400250475",
                                                    "@odata.editLink": "http://localhost:8880/api/v1/odata/testdb/TestForm/99A6E13F05C7153F4825881400250475",
                                                    "@odata.etag": "W/\" 6242aac3\"",
                                                    "_x0040_unid": "99A6E13F05C7153F4825881400250475",
                                                    "_x0040_parentUnid": "C43804D7178AF0EB48258814002503EA",
                                                    "_x0040_noteid": 6546,
                                                    "_x0040_created": "2022-03-29T14:44:19+08:00",
                                                    "_x0040_lastmodified": "2022-03-29T14:44:19+08:00",
                                                    "_x0040_lastaccessed": "2022-03-29T14:44:19+08:00",
                                                    "_x0040_size": 139,
                                                    "_x0040_unread": true,
                                                    "Color": "Yellow",
                                                    "Form": "TestForm",
                                                    "Pet": "Kelp gull",
                                                    "email": "patger7k@soup.io",
                                                    "first_name": "Pablo",
                                                    "gender": "Male",
                                                    "ip_address": "245.54.137.150",
                                                    "last_name": "Atger"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Successful query"
                    }
                },
                "security": [
                    {
                        "basic": [
                        ]
                    },
                    {
                        "jwt": [
                        ]
                    }
                ],
                "operationId": "fetchOdata",
                "summary": "Get documents for Forms or Views in OData format",
                "description": "ODATA is JSON with defined Meta data",
                "x-keep-version": 1
            },
            "post": {
                "requestBody": {
                    "description": "Document body in JSON format. Key/value pairs of fields and their values to create. Some modes may not allow any editable fields, in which case an empty JSON object should be passed.\n\nThe Key \"Form\" is required, and also it should have configured mode \"odata\" beforehand. ",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DocumentSimpleRequest"
                            },
                            "examples": {
                                "CreateDocument": {
                                    "value": {
                                        "first_name": "Winslow",
                                        "last_name": "Andrews",
                                        "email": "wandrews@canofsleep.com",
                                        "gender": "Male",
                                        "ip_address": "192.168.1.1",
                                        "Color": "Pthalo Blue",
                                        "Pet": "American Howling Retriever",
                                        "Form": "TestForm"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "odata"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "description": "Form or view name to query",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataDocument"
                                },
                                "examples": {
                                    "ODataDbNameSample": {
                                        "value": {
                                            "@odata.id": "http://localhost:8880/api/v1/odata/testdb/TestForm/F2A2C0994C07063E48258818002FCDAB",
                                            "@odata.editLink": "http://localhost:8880/api/v1/odata/testdb/TestForm/F2A2C0994C07063E48258818002FCDAB",
                                            "@odata.etag": "W/\" 62480c60\"",
                                            "_x0040_unid": "F2A2C0994C07063E48258818002FCDAB",
                                            "_x0040_noteid": 6874,
                                            "_x0040_created": "2022-04-02T16:42:08+08:00",
                                            "_x0040_lastmodified": "2022-04-02T16:42:08+08:00",
                                            "_x0040_lastaccessed": "2022-04-02T16:42:08+08:00",
                                            "_x0040_size": 113,
                                            "_x0040_unread": true,
                                            "Color": "Pthalo Blue",
                                            "Form": "TestForm",
                                            "Pet": "American Howling Retriever",
                                            "email": "wandrews@canofsleep.com",
                                            "first_name": "Winslow",
                                            "gender": "Male",
                                            "ip_address": "192.168.1.1",
                                            "last_name": "Andrews"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Successful creation"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "406": {
                        "$ref": "#/components/responses/406"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "basic": [
                        ]
                    },
                    {
                        "jwt": [
                        ]
                    }
                ],
                "operationId": "createOdata",
                "description": "ODATA is JSON with defined Meta data",
                "x-keep-version": 1
            },
            "parameters": [
                {
                    "examples": {
                        "Demo": {
                            "value": "demo"
                        }
                    },
                    "name": "dataSource",
                    "description": "Alias name of the Keep database to query",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                },
                {
                    "name": "name",
                    "description": "Form or view name",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                },
                {
                    "examples": {
                        "Current": {
                            "value": "4.0"
                        }
                    },
                    "name": "OData-MaxVersion",
                    "description": "What do we support",
                    "schema": {
                        "type": "string"
                    },
                    "in": "header"
                },
                {
                    "examples": {
                        "Current": {
                            "value": "4.0"
                        }
                    },
                    "name": "OData-Version",
                    "description": "What version is requested",
                    "schema": {
                        "type": "string"
                    },
                    "in": "header"
                },
                {
                    "examples": {
                        "Current": {
                            "value": "3.0"
                        }
                    },
                    "name": "MaxDataServiceVersion",
                    "description": "What's the dataservice",
                    "schema": {
                        "type": "string"
                    },
                    "in": "header"
                }
            ]
        },
        "/odata/{dataSource}/{name}/{unid}": {
            "summary": "Retrieve data in ODATA format",
            "description": "return ONE element as ODATA",
            "get": {
                "tags": [
                    "odata"
                ],
                "parameters": [
                    {
                        "name": "$select",
                        "description": "Comma separated list of fields to return",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query"
                    },
                    {
                        "name": "unid",
                        "description": "UniqueID (primary key) of the item",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataDocument"
                                },
                                "examples": {
                                    "ODataDbNameUNIDSimple": {
                                        "value": {
                                            "@odata.id": "http://localhost:8880/api/v1/odata/testdb/TestForm/C1DB10AD7DCC3CC14825881D000C7AF1",
                                            "@odata.editLink": "http://localhost:8880/api/v1/odata/testdb/TestForm/C1DB10AD7DCC3CC14825881D000C7AF1",
                                            "@odata.etag": "W/\" 624ead27\"",
                                            "_x0040_unid": "C1DB10AD7DCC3CC14825881D000C7AF1",
                                            "_x0040_noteid": 6478,
                                            "_x0040_created": "2022-04-07T10:16:19+08:00",
                                            "_x0040_lastmodified": "2022-04-07T17:21:43+08:00",
                                            "_x0040_revision": "0639a77e0a84dbb566763e5e85a8a394",
                                            "_x0040_lastaccessed": "2022-04-07T17:21:43+08:00",
                                            "_x0040_size": 174,
                                            "_x0040_unread": true,
                                            "Color": "Orange",
                                            "Form": "TestForm",
                                            "email": "gsellickqu@ning.com",
                                            "gender": "Male",
                                            "ip_address": "155.247.81.139"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Successful query"
                    }
                },
                "security": [
                    {
                        "basic": [
                        ]
                    },
                    {
                        "jwt": [
                        ]
                    }
                ],
                "operationId": "getOdataItem",
                "summary": "Get an document in OData format",
                "description": "ODATA is JSON with defined Meta data",
                "x-keep-version": 1
            },
            "put": {
                "requestBody": {
                    "description": "Document body in JSON format. Key/value pairs of fields and their values to update. Some modes may not allow any editable fields, in which case an empty JSON object should be passed.\n\nThe Key \"Form\" is required, and also it should have configured mode \"odata\" beforehand. ",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DocumentSimpleRequest"
                            },
                            "examples": {
                                "UpdateOdataDocument": {
                                    "value": {
                                        "first_name": "Sandy",
                                        "last_name": "Peterson",
                                        "email": "sandy@canofsleep.com",
                                        "gender": "Male",
                                        "ip_address": "8.8.8.8",
                                        "Color": "Pthalo Green",
                                        "Pet": "Coyote",
                                        "Form": "TestForm"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "odata"
                ],
                "parameters": [
                    {
                        "examples": {
                            "revisionSimple": {
                                "value": "26372571825596dc0db73d0eacf1eacb"
                            }
                        },
                        "name": "revision",
                        "description": "This field records the current revision version of document. It's a 32-character hex-encoded string of date. \r\n\r\nIf db config \"requireRevisionToUpdate\" is enabled, then revision is required when update document and only update document when revision version is right.",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataDocument"
                                },
                                "examples": {
                                    "ODataDbNameUNIDResponse": {
                                        "value": {
                                            "@odata.id": "http://localhost:8880/api/v1/odata/testdb/TestForm/FEA2C8C21A2664AE48258814002CD992",
                                            "@odata.editLink": "http://localhost:8880/api/v1/odata/testdb/TestForm/FEA2C8C21A2664AE48258814002CD992",
                                            "@odata.etag": "W/\" 624d1dde\"",
                                            "_x0040_unid": "FEA2C8C21A2664AE48258814002CD992",
                                            "_x0040_noteid": 6598,
                                            "_x0040_created": "2022-03-29T16:09:52+08:00",
                                            "_x0040_lastmodified": "2022-04-06T12:58:06+08:00",
                                            "_x0040_revision": "bc021da739785e3a7efb4b3beebd5bcc",
                                            "_x0040_lastaccessed": "2022-03-29T16:09:52+08:00",
                                            "_x0040_size": 117,
                                            "_x0040_unread": true,
                                            "Color": "Pthalo Green",
                                            "Form": "TestForm",
                                            "Pet": "Coyote",
                                            "email": "sandy@canofsleep.com",
                                            "first_name": "Sandy",
                                            "gender": "Male",
                                            "ip_address": "8.8.8.8",
                                            "last_name": "Peterson"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    },
                    "501": {
                        "$ref": "#/components/responses/501"
                    }
                },
                "security": [
                    {
                        "basic": [
                        ]
                    },
                    {
                        "jwt": [
                        ]
                    }
                ],
                "operationId": "updateOdataDocument",
                "summary": "Perform an update on the document in OData format",
                "x-keep-version": 1
            },
            "parameters": [
                {
                    "examples": {
                        "Demo": {
                            "value": "demo"
                        }
                    },
                    "name": "dataSource",
                    "description": "Alias name of the Keep database to query",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                },
                {
                    "name": "unid",
                    "description": "UniqueId of document",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                },
                {
                    "name": "name",
                    "description": "Form name",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                },
                {
                    "examples": {
                        "Current": {
                            "value": "4.0"
                        }
                    },
                    "name": "OData-MaxVersion",
                    "description": "What do we support",
                    "schema": {
                        "type": "string"
                    },
                    "in": "header"
                },
                {
                    "examples": {
                        "Current": {
                            "value": "4.0"
                        }
                    },
                    "name": "OData-Version",
                    "description": "What version is requested",
                    "schema": {
                        "type": "string"
                    },
                    "in": "header"
                },
                {
                    "examples": {
                        "Current": {
                            "value": "3.0"
                        }
                    },
                    "name": "MaxDataServiceVersion",
                    "description": "What's the dataservice",
                    "schema": {
                        "type": "string"
                    },
                    "in": "header"
                }
            ]
        },
        "/query": {
            "summary": "Runs a DQL query against the documents in the database.",
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/QueryRequest"
                            },
                            "examples": {
                                "QueryDQL": {
                                    "value": {
                                        "query": "form = 'Customer' and Color = ?Color",
                                        "maxScanDocs": 500000,
                                        "maxScanEntries": 200000,
                                        "timeoutSecs": 300,
                                        "viewRefresh": true,
                                        "noViews": false,
                                        "mode": "dql",
                                        "variables": {
                                            "Color": "Maroon",
                                            "Pet": "Giraffe"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "data"
                ],
                "parameters": [
                    {
                        "name": "count",
                        "description": "How many entries shall be returned, default = Integer.MaxInteger",
                        "schema": {
                            "type": "integer"
                        },
                        "in": "query"
                    },
                    {
                        "examples": {
                            "CustomApp": {
                                "value": "demo"
                            },
                            "Directory": {
                                "value": "dominodirectory"
                            }
                        },
                        "name": "dataSource",
                        "description": "Keep alias for the database to be queried",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": true
                    },
                    {
                        "name": "action",
                        "description": "What shall be executed:parse the query, explain or execute",
                        "schema": {
                            "enum": [
                                "execute",
                                "explain",
                                "parse"
                            ],
                            "type": "string"
                        },
                        "in": "query",
                        "required": true
                    },
                    {
                        "name": "start",
                        "description": "at which entry should return values start (zero based), default = 0",
                        "schema": {
                            "type": "integer"
                        },
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {

                                    }
                                }
                            }
                        },
                        "description": "Succesful query showing results"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "406": {
                        "$ref": "#/components/responses/406"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    },
                    "501": {
                        "$ref": "#/components/responses/501"
                    }
                },
                "security": [
                    {
                        "jwt": [
                        ]
                    }
                ],
                "operationId": "query",
                "summary": "Send a DQL query and get JSON documents back",
                "x-keep-version": 1
            },
            "parameters": [
                {
                    "examples": {
                        "CustomApp": {
                            "value": "demo"
                        },
                        "Directory": {
                            "value": "dominodirectory"
                        }
                    },
                    "name": "dataSource",
                    "description": "Keep alias for the database to be queried",
                    "schema": {
                        "type": "string"
                    },
                    "in": "query",
                    "required": true
                },
                {
                    "examples": {
                        "RichTextAsMime": {
                            "value": "\"mime\""
                        }
                    },
                    "name": "richTextAs",
                    "description": "The format of RichText.  HTML is default",
                    "schema": {
                        "$ref": "#/components/schemas/RichTextRepresentation"
                    },
                    "in": "query"
                }
            ]
        },
        "/run/code": {
            "summary": "Execution request to server",
            "post": {
                "requestBody": {
                    "description": "Execution request",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ExecutionRequest"
                            },
                            "examples": {
                                "simpleagent": {
                                    "value": {
                                        "context": {
                                            "collection": [
                                                "94CA3B3B5E035D6048258471003639C6",
                                                "A7E1365AE618717F48258471003639E8",
                                                "E0FAAD06C9EBC8EB48258471003639EF"
                                            ],
                                            "document": "6C3F31222CA24AD448258471003639B3",
                                            "query": "Some DQL here",
                                            "view": "Customers"
                                        },
                                        "payload": "var treeSet = Java.type('java.util.TreeSet');\nvar javaJson = Java.type('io.vertx.core.json.JsonObject');\nvar result = new treeSet();\n\nfor each (var doc in keep.view.getAllDocuments()) {\n\tvar curCol = doc.get(\"Color\");\n\tif (curCol) {\n\t\tresult.add(curCol);\n\t}\n}\n\nfor each (var color in result) {\n\tkeep.results.add(color);\n}\n\nkeep.results.add(keep.document.generateXML());\n\nfor each (var unid in keep.collection) {\n\tvar rawJson = keep.database.getDocumentByUNID(unid).toJson(true);\n\tvar actualJson = new javaJson(rawJson);\n\tkeep.results.add(actualJson);\n}"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "code"
                ],
                "parameters": [
                    {
                        "examples": {
                            "CustomApp": {
                                "value": "demo"
                            },
                            "Directory": {
                                "value": "dominodirectory"
                            }
                        },
                        "name": "dataSource",
                        "description": "Keep alias for the database to be queried",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExecutionResult"
                                }
                            }
                        },
                        "description": "Successful execution"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "406": {
                        "$ref": "#/components/responses/406"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    },
                    "501": {
                        "$ref": "#/components/responses/501"
                    }
                },
                "security": [
                    {
                        "jwt": [
                        ]
                    }
                ],
                "operationId": "execute",
                "summary": "Send execution request to server",
                "description": "Sends JavaScript to a server to be executed in the Domino context",
                "x-keep-version": 5
            },
            "parameters": [
                {
                    "examples": {
                        "CustomApp": {
                            "value": "demo"
                        },
                        "Directory": {
                            "value": "dominodirectory"
                        }
                    },
                    "name": "dataSource",
                    "description": "Keep alias for the database to be queried",
                    "schema": {
                        "type": "string"
                    },
                    "in": "query",
                    "required": true
                }
            ]
        },
        "/run/codegroovy": {
            "summary": "Send groovy execution request to server",
            "post": {
                "requestBody": {
                    "description": "Execution request",
                    "content": {
                        "application/javascript": {
                            "schema": {
                                "type": "string"
                            },
                            "examples": {
                                "simpleGroovyRequest": {
                                    "value": "def result = [  \r\n   count: keep.view.getDocumentCount()\r\n];\r\ndef docs = new ArrayList();\r\ndef callback = { \r\n    doc, loop -> \r\n        docs.add([\r\n            color: doc.getItemValue(\"name\"),\r\n            first_name: doc.getItemValue(\"email\")\r\n        ])\r\n    result['docs'] = docs\r\n};\r\nkeep.view.forEachDocument(0, 2, callback)\r\nkeep.results.add(result)"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "code"
                ],
                "parameters": [
                    {
                        "examples": {
                            "CustomApp": {
                                "value": "demo"
                            },
                            "Directory": {
                                "value": "dominodirectory"
                            }
                        },
                        "name": "dataSource",
                        "description": "Keep alias for the database to be queried",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExecutionResult"
                                },
                                "examples": {
                                    "simpleGroovyResponse": {
                                        "value": {
                                            "results": [
                                                {
                                                    "count": 6,
                                                    "docs": [
                                                        {
                                                            "color": [
                                                                "Paxon"
                                                            ],
                                                            "first_name": [
                                                                "pmadre9y@rambler.ru"
                                                            ]
                                                        },
                                                        {
                                                            "color": [
                                                                "Paxon"
                                                            ],
                                                            "first_name": [
                                                                "pmadre9y@rambler.ru"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "errors": [
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Successful execution"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "406": {
                        "$ref": "#/components/responses/406"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    },
                    "501": {
                        "$ref": "#/components/responses/501"
                    }
                },
                "security": [
                    {
                        "jwt": [
                        ]
                    }
                ],
                "operationId": "executeGroovy",
                "summary": "Send execution request to server",
                "description": "Sends JavaScript to a server to be executed in the Domino context",
                "x-keep-version": 5
            },
            "parameters": [
                {
                    "examples": {
                        "UNIDs": {
                            "value": "94CA3B3B5E035D6048258471003639C6,A7E1365AE618717F48258471003639E8,E0FAAD06C9EBC8EB48258471003639EF"
                        }
                    },
                    "name": "collection",
                    "description": "Comma separated list of document ids, optional if DQL or view provided",
                    "schema": {
                        "type": "string"
                    },
                    "in": "query"
                },
                {
                    "name": "document",
                    "description": "Document unique ID, optional if DQL or view provided",
                    "schema": {
                        "type": "string"
                    },
                    "in": "query"
                },
                {
                    "examples": {
                        "CustomApp": {
                            "value": "demo"
                        },
                        "Directory": {
                            "value": "dominodirectory"
                        }
                    },
                    "name": "dataSource",
                    "description": "Keep alias for the database to be queried",
                    "schema": {
                        "type": "string"
                    },
                    "in": "query",
                    "required": true
                },
                {
                    "name": "view",
                    "description": "Name of a view to run agains, URLEncodedoptional if document or DQL provided",
                    "schema": {
                        "type": "string"
                    },
                    "in": "query"
                },
                {
                    "examples": {
                        "State": {
                            "value": "State%20%3D%20%27CA%27"
                        }
                    },
                    "name": "query",
                    "description": "URLEncoded DQL Query, optional if document or view provided. Used to refine which data the JavaScript should run against.",
                    "schema": {
                        "type": "string"
                    },
                    "in": "query"
                }
            ]
        },
        "/run/codejs": {
            "summary": "Send javascript execution request to server",
            "post": {
                "requestBody": {
                    "description": "Execution request",
                    "content": {
                        "text/plain": {
                            "schema": {
                                "type": "string"
                            },
                            "examples": {
                                "simpleViewRequest": {
                                    "value": "var result = {};\r\nresult[\"count\"] = keep.view.getDocumentCount();\r\nvar counter = 0;\r\nprint(\"COUNT = \" + keep.view.getDocumentCount());\r\nvar docs = [];\r\nkeep.view.forEachDocument(0, 2, function(doc, loop) {\r\n    print(\"loop: \" + doc.getItemValue(\"name\"));\r\n    counter++;\r\n    docs.push({\r\n        name: doc.getItemValue(\"name\"),\r\n        email: doc.getItemValue(\"email\")\r\n    })\r\n    result.docs = docs\r\n})\r\nkeep.results.add(result)\r\nprint(\"RESULT VIEW SIZE=\" + keep.results.size());\r\nprint(\"COUNTER=\" + counter);"
                                },
                                "simpleDocumentRequest": {
                                    "value": "keep.document.replaceItemValue(\"email\", \"demo@hcl.com\");\r\nkeep.document.save();"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "code"
                ],
                "parameters": [
                    {
                        "examples": {
                            "CustomApp": {
                                "value": "demo"
                            },
                            "Directory": {
                                "value": "dominodirectory"
                            }
                        },
                        "name": "dataSource",
                        "description": "Keep alias for the database to be queried",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExecutionResult"
                                },
                                "examples": {
                                    "simpleViewResponse": {
                                        "value": {
                                            "results": [
                                                {
                                                    "count": 6,
                                                    "docs": {
                                                        "0": {
                                                            "name": [
                                                                "Paxon"
                                                            ],
                                                            "email": [
                                                                "pmadre9y@rambler.ru"
                                                            ]
                                                        },
                                                        "1": {
                                                            "name": [
                                                                "Paxon"
                                                            ],
                                                            "email": [
                                                                "pmadre9y@rambler.ru"
                                                            ]
                                                        }
                                                    }
                                                }
                                            ],
                                            "errors": [
                                            ]
                                        }
                                    },
                                    "simpleDocumentResponse": {
                                        "value": {
                                            "results": [
                                                "Code completed without output"
                                            ],
                                            "errors": [
                                            ]
                                        }
                                    },
                                    "simpleErrorResponse": {
                                        "value": {
                                            "results": [
                                                "Code completed without output"
                                            ],
                                            "errors": [
                                                "TypeError: keep.database.getDocumentByUNID(unid).toJson is not a function in <eval> at line number 4"
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Successful execution"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "406": {
                        "$ref": "#/components/responses/406"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    },
                    "501": {
                        "$ref": "#/components/responses/501"
                    }
                },
                "security": [
                    {
                        "jwt": [
                        ]
                    }
                ],
                "operationId": "executeJavaScript",
                "summary": "Send execution request to server",
                "description": "Sends JavaScript to a server to be executed in the Domino context",
                "x-keep-version": 5
            },
            "parameters": [
                {
                    "examples": {
                        "UNIDs": {
                            "value": "94CA3B3B5E035D6048258471003639C6,A7E1365AE618717F48258471003639E8,E0FAAD06C9EBC8EB48258471003639EF"
                        }
                    },
                    "name": "collection",
                    "description": "Comma separated list of document ids, optional if DQL or view provided",
                    "schema": {
                        "type": "string"
                    },
                    "in": "query"
                },
                {
                    "name": "document",
                    "description": "Document unique ID, optional if DQL or view provided",
                    "schema": {
                        "type": "string"
                    },
                    "in": "query"
                },
                {
                    "examples": {
                        "CustomApp": {
                            "value": "demo"
                        },
                        "Directory": {
                            "value": "dominodirectory"
                        }
                    },
                    "name": "dataSource",
                    "description": "Keep alias for the database to be queried",
                    "schema": {
                        "type": "string"
                    },
                    "in": "query",
                    "required": true
                },
                {
                    "name": "view",
                    "description": "Name of a view to run agains, URLEncodedoptional if document or DQL provided",
                    "schema": {
                        "type": "string"
                    },
                    "in": "query"
                },
                {
                    "examples": {
                        "State": {
                            "value": "State%20%3D%20%27CA%27"
                        }
                    },
                    "name": "query",
                    "description": "URLEncoded DQL Query, optional if document or view provided. Used to refine which data the JavaScript should run against.",
                    "schema": {
                        "type": "string"
                    },
                    "in": "query"
                }
            ]
        },
        "/design/nsf": {
            "summary": "Create a database, based on a template if required",
            "description": "Create a database, in the meanwhile configure it known to KEEP. \n\nDefault ACL values for the database:\n- -default-, Editor\n- Anonymous, No Access\n- LocalDomainAdmins, Manager\n- LocalDomainServers, Manager\n- <Local Server Name>, Manager\n- OtherDomainServers, No Access\n- <Current User>, Manager",
            "post": {
                "requestBody": {
                    "description": "Just nsfPath and title are requested. templateName is not required.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DesignNSFSimple"
                            },
                            "examples": {
                                "sampleDb": {
                                    "value": {
                                        "nsfPath": "sampleDb.nsf",
                                        "title": "SampleDb"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "design"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DesignNSFSimple"
                                },
                                "examples": {
                                    "database": {
                                        "value": {
                                            "formulaEngine": "domino",
                                            "icon": "Base64 stuff, preferably SVG",
                                            "iconName": "KEEP",
                                            "nsfPath": "demo.nsf",
                                            "openAccess": true,
                                            "requireRevisionToUpdate": false,
                                            "agents": [
                                            ],
                                            "allowCode": false,
                                            "dqlAccess": true,
                                            "formAliases": {

                                            },
                                            "forms": [
                                            ],
                                            "description": "Blank Demo",
                                            "schemaName": "demo",
                                            "@unid": "3EBD0971F82CC4DD482588760017A48B"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "success"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "jwt": [
                        ]
                    }
                ],
                "operationId": "createNSF",
                "summary": "Create a database, based on a template if required",
                "description": "Create a database, based on the nsfPath and title in the request body, if required you can also configure the template in request body. ",
                "x-keep-version": 1
            },
            "parameters": [
                {
                    "examples": {
                        "Demo": {
                            "value": "\"demo\""
                        }
                    },
                    "name": "dataSource",
                    "description": "Keep Database",
                    "schema": {
                        "type": "string"
                    },
                    "in": "query",
                    "required": true
                }
            ]
        },
        "/run/formula": {
            "summary": "Tests formula for completeness and results",
            "post": {
                "requestBody": {
                    "description": "Formula to be checked",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FormulaRequest"
                            },
                            "examples": {
                                "simpleRequestWithUnid": {
                                    "value": {
                                        "user": "",
                                        "type": "domino",
                                        "formula": "@IsMember(\"[admin]\";@UserRoles)",
                                        "save": false,
                                        "unid": "773342CE75B79B7D4825883100453252",
                                        "query": ""
                                    }
                                },
                                "simpleRequestWithQuery": {
                                    "value": {
                                        "user": "",
                                        "type": "domino",
                                        "formula": "@IsMember(\"[admin]\";@UserRoles)",
                                        "save": false,
                                        "unid": "",
                                        "query": "form = 'Entry' and name = 'Paxon'"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "code"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FormulaResult"
                                },
                                "examples": {
                                    "simpleResponseWithUnid": {
                                        "value": {
                                            "result": [
                                                {
                                                    "unid": "773342CE75B79B7D4825883100453252",
                                                    "result": [
                                                        0
                                                    ]
                                                }
                                            ]
                                        }
                                    },
                                    "simpleResponseWithQuery": {
                                        "value": {
                                            "result": [
                                                {
                                                    "unid": "8C525AE6BE15DB6148258831001F5B7F",
                                                    "result": [
                                                        0
                                                    ]
                                                },
                                                {
                                                    "unid": "AA78E397F5397D054825883100453848",
                                                    "result": [
                                                        0
                                                    ]
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Successfull test of formula"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    },
                    "501": {
                        "$ref": "#/components/responses/501"
                    }
                },
                "security": [
                    {
                        "jwt": [
                        ]
                    }
                ],
                "operationId": "runFormula",
                "summary": "Post a formula  to Domino",
                "description": "Checks if a formula would execute properly. Mostly used for Keep AdminUI to test formula fields",
                "x-keep-version": 1
            },
            "parameters": [
                {
                    "examples": {
                        "default": {
                            "value": "\"demo\""
                        }
                    },
                    "name": "dataSource",
                    "description": "What database to test the formula against",
                    "schema": {
                        "type": "string"
                    },
                    "in": "query",
                    "required": true
                }
            ]
        },
        "/run/agentAsync": {
            "summary": "Runs an existing agent in a given database",
            "post": {
                "requestBody": {
                    "description": "Request body for run an agent asynchronously. agentName is required.  ",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AgentPayloadAsync"
                            },
                            "examples": {
                                "sample": {
                                    "value": {
                                        "agentName": "processJson",
                                        "payload": {
                                            "FirstName": "Adrian",
                                            "TestVal": "20",
                                            "TestBoolean": false
                                        },
                                        "runAsServer": false,
                                        "callbackUrl": "https://www.acme.com/api/callback",
                                        "method": "POST"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "code"
                ],
                "parameters": [
                    {
                        "examples": {
                            "CustomApp": {
                                "value": "demo"
                            },
                            "Directory": {
                                "value": "dominodirectory"
                            }
                        },
                        "name": "dataSource",
                        "description": "Keep alias for the database to be queried",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StatusMessage"
                                },
                                "examples": {
                                    "async": {
                                        "value": {
                                            "statusText": "OK",
                                            "status": 200,
                                            "message": "processing",
                                            "uuid": "f19a5167-3722-4abe-91ee-d27bab052df7"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Successful execution of agent"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "jwt": [
                        ]
                    }
                ],
                "operationId": "executeAgentAsync",
                "summary": "Runs an agent in a database asynchronously",
                "description": "Queues an existing agent to run asynchronously, serverside. Existing limits of agent execution duration apply, but the HTTP response will be delivered immediately. The response will include a UUID for the request, which can be used to check progress or cancel the agent.\n\nContent in the payload will be passed to the scheduler to identify run criteria.",
                "x-keep-version": 5
            },
            "parameters": [
                {
                    "examples": {
                        "CustomApp": {
                            "value": "demo"
                        },
                        "Directory": {
                            "value": "dominodirectory"
                        }
                    },
                    "name": "dataSource",
                    "description": "Keep alias for the database to be queried",
                    "schema": {
                        "type": "string"
                    },
                    "in": "query",
                    "required": true
                }
            ]
        },
        "/document": {
            "summary": "Create a document in the database for a specified form.  And it returns a NotesDocument object that represents the document.",
            "post": {
                "requestBody": {
                    "description": "Document body in JSON format. Key/value pairs of fields and their values to update, 'Form' is required.\n",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DominoDocument"
                            },
                            "examples": {
                                "CreateDocument": {
                                    "value": {
                                        "first_name": "George",
                                        "last_name": "Branthwaite",
                                        "email": "gbranthwaite0@nba.com",
                                        "gender": "Male",
                                        "ip_address": "91.254.204.27",
                                        "Color": "Red",
                                        "Pet": "Black-capped chickadee",
                                        "Form": "Customer"
                                    }
                                },
                                "CreateDocumentWithFieldGroup": {
                                    "value": {
                                        "Form": "SampleForm",
                                        "person": {
                                            "_1": {
                                                "name": "a1",
                                                "age": 100
                                            },
                                            "_3": {
                                                "name": "a3",
                                                "age": 103
                                            },
                                            "_2": {
                                                "name": "a2",
                                                "age": 102
                                            }
                                        },
                                        "Taste": "test"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "data"
                ],
                "parameters": [
                    {
                        "examples": {
                            "CustomApp": {
                                "value": "demo"
                            },
                            "Directory": {
                                "value": "dominodirectory"
                            }
                        },
                        "name": "dataSource",
                        "description": "Keep alias for the database to be queried",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": true
                    },
                    {
                        "name": "parentUnid",
                        "description": "UNID of an existing document, to make this a response document",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DominoDocument"
                                },
                                "examples": {
                                    "document": {
                                        "value": {
                                            "@unid": "CAE3F1BD3EB1033A0025870A002CDE3A",
                                            "@noteid": 0,
                                            "@created": "2021-07-06T08:10:04Z",
                                            "@lastmodified": "2021-07-06T08:10:04Z",
                                            "@revision": "26372571825596dc0db73d0eacf1eacb",
                                            "@lastaccessed": "2021-07-06T08:10:04Z",
                                            "@size": 104,
                                            "@unread": false,
                                            "@etag": "W/\" 60e40fdc\"",
                                            "Color": "Red",
                                            "email": "gbranthwaite0@nba.com",
                                            "first_name": "George",
                                            "Form": "Customer",
                                            "gender": "Male",
                                            "ip_address": "91.254.204.27",
                                            "last_name": "Branthwaite",
                                            "Pet": "Black-capped chickadee"
                                        }
                                    },
                                    "documentWithFieldGroup": {
                                        "value": {
                                            "@unid": "E88C6416BEADFF774825884600339D45",
                                            "@noteid": 6478,
                                            "@created": "2022-05-18T09:23:45Z",
                                            "@lastmodified": "2022-05-18T09:23:45Z",
                                            "@revision": "3d36ed72e022ae5914698c013deb13ad",
                                            "@lastaccessed": "2022-05-18T09:23:45Z",
                                            "@size": 93,
                                            "@unread": true,
                                            "@etag": "W/\" 6284bb21\"",
                                            "person": {
                                                "_0": {
                                                    "Age": 100,
                                                    "Name": "a1"
                                                },
                                                "_1": {
                                                    "Age": 102,
                                                    "Name": "a2"
                                                },
                                                "_2": {
                                                    "Age": 103,
                                                    "Name": "a3"
                                                }
                                            },
                                            "Form": "SampleForm",
                                            "Taste": "test"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Successful creation"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "406": {
                        "$ref": "#/components/responses/406"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "jwt": [
                        ]
                    }
                ],
                "operationId": "createDocument",
                "summary": "Create a new document for a specified form.",
                "x-keep-version": 1
            },
            "parameters": [
                {
                    "examples": {
                        "CustomApp": {
                            "value": "demo"
                        },
                        "Directory": {
                            "value": "dominodirectory"
                        }
                    },
                    "name": "dataSource",
                    "description": "Keep alias for the database to be queried",
                    "schema": {
                        "type": "string"
                    },
                    "in": "query",
                    "required": true
                }
            ]
        },
        "/bulk/create": {
            "summary": "Create multiple documents with a single call",
            "post": {
                "requestBody": {
                    "description": "Object with array property documents",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BulkCreateDocuments"
                            },
                            "examples": {
                                "SampleBulkCreateDocuments": {
                                    "value": {
                                        "documents": [
                                            {
                                                "Color": "Purple",
                                                "Form": "TestForm",
                                                "Pet": "Bandicoot, long-nosed",
                                                "email": "kaaronsohnf5@goo.ne.jp",
                                                "first_name": "Kristoffer",
                                                "gender": "Male",
                                                "last_name": "Aaronsohn"
                                            },
                                            {
                                                "Color": "Purple",
                                                "Form": "TestForm",
                                                "Pet": "Bandicoot, long-nosed",
                                                "email": "kaaronsohnf5@goo.ne.jp",
                                                "first_name": "Kristoffer",
                                                "gender": "Male",
                                                "last_name": "Aaronsohn"
                                            },
                                            {
                                                "Color": "Purple",
                                                "Form": "TestForm",
                                                "Pet": "Bandicoot, long-nosed",
                                                "email": "kaaronsohnf5@goo.ne.jp",
                                                "first_name": "Kristoffer",
                                                "gender": "Male",
                                                "last_name": "Aaronsohn"
                                            },
                                            {
                                                "Color": "Purple",
                                                "Form": "TestForm",
                                                "Pet": "Bandicoot, long-nosed",
                                                "email": "kaaronsohnf5@goo.ne.jp",
                                                "first_name": "Kristoffer",
                                                "gender": "Male",
                                                "last_name": "Aaronsohn"
                                            },
                                            {
                                                "Color": "Purple",
                                                "Form": "TestForm",
                                                "Pet": "Bandicoot, long-nosed",
                                                "email": "kaaronsohnf5@goo.ne.jp",
                                                "first_name": "Kristoffer",
                                                "gender": "Male",
                                                "last_name": "Aaronsohn"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "data"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object"
                                    }
                                },
                                "examples": {
                                    "SampleResponse": {
                                        "value": [
                                            {
                                                "@unid": "81E039D456E028D3482588140043410B",
                                                "@noteid": 6658,
                                                "@created": "2022-03-29T20:14:35+08:00",
                                                "@lastmodified": "2022-03-29T20:14:35+08:00",
                                                "@lastaccessed": "2022-03-29T20:14:35+08:00",
                                                "@size": 99,
                                                "@unread": true,
                                                "@etag": "W/\" 6242f82b\"",
                                                "Color": "Purple",
                                                "Form": "TestForm",
                                                "Pet": "Bandicoot, long-nosed",
                                                "email": "kaaronsohnf5@goo.ne.jp"
                                            },
                                            {
                                                "@unid": "597042E199754897482588140043410D",
                                                "@noteid": 6662,
                                                "@created": "2022-03-29T20:14:35+08:00",
                                                "@lastmodified": "2022-03-29T20:14:35+08:00",
                                                "@lastaccessed": "2022-03-29T20:14:35+08:00",
                                                "@size": 99,
                                                "@unread": true,
                                                "@etag": "W/\" 6242f82b\"",
                                                "Color": "Purple",
                                                "Form": "TestForm",
                                                "Pet": "Bandicoot, long-nosed",
                                                "email": "kaaronsohnf5@goo.ne.jp"
                                            },
                                            {
                                                "@unid": "D2E9CF578D0B3844482588140043410F",
                                                "@noteid": 6666,
                                                "@created": "2022-03-29T20:14:35+08:00",
                                                "@lastmodified": "2022-03-29T20:14:35+08:00",
                                                "@lastaccessed": "2022-03-29T20:14:35+08:00",
                                                "@size": 99,
                                                "@unread": true,
                                                "@etag": "W/\" 6242f82b\"",
                                                "Color": "Purple",
                                                "Form": "TestForm",
                                                "Pet": "Bandicoot, long-nosed",
                                                "email": "kaaronsohnf5@goo.ne.jp"
                                            },
                                            {
                                                "@unid": "05B08E4A7874C01E4825881400434111",
                                                "@noteid": 6670,
                                                "@created": "2022-03-29T20:14:35+08:00",
                                                "@lastmodified": "2022-03-29T20:14:35+08:00",
                                                "@lastaccessed": "2022-03-29T20:14:35+08:00",
                                                "@size": 99,
                                                "@unread": true,
                                                "@etag": "W/\" 6242f82b\"",
                                                "Color": "Purple",
                                                "Form": "TestForm",
                                                "Pet": "Bandicoot, long-nosed",
                                                "email": "kaaronsohnf5@goo.ne.jp"
                                            },
                                            {
                                                "@unid": "D650B4BF0DE3BB714825881400434113",
                                                "@noteid": 6674,
                                                "@created": "2022-03-29T20:14:35+08:00",
                                                "@lastmodified": "2022-03-29T20:14:35+08:00",
                                                "@lastaccessed": "2022-03-29T20:14:35+08:00",
                                                "@size": 99,
                                                "@unread": true,
                                                "@etag": "W/\" 6242f82b\"",
                                                "Color": "Purple",
                                                "Form": "TestForm",
                                                "Pet": "Bandicoot, long-nosed",
                                                "email": "kaaronsohnf5@goo.ne.jp"
                                            }
                                        ]
                                    }
                                }
                            }
                        },
                        "description": "Creation result. Returns success / failure for each document"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    },
                    "501": {
                        "$ref": "#/components/responses/501"
                    }
                },
                "security": [
                    {
                        "jwt": [
                        ]
                    }
                ],
                "operationId": "bulkCreateDocuments",
                "summary": "Create multiple documents in a single call",
                "x-keep-version": 1
            },
            "parameters": [
                {
                    "examples": {
                        "CustomApp": {
                            "value": "demo"
                        },
                        "Directory": {
                            "value": "dominodirectory"
                        }
                    },
                    "name": "dataSource",
                    "description": "Keep alias for the database to be queried",
                    "schema": {
                        "type": "string"
                    },
                    "in": "query",
                    "required": true
                }
            ]
        },
        "/bulk/unid": {
            "summary": "Retrieve multiple documents with a single call by unids",
            "post": {
                "requestBody": {
                    "description": "Object with mode and array document UNIDs.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BulkUnids"
                            },
                            "examples": {
                                "SampleBulkGetDocumentByUNID": {
                                    "value": {
                                        "mode": "default",
                                        "unids": [
                                            "D2E9CF578D0B3844482588140043410F",
                                            "05B08E4A7874C01E4825881400434111",
                                            "D650B4BF0DE3BB714825881400434113"
                                        ]
                                    }
                                },
                                "SampleBulkGetDocByUNIDNoMode": {
                                    "value": {
                                        "unids": [
                                            "D2E9CF578D0B3844482588140043410F",
                                            "05B08E4A7874C01E4825881400434111",
                                            "D650B4BF0DE3BB714825881400434113"
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "data"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object"
                                    }
                                },
                                "examples": {
                                    "SampleResponse": {
                                        "value": [
                                            {
                                                "@unid": "D2E9CF578D0B3844482588140043410F",
                                                "@noteid": 6666,
                                                "@created": "2022-03-29T20:14:35+08:00",
                                                "@lastmodified": "2022-03-30T08:44:58+08:00",
                                                "@lastaccessed": "2022-03-30T08:44:58+08:00",
                                                "@size": 134,
                                                "@unread": true,
                                                "@etag": "W/\" 6243a80a\"",
                                                "Color": "Purple",
                                                "form": "TestForm",
                                                "Pet": "Bandicoot, long-nosed",
                                                "email": "kaaronsohnf5@goo.ne.jp"
                                            },
                                            {
                                                "@unid": "05B08E4A7874C01E4825881400434111",
                                                "@noteid": 6670,
                                                "@created": "2022-03-29T20:14:35+08:00",
                                                "@lastmodified": "2022-03-30T08:44:58+08:00",
                                                "@lastaccessed": "2022-03-30T08:44:58+08:00",
                                                "@size": 134,
                                                "@unread": false,
                                                "@etag": "W/\" 6243a80a\"",
                                                "Color": "Purple",
                                                "form": "TestForm",
                                                "Pet": "Bandicoot, long-nosed",
                                                "email": "kaaronsohnf5@goo.ne.jp"
                                            },
                                            {
                                                "@unid": "D650B4BF0DE3BB714825881400434113",
                                                "@noteid": 6674,
                                                "@created": "2022-03-29T20:14:35+08:00",
                                                "@lastmodified": "2022-03-30T08:44:58+08:00",
                                                "@lastaccessed": "2022-03-30T08:44:58+08:00",
                                                "@size": 134,
                                                "@unread": false,
                                                "@etag": "W/\" 6243a80a\"",
                                                "Color": "Purple",
                                                "form": "TestForm",
                                                "Pet": "Bandicoot, long-nosed",
                                                "email": "kaaronsohnf5@goo.ne.jp"
                                            }
                                        ]
                                    }
                                }
                            }
                        },
                        "description": "Creation result. Returns success / failure for each document"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    },
                    "501": {
                        "$ref": "#/components/responses/501"
                    }
                },
                "security": [
                    {
                        "jwt": [
                        ]
                    }
                ],
                "operationId": "bulkGetDocumentsByUnid",
                "summary": "Retrieve multiple documents in a single call by unid",
                "x-keep-version": 1
            },
            "parameters": [
                {
                    "examples": {
                        "CustomApp": {
                            "value": "demo"
                        },
                        "Directory": {
                            "value": "dominodirectory"
                        }
                    },
                    "name": "dataSource",
                    "description": "Keep alias for the database to be queried",
                    "schema": {
                        "type": "string"
                    },
                    "in": "query",
                    "required": true
                },
                {
                    "examples": {
                        "RichTextAsMime": {
                            "value": "\"mime\""
                        }
                    },
                    "name": "richTextAs",
                    "description": "The format of RichText.  HTML is default",
                    "schema": {
                        "$ref": "#/components/schemas/RichTextRepresentation"
                    },
                    "in": "query"
                }
            ]
        },
        "/bulk/delete": {
            "summary": "Delete multiple documents with a single call",
            "post": {
                "requestBody": {
                    "description": "Object with mode and array document UNIDs. ",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BulkUnids"
                            },
                            "examples": {
                                "SampleBulkDelete": {
                                    "value": {
                                        "mode": "default",
                                        "unids": [
                                            "F6392938B2A8D0144825881400349085",
                                            "81E039D456E028D3482588140043410B"
                                        ]
                                    }
                                },
                                "SampleBulkDeleteWithoutMode": {
                                    "value": {
                                        "unids": [
                                            "F6392938B2A8D0144825881400349085",
                                            "81E039D456E028D3482588140043410B"
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "data"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object"
                                    }
                                },
                                "examples": {
                                    "SampleBulkDeleteResponse": {
                                        "value": [
                                            {
                                                "statusText": "OK",
                                                "status": 200,
                                                "message": "Document F6392938B2A8D0144825881400349085 deleted",
                                                "unid": "F6392938B2A8D0144825881400349085"
                                            },
                                            {
                                                "statusText": "OK",
                                                "status": 200,
                                                "message": "Document 81E039D456E028D3482588140043410B deleted",
                                                "unid": "81E039D456E028D3482588140043410B"
                                            }
                                        ]
                                    }
                                }
                            }
                        },
                        "description": "Creation result. Returns success / failure for each document"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    },
                    "501": {
                        "$ref": "#/components/responses/501"
                    }
                },
                "security": [
                    {
                        "jwt": [
                        ]
                    }
                ],
                "operationId": "bulkDeleteDocuments",
                "summary": "Delete multiple documents in a single call",
                "x-keep-version": 1
            },
            "parameters": [
                {
                    "examples": {
                        "CustomApp": {
                            "value": "demo"
                        },
                        "Directory": {
                            "value": "dominodirectory"
                        }
                    },
                    "name": "dataSource",
                    "description": "Keep alias for the database to be queried",
                    "schema": {
                        "type": "string"
                    },
                    "in": "query",
                    "required": true
                }
            ]
        },
        "/documentmodes/{unid}": {
            "summary": "Provides information of all enabled modes for the relevant document",
            "description": "Returns a JSON object of all the modes schemas available for the Form tied to this document.\n\nPeople can configure many different modes which have different fields with Read/Write/Both permission.",
            "get": {
                "tags": [
                    "data"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/KeepFormMode"
                                    }
                                },
                                "examples": {
                                    "sampleMode": {
                                        "value": "\r\n[\r\n    {\r\n        \"modeName\": \"default\",\r\n        \"validationRules\": [],\r\n        \"readAccessFormula\": {\r\n            \"formulaType\": \"domino\",\r\n            \"formula\": \"@True\"\r\n        },\r\n        \"writeAccessFormula\": {\r\n            \"formulaType\": \"domino\",\r\n            \"formula\": \"@True\"\r\n        },\r\n        \"deleteAccessFormula\": {\r\n            \"formulaType\": \"domino\",\r\n            \"formula\": \"@False\"\r\n        },\r\n        \"computeWithForm\": false,\r\n        \"required\": [],\r\n        \"fields\": [\r\n            {\r\n                \"name\": \"category\",\r\n                \"type\": \"array\",\r\n                \"format\": \"string\",\r\n                \"minitems\": -1,\r\n                \"uniqueitems\": false,\r\n                \"minimum\": 0.0,\r\n                \"maximum\": 0.0,\r\n                \"exclusiveMinimum\": -1.0,\r\n                \"readOnly\": false,\r\n                \"writeOnly\": false,\r\n                \"minLenght\": -1,\r\n                \"maxLength\": -1,\r\n                \"summaryField\": true\r\n            },\r\n            {\r\n                \"name\": \"city\",\r\n                \"type\": \"string\",\r\n                \"format\": \"string\",\r\n                \"minitems\": -1,\r\n                \"uniqueitems\": false,\r\n                \"minimum\": 0.0,\r\n                \"maximum\": 0.0,\r\n                \"exclusiveMinimum\": -1.0,\r\n                \"readOnly\": false,\r\n                \"writeOnly\": false,\r\n                \"minLenght\": -1,\r\n                \"maxLength\": -1,\r\n                \"summaryField\": true\r\n            },\r\n            {\r\n                \"name\": \"name\",\r\n                \"type\": \"string\",\r\n                \"format\": \"string\",\r\n                \"minitems\": -1,\r\n                \"uniqueitems\": false,\r\n                \"minimum\": 0.0,\r\n                \"maximum\": 0.0,\r\n                \"exclusiveMinimum\": -1.0,\r\n                \"readOnly\": false,\r\n                \"writeOnly\": false,\r\n                \"minLenght\": -1,\r\n                \"maxLength\": -1,\r\n                \"summaryField\": true\r\n            }\r\n        ],\r\n        \"readAccessFields\": [\r\n            {\r\n                \"name\": \"category\",\r\n                \"type\": \"array\",\r\n                \"format\": \"string\",\r\n                \"minitems\": -1,\r\n                \"uniqueitems\": false,\r\n                \"minimum\": 0.0,\r\n                \"maximum\": 0.0,\r\n                \"exclusiveMinimum\": -1.0,\r\n                \"readOnly\": false,\r\n                \"writeOnly\": false,\r\n                \"minLenght\": -1,\r\n                \"maxLength\": -1,\r\n                \"summaryField\": true\r\n            },\r\n            {\r\n                \"name\": \"city\",\r\n                \"type\": \"string\",\r\n                \"format\": \"string\",\r\n                \"minitems\": -1,\r\n                \"uniqueitems\": false,\r\n                \"minimum\": 0.0,\r\n                \"maximum\": 0.0,\r\n                \"exclusiveMinimum\": -1.0,\r\n                \"readOnly\": false,\r\n                \"writeOnly\": false,\r\n                \"minLenght\": -1,\r\n                \"maxLength\": -1,\r\n                \"summaryField\": true\r\n            },\r\n            {\r\n                \"name\": \"name\",\r\n                \"type\": \"string\",\r\n                \"format\": \"string\",\r\n                \"minitems\": -1,\r\n                \"uniqueitems\": false,\r\n                \"minimum\": 0.0,\r\n                \"maximum\": 0.0,\r\n                \"exclusiveMinimum\": -1.0,\r\n                \"readOnly\": false,\r\n                \"writeOnly\": false,\r\n                \"minLenght\": -1,\r\n                \"maxLength\": -1,\r\n                \"summaryField\": true\r\n            }\r\n        ],\r\n        \"writeAccessFields\": [\r\n            {\r\n                \"name\": \"category\",\r\n                \"type\": \"array\",\r\n                \"format\": \"string\",\r\n                \"minitems\": -1,\r\n                \"uniqueitems\": false,\r\n                \"minimum\": 0.0,\r\n                \"maximum\": 0.0,\r\n                \"exclusiveMinimum\": -1.0,\r\n                \"readOnly\": false,\r\n                \"writeOnly\": false,\r\n                \"minLenght\": -1,\r\n                \"maxLength\": -1,\r\n                \"summaryField\": true\r\n            },\r\n            {\r\n                \"name\": \"city\",\r\n                \"type\": \"string\",\r\n                \"format\": \"string\",\r\n                \"minitems\": -1,\r\n                \"uniqueitems\": false,\r\n                \"minimum\": 0.0,\r\n                \"maximum\": 0.0,\r\n                \"exclusiveMinimum\": -1.0,\r\n                \"readOnly\": false,\r\n                \"writeOnly\": false,\r\n                \"minLenght\": -1,\r\n                \"maxLength\": -1,\r\n                \"summaryField\": true\r\n            },\r\n            {\r\n                \"name\": \"name\",\r\n                \"type\": \"string\",\r\n                \"format\": \"string\",\r\n                \"minitems\": -1,\r\n                \"uniqueitems\": false,\r\n                \"minimum\": 0.0,\r\n                \"maximum\": 0.0,\r\n                \"exclusiveMinimum\": -1.0,\r\n                \"readOnly\": false,\r\n                \"writeOnly\": false,\r\n                \"minLenght\": -1,\r\n                \"maxLength\": -1,\r\n                \"summaryField\": true\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"modeName\": \"dql\",\r\n        \"validationRules\": [],\r\n        \"readAccessFormula\": {\r\n            \"formulaType\": \"domino\",\r\n            \"formula\": \"@True\"\r\n        },\r\n        \"writeAccessFormula\": {\r\n            \"formulaType\": \"domino\",\r\n            \"formula\": \"@True\"\r\n        },\r\n        \"deleteAccessFormula\": {\r\n            \"formulaType\": \"domino\",\r\n            \"formula\": \"@False\"\r\n        },\r\n        \"computeWithForm\": false,\r\n        \"required\": [],\r\n        \"fields\": [\r\n            {\r\n                \"name\": \"address1\",\r\n                \"type\": \"string\",\r\n                \"format\": \"string\",\r\n                \"minitems\": -1,\r\n                \"uniqueitems\": false,\r\n                \"minimum\": 0.0,\r\n                \"maximum\": 0.0,\r\n                \"exclusiveMinimum\": -1.0,\r\n                \"readOnly\": false,\r\n                \"writeOnly\": false,\r\n                \"minLenght\": -1,\r\n                \"maxLength\": -1,\r\n                \"summaryField\": true\r\n            },\r\n            {\r\n                \"name\": \"category\",\r\n                \"type\": \"array\",\r\n                \"format\": \"string\",\r\n                \"minitems\": -1,\r\n                \"uniqueitems\": false,\r\n                \"minimum\": 0.0,\r\n                \"maximum\": 0.0,\r\n                \"exclusiveMinimum\": -1.0,\r\n                \"readOnly\": false,\r\n                \"writeOnly\": false,\r\n                \"minLenght\": -1,\r\n                \"maxLength\": -1,\r\n                \"summaryField\": true\r\n            },\r\n            {\r\n                \"name\": \"name\",\r\n                \"type\": \"string\",\r\n                \"format\": \"string\",\r\n                \"minitems\": -1,\r\n                \"uniqueitems\": false,\r\n                \"minimum\": 0.0,\r\n                \"maximum\": 0.0,\r\n                \"exclusiveMinimum\": -1.0,\r\n                \"readOnly\": false,\r\n                \"writeOnly\": false,\r\n                \"minLenght\": -1,\r\n                \"maxLength\": -1,\r\n                \"summaryField\": true\r\n            }\r\n        ],\r\n        \"readAccessFields\": [\r\n            {\r\n                \"name\": \"address1\",\r\n                \"type\": \"string\",\r\n                \"format\": \"string\",\r\n                \"minitems\": -1,\r\n                \"uniqueitems\": false,\r\n                \"minimum\": 0.0,\r\n                \"maximum\": 0.0,\r\n                \"exclusiveMinimum\": -1.0,\r\n                \"readOnly\": false,\r\n                \"writeOnly\": false,\r\n                \"minLenght\": -1,\r\n                \"maxLength\": -1,\r\n                \"summaryField\": true\r\n            },\r\n            {\r\n                \"name\": \"category\",\r\n                \"type\": \"array\",\r\n                \"format\": \"string\",\r\n                \"minitems\": -1,\r\n                \"uniqueitems\": false,\r\n                \"minimum\": 0.0,\r\n                \"maximum\": 0.0,\r\n                \"exclusiveMinimum\": -1.0,\r\n                \"readOnly\": false,\r\n                \"writeOnly\": false,\r\n                \"minLenght\": -1,\r\n                \"maxLength\": -1,\r\n                \"summaryField\": true\r\n            },\r\n            {\r\n                \"name\": \"name\",\r\n                \"type\": \"string\",\r\n                \"format\": \"string\",\r\n                \"minitems\": -1,\r\n                \"uniqueitems\": false,\r\n                \"minimum\": 0.0,\r\n                \"maximum\": 0.0,\r\n                \"exclusiveMinimum\": -1.0,\r\n                \"readOnly\": false,\r\n                \"writeOnly\": false,\r\n                \"minLenght\": -1,\r\n                \"maxLength\": -1,\r\n                \"summaryField\": true\r\n            }\r\n        ],\r\n        \"writeAccessFields\": [\r\n            {\r\n                \"name\": \"address1\",\r\n                \"type\": \"string\",\r\n                \"format\": \"string\",\r\n                \"minitems\": -1,\r\n                \"uniqueitems\": false,\r\n                \"minimum\": 0.0,\r\n                \"maximum\": 0.0,\r\n                \"exclusiveMinimum\": -1.0,\r\n                \"readOnly\": false,\r\n                \"writeOnly\": false,\r\n                \"minLenght\": -1,\r\n                \"maxLength\": -1,\r\n                \"summaryField\": true\r\n            },\r\n            {\r\n                \"name\": \"category\",\r\n                \"type\": \"array\",\r\n                \"format\": \"string\",\r\n                \"minitems\": -1,\r\n                \"uniqueitems\": false,\r\n                \"minimum\": 0.0,\r\n                \"maximum\": 0.0,\r\n                \"exclusiveMinimum\": -1.0,\r\n                \"readOnly\": false,\r\n                \"writeOnly\": false,\r\n                \"minLenght\": -1,\r\n                \"maxLength\": -1,\r\n                \"summaryField\": true\r\n            },\r\n            {\r\n                \"name\": \"name\",\r\n                \"type\": \"string\",\r\n                \"format\": \"string\",\r\n                \"minitems\": -1,\r\n                \"uniqueitems\": false,\r\n                \"minimum\": 0.0,\r\n                \"maximum\": 0.0,\r\n                \"exclusiveMinimum\": -1.0,\r\n                \"readOnly\": false,\r\n                \"writeOnly\": false,\r\n                \"minLenght\": -1,\r\n                \"maxLength\": -1,\r\n                \"summaryField\": true\r\n            }\r\n        ]\r\n    }\r\n]"
                                    }
                                }
                            }
                        },
                        "description": "Modes available and details. **Response format TBA**"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    },
                    "501": {
                        "$ref": "#/components/responses/501"
                    }
                },
                "security": [
                    {
                        "jwt": [
                        ]
                    }
                ],
                "operationId": "getDocumentFormModes",
                "summary": "Returns the modes available and fields that can be edited",
                "x-keep-version": 1
            },
            "parameters": [
                {
                    "examples": {
                        "CustomApp": {
                            "value": "demo"
                        },
                        "Directory": {
                            "value": "dominodirectory"
                        }
                    },
                    "name": "dataSource",
                    "description": "Keep alias for the database to be queried",
                    "schema": {
                        "type": "string"
                    },
                    "in": "query",
                    "required": true
                },
                {
                    "examples": {
                        "sample": {
                            "value": "94CA3B3B5E035D6048258471003639C6"
                        }
                    },
                    "name": "unid",
                    "description": "Universal Id of the document to be acted upon",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/admin/application/{client_id}": {
            "summary": "Endpoint for approving / rejecting an application request",
            "get": {
                "tags": [
                    "admin"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OAuthApplicationResponse"
                                }
                            }
                        },
                        "description": "Successful retrieval"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "jwt": [
                        ]
                    }
                ],
                "operationId": "getKeepApplication",
                "summary": "Retrieves application configuration",
                "x-keep-version": 1
            },
            "put": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OAuthApplicationRequestUpdate"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "admin"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OAuthApplicationResponse"
                                }
                            }
                        },
                        "description": "Successful update"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "jwt": [
                        ]
                    }
                ],
                "operationId": "updateKeepApplication",
                "summary": "Updates an application configuration",
                "description": "Updates an application does not new application secret",
                "x-keep-version": 1
            },
            "delete": {
                "tags": [
                    "admin"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StatusMessage"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "status": "OK",
                                            "statusCode": 200,
                                            "message": "deletion complete",
                                            "details": {
                                                "appId": "1fe2cd-ac38-26c7d6"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Successful deletion"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "jwt": [
                        ]
                    }
                ],
                "operationId": "deleteKeepApplication",
                "summary": "Deletes an external application",
                "x-keep-version": 1
            },
            "parameters": [
                {
                    "examples": {
                        "Sample": {
                            "value": "1fe2cd-ac38-26c7d6"
                        }
                    },
                    "name": "client_id",
                    "description": "App ID",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/admin/cache": {
            "summary": "Access Keep cache of design element summaries",
            "description": "Get information about the Keep Cache object and eventually clear it",
            "get": {
                "tags": [
                    "admin"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminCache"
                                },
                                "examples": {
                                    "Simple cache": {
                                        "value": {
                                            "cached": true,
                                            "apiName": "testdb",
                                            "nsfPath": "Demo.nsf",
                                            "formcount": 8,
                                            "viewcount": 5,
                                            "agentcount": 2,
                                            "librarycount": 0
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Details on cache info"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "jwt": [
                        ]
                    }
                ],
                "operationId": "getCache",
                "summary": "Shows the current status of cached objects",
                "description": "Checks on cached objects",
                "x-keep-version": 5
            },
            "delete": {
                "tags": [
                    "admin"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StatusMessage"
                                },
                                "examples": {
                                    "statusMessage": {
                                        "value": {
                                            "status": "OK",
                                            "statusCode": 200,
                                            "message": "cache reset"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Cache cleared"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "jwt": [
                        ]
                    }
                ],
                "operationId": "deleteCache",
                "summary": "Resets the KEEP cache",
                "x-keep-version": 5
            }
        },
        "/attachments/{unid}/{attachmentName}": {
            "summary": "Retrieve a document's attachment",
            "description": "",
            "get": {
                "tags": [
                    "data"
                ],
                "responses": {
                    "200": {
                        "description": "Successful retrieval\nResponse does not contain a media type since a media type of an attachment can be any type.\nFor a list of well defined media types check the available documentation:\nhttps://www.iana.org/assignments/media-types/media-types.xhtml\n"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "jwt": [
                        ]
                    }
                ],
                "operationId": "getDocumentAttachment",
                "summary": "Retrieve a document's attachment",
                "x-keep-version": 1
            },
            "delete": {
                "tags": [
                    "data"
                ],
                "parameters": [
                    {
                        "name": "fieldName",
                        "description": "Name of the field in which the attachment resides. Pass this to remove the hotspot for the attachment from that rich text field, otherwise the hotspot will remain. If the attachment is attached directly to the document, not a field, there is not need to do this.",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StatusMessage"
                                },
                                "examples": {
                                    "complete": {
                                        "value": {
                                            "status": "OK",
                                            "statusCode": 200,
                                            "message": "deletion complete",
                                            "unid": "61CCE871E79E8DDB8025852F004DFF2D",
                                            "details": {
                                                "appId": "1fe2cd-ac38-26c7d6"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Success"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "jwt": [
                        ]
                    }
                ],
                "operationId": "deleteDocumentAttachment",
                "summary": "Removes an attachment",
                "x-keep-version": 1
            },
            "parameters": [
                {
                    "examples": {
                        "CustomApp": {
                            "value": "demo"
                        },
                        "Directory": {
                            "value": "dominodirectory"
                        }
                    },
                    "name": "dataSource",
                    "description": "Keep alias for the database to be queried",
                    "schema": {
                        "type": "string"
                    },
                    "in": "query",
                    "required": true
                },
                {
                    "examples": {
                        "attachmentName": {
                            "value": "myFile.xlsx"
                        }
                    },
                    "name": "attachmentName",
                    "description": "Name of the attachment",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                },
                {
                    "examples": {
                        "sample": {
                            "value": "94CA3B3B5E035D6048258471003639C6"
                        }
                    },
                    "name": "unid",
                    "description": "Universal Id of the document to be acted upon",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/auth/local": {
            "summary": "local id authentication",
            "description": "User might want to deploy Keep locally and interact with the ID deployed on their Notes client.\nThis endpoint will provide the session token. This endpoint only works on a Notes client.\nIt will NOT work on a Domino server",
            "get": {
                "tags": [
                    "authentication"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthResult"
                                }
                            }
                        },
                        "description": "Successful authentication with the local Notes.id"
                    }
                },
                "security": [
                    {

                    }
                ],
                "operationId": "authLocal",
                "summary": "establish session with local Notes.id",
                "description": "Allows for a local (Notes client) deployment to get a session based on the local Notes.id\nSuitable for applications that are installed local",
                "x-keep-version": 5,
                "x-drapi-nofly": "SERVER,EOS"
            }
        },
        "/document/{unid}": {
            "summary": "Actions on a document at a specific mode",
            "description": "Update access to a document will typically restrict which fields on the document can be changed.\n\nModes are used to define statuses for a document, and will a definition identifying which fields can be seen and changed. A patch request that includes fields outside those restrictions will throw a 400 error (bad request), specifying which fields are illegal or missing.",
            "get": {
                "tags": [
                    "data"
                ],
                "parameters": [
                    {
                        "examples": {
                            "CustomApp": {
                                "value": "customcontacts"
                            },
                            "Directory": {
                                "value": "dominodirectory"
                            }
                        },
                        "name": "dataSource",
                        "description": "Keep alias for the database to be queried",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": true
                    },
                    {
                        "examples": {
                            "compute": {
                                "value": "true"
                            }
                        },
                        "name": "computeWithForm",
                        "description": "Should a document be computed with its form's \"Default Value\", \"Input Translation\" and \"Input Validation\" formulas before retrieval",
                        "schema": {
                            "type": "boolean"
                        },
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DominoDocument"
                                },
                                "examples": {
                                    "document": {
                                        "value": {
                                            "@unid": "CAE3F1BD3EB1033A0025870A002CDE3A",
                                            "@noteid": 0,
                                            "@created": "2021-07-06T08:10:04Z",
                                            "@lastmodified": "2021-07-06T08:10:04Z",
                                            "@revision": "26372571825596dc0db73d0eacf1eacb",
                                            "@lastaccessed": "2021-07-06T08:10:04Z",
                                            "@size": 104,
                                            "@unread": false,
                                            "@etag": "W/\" 60e40fdc\"",
                                            "Color": "Red",
                                            "email": "gbranthwaite0@nba.com",
                                            "first_name": "George",
                                            "Form": "Customer",
                                            "gender": "Male",
                                            "ip_address": "91.254.204.27",
                                            "last_name": "Branthwaite",
                                            "Pet": "Black-capped chickadee"
                                        }
                                    },
                                    "documentWithFieldGroup": {
                                        "value": {
                                            "@unid": "E88C6416BEADFF774825884600339D45",
                                            "@noteid": 6478,
                                            "@created": "2022-05-18T09:23:45Z",
                                            "@lastmodified": "2022-05-18T09:23:45Z",
                                            "@revision": "3d36ed72e022ae5914698c013deb13ad",
                                            "@lastaccessed": "2022-05-18T09:23:45Z",
                                            "@size": 93,
                                            "@unread": true,
                                            "@etag": "W/\" 6284bb21\"",
                                            "person": {
                                                "_0": {
                                                    "Age": 100,
                                                    "Name": "a1"
                                                },
                                                "_1": {
                                                    "Age": 102,
                                                    "Name": "a2"
                                                },
                                                "_2": {
                                                    "Age": 103,
                                                    "Name": "a3"
                                                }
                                            },
                                            "Form": "SampleForm",
                                            "Taste": "test"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Successful retrieval"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "406": {
                        "$ref": "#/components/responses/406"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "jwt": [
                        ]
                    }
                ],
                "operationId": "getDocument",
                "summary": "Retrieve a given document at its appropriate mode",
                "x-keep-version": 1
            },
            "put": {
                "requestBody": {
                    "description": "Key/value pairs of fields and their values to update. Some modes may not allow any editable fields, in which case an empty JSON object should be passed. 'Form' is required.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DominoDocument"
                            },
                            "examples": {
                                "UpdateDocument": {
                                    "value": {
                                        "first_name": "Madison",
                                        "last_name": "Branthwaite",
                                        "email": "mbranthwaite0@nba.com",
                                        "gender": "Female",
                                        "ip_address": "91.254.204.27",
                                        "Color": "Puce",
                                        "Pet": "Black-capped chickadee",
                                        "Form": "TestForm"
                                    }
                                },
                                "UpdateDocumentWithFieldGroup": {
                                    "value": {
                                        "Form": "SampleForm",
                                        "Shape": "circle",
                                        "Color": "red",
                                        "person": {
                                            "_1": {
                                                "name": "yellow",
                                                "age": 19
                                            },
                                            "_3": {
                                                "name": "pink",
                                                "age": 25
                                            },
                                            "_2": {
                                                "name": "blue",
                                                "age": 20
                                            },
                                            "_4": {
                                                "name": "black",
                                                "age": 201
                                            }
                                        },
                                        "Taste": "test"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "data"
                ],
                "parameters": [
                    {
                        "name": "parentUnid",
                        "description": "UNID of an existing document, to make this a response document",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query"
                    },
                    {
                        "examples": {
                            "revisionSample": {
                                "value": "26372571825596dc0db73d0eacf1eacb"
                            }
                        },
                        "name": "revision",
                        "description": "This field records the current revision version of document. It's a 32-character hex-encoded string of date. \n\nIf db config \"requireRevisionToUpdate\" is enabled, then revision is required when update document and only update document when revision version is right.",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DominoDocument"
                                },
                                "examples": {
                                    "SampleUpdateDocument": {
                                        "value": {
                                            "@unid": "E04FD92A9FF476D54825881500293A20",
                                            "@noteid": 6682,
                                            "@created": "2022-03-30T15:30:18+08:00",
                                            "@lastmodified": "2022-03-30T15:45:24+08:00",
                                            "@revision": "26372571825596dc0db73d0eacf1eacb",
                                            "@lastaccessed": "2022-03-30T15:30:18+08:00",
                                            "@size": 140,
                                            "@unread": true,
                                            "@etag": "W/\" 62440a94\"",
                                            "Color": "Puce",
                                            "Form": "TestForm",
                                            "Pet": "Black-capped chickadee",
                                            "email": "mbranthwaite0@nba.com"
                                        }
                                    },
                                    "UpdateDocumentWithFieldGroup": {
                                        "value": {
                                            "@unid": "96186D25D18F0CBC4825884600335F21",
                                            "@noteid": 6474,
                                            "@created": "2022-05-18T09:21:06Z",
                                            "@lastmodified": "2022-05-18T09:41:43Z",
                                            "@revision": "853048ed326d676d69cb057c039e2138",
                                            "@lastaccessed": "2022-05-18T09:41:43Z",
                                            "@size": 139,
                                            "@unread": true,
                                            "@etag": "W/\" 6284bf57\"",
                                            "person": {
                                                "_0": {
                                                    "Age": 19,
                                                    "Name": "yellow"
                                                },
                                                "_1": {
                                                    "Age": 20,
                                                    "Name": "blue"
                                                },
                                                "_2": {
                                                    "Age": 25,
                                                    "Name": "pink"
                                                },
                                                "_3": {
                                                    "Age": 201,
                                                    "Name": "black"
                                                }
                                            },
                                            "Color": "red",
                                            "Form": "SampleForm",
                                            "Shape": "circle",
                                            "Taste": "test"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Successful mode operation"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    },
                    "501": {
                        "$ref": "#/components/responses/501"
                    }
                },
                "security": [
                    {
                        "jwt": [
                        ]
                    }
                ],
                "operationId": "updateDocument",
                "summary": "Perform an update on the document at the relevant mode",
                "x-keep-version": 1
            },
            "delete": {
                "tags": [
                    "data"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StatusMessage"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "status": "OK",
                                            "statusCode": 200,
                                            "message": "deletion complete",
                                            "unid": "61CCE871E79E8DDB8025852F004DFF2D"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Returns data from the document"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    },
                    "501": {
                        "$ref": "#/components/responses/501"
                    }
                },
                "security": [
                    {
                        "jwt": [
                        ]
                    }
                ],
                "operationId": "deleteDocument",
                "summary": "Delete the given document",
                "x-keep-version": 1
            },
            "parameters": [
                {
                    "examples": {
                        "CustomApp": {
                            "value": "customcontacts"
                        },
                        "Directory": {
                            "value": "dominodirectory"
                        }
                    },
                    "name": "dataSource",
                    "description": "Keep alias for the database to be queried",
                    "schema": {
                        "type": "string"
                    },
                    "in": "query",
                    "required": true
                },
                {
                    "examples": {
                        "sample": {
                            "value": "94CA3B3B5E035D6048258471003639C6"
                        }
                    },
                    "name": "unid",
                    "description": "Universal Id of the document to be acted upon",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                },
                {
                    "examples": {
                        "defaultValue": {
                            "value": "\"default\""
                        },
                        "ForApprover": {
                            "value": "\"approver\""
                        }
                    },
                    "name": "mode",
                    "description": "mode to perform the document access in. Defaults to 'default' if missing. All lowercase, no spaces, letters and numbers only",
                    "schema": {
                        "type": "string"
                    },
                    "in": "query",
                    "required": false
                },
                {
                    "examples": {
                        "RichTextAsMime": {
                            "value": "\"mime\""
                        }
                    },
                    "name": "richTextAs",
                    "description": "The format RichText fields will be returned.  The default if unspecified is html.",
                    "schema": {
                        "$ref": "#/components/schemas/RichTextRepresentation"
                    },
                    "in": "query"
                }
            ]
        },
        "/lists/{name}": {
            "description": "Those are list entries, not the underlying documents",
            "get": {
                "tags": [
                    "data"
                ],
                "parameters": [
                    {
                        "examples": {
                            "CustomApp": {
                                "value": "demo"
                            },
                            "Directory": {
                                "value": "dominodirectory"
                            }
                        },
                        "name": "dataSource",
                        "description": "Keep alias for the database to be queried",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": true
                    },
                    {
                        "name": "mode",
                        "description": "Document mode to retrieve the documents with. Current user must qualify for those",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {

                                    }
                                },
                                "examples": {
                                    "sample": {
                                        "value": [
                                            {
                                                "@unid": "B66880940B8DDC12802585180049E945",
                                                "@noteid": 82542,
                                                "@index": "1",
                                                "$0": "null",
                                                "$10": "Aaron Aaron",
                                                "City": "Kansas City",
                                                "Created": "2020-02-24T13:27:18.450Z",
                                                "EMail": "aaaron@renovations.com",
                                                "FirstName": "Aaron",
                                                "Id": "CN=Aaron Aaron/O=Renovations",
                                                "LastName": "Aaron",
                                                "State": "KS"
                                            }
                                        ]
                                    }
                                }
                            }
                        },
                        "description": "Data coming back, including unids. Metadata is listed first, with JSON property names prefixed with \"@\". All entry fields follow, output in alphabetical order."
                    }
                },
                "security": [
                    {
                        "jwt": [
                        ]
                    }
                ],
                "operationId": "fetchViewEntries",
                "summary": "Pulls in view data",
                "x-keep-version": 1
            },
            "parameters": [
                {
                    "name": "count",
                    "description": "How many entries shall be returned, default = Integer.MaxInteger",
                    "schema": {
                        "type": "integer"
                    },
                    "in": "query"
                },
                {
                    "examples": {
                        "CustomApp": {
                            "value": "demo"
                        },
                        "Directory": {
                            "value": "dominodirectory"
                        }
                    },
                    "name": "dataSource",
                    "description": "Keep alias for the database to be queried",
                    "schema": {
                        "type": "string"
                    },
                    "in": "query",
                    "required": true
                },
                {
                    "name": "name",
                    "description": "Name of the view or folder",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                },
                {
                    "name": "scope",
                    "description": "What shall the view return:\n- document entries\n- category names\n- all",
                    "schema": {
                        "enum": [
                            "all",
                            "categories",
                            "documents"
                        ],
                        "type": "string"
                    },
                    "in": "query",
                    "required": false
                },
                {
                    "name": "start",
                    "description": "at which entry should return values start (zero based), default = 0",
                    "schema": {
                        "type": "integer"
                    },
                    "in": "query"
                },
                {
                    "examples": {
                        "State": {
                            "value": "\"MI\""
                        },
                        "State and City": {
                            "value": "\"MI,Ann Arbor\""
                        }
                    },
                    "name": "key",
                    "description": "Useful for categorised or sorted lists. Limits return values to entries matching the key or keys. Separate multiple values with commas, where the first value will be matched to the first sorted column, the second value to the second sorted column etc.",
                    "schema": {
                        "type": "string"
                    },
                    "in": "query"
                },
                {
                    "name": "documents",
                    "description": "Shall the query return documents instead of view entries",
                    "schema": {
                        "type": "boolean"
                    },
                    "in": "query"
                },
                {
                    "name": "column",
                    "description": "Column for alternative sorting. This requires the list to be designed for indexing on this column",
                    "schema": {
                        "type": "string"
                    },
                    "in": "query"
                },
                {
                    "name": "direction",
                    "description": "The direction for alternative sorting. This is ignored unless \"column\" query parameter is passed as well. This requires the list to be designed for indexing on this column in the desired direction",
                    "schema": {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string"
                    },
                    "in": "query"
                },
                {
                    "name": "startsWith",
                    "description": "A character combination to perform a partial match to identify a starting point. The character combination will be applied to the \"column\" and \"direction\" passed in the query string. This cannot be combined with the \"keys\" parameter, i.e. you cannot filter on keys and startwith within that key.",
                    "schema": {
                        "type": "string"
                    },
                    "in": "query"
                }
            ]
        },
        "/listspivot/{name}": {
            "summary": "Performs Pivot table operation on list entries",
            "description": "Operates on list entries only, not the underlying documents",
            "get": {
                "tags": [
                    "data"
                ],
                "parameters": [
                    {
                        "examples": {
                            "CustomApp": {
                                "value": "demo"
                            },
                            "Directory": {
                                "value": "dominodirectory"
                            }
                        },
                        "name": "dataSource",
                        "description": "Keep alias for the database to be queried",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": true
                    },
                    {
                        "name": "mode",
                        "description": "Document mode to retrieve the documents with. Current user must qualify for those",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Data coming back, including unids. Metadata is listed first, with JSON property names prefixed with \"@\". All entry fields follow, output in alphabetical order."
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "jwt": [
                        ]
                    }
                ],
                "operationId": "pivotViewEntries",
                "summary": "Processes view data as pivot",
                "description": "Computes min, max, count, total of retrieved view entries",
                "x-keep-version": 1
            },
            "parameters": [
                {
                    "name": "count",
                    "description": "How many entries shall be returned, default = Integer.MaxInteger",
                    "schema": {
                        "type": "integer"
                    },
                    "in": "query"
                },
                {
                    "examples": {
                        "CustomApp": {
                            "value": "demo"
                        },
                        "Directory": {
                            "value": "dominodirectory"
                        }
                    },
                    "name": "dataSource",
                    "description": "Keep alias for the database to be queried",
                    "schema": {
                        "type": "string"
                    },
                    "in": "query",
                    "required": true
                },
                {
                    "name": "name",
                    "description": "Name of the view or folder",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                },
                {
                    "name": "scope",
                    "description": "What shall the view return:\n- document entries\n- category names\n- all",
                    "schema": {
                        "enum": [
                            "all",
                            "categories",
                            "documents"
                        ],
                        "type": "string"
                    },
                    "in": "query",
                    "required": false
                },
                {
                    "name": "start",
                    "description": "at which entry should return values start (zero based), default = 0",
                    "schema": {
                        "type": "integer"
                    },
                    "in": "query"
                },
                {
                    "examples": {
                        "State": {
                            "value": "\"MI\""
                        },
                        "State and City": {
                            "value": "\"MI,Ann Arbor\""
                        }
                    },
                    "name": "key",
                    "description": "Useful for categorised or sorted lists. Limits return values to entries matching the key or keys. Separate multiple values with commas, where the first value will be matched to the first sorted column, the second value to the second sorted column etc.",
                    "schema": {
                        "type": "string"
                    },
                    "in": "query"
                },
                {
                    "name": "column",
                    "description": "Column for alternative sorting. This requires the list to be designed for indexing on this column",
                    "schema": {
                        "type": "string"
                    },
                    "in": "query"
                },
                {
                    "name": "direction",
                    "description": "The direction for alternative sorting. This is ignored unless \"column\" query parameter is passed as well. This requires the list to be designed for indexing on this column in the desired direction",
                    "schema": {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string"
                    },
                    "in": "query"
                },
                {
                    "name": "startsWith",
                    "description": "A character combination to perform a partial match to identify a starting point. The character combination will be applied to the \"column\" and \"direction\" passed in the query string. This cannot be combined with the \"keys\" parameter, i.e. you cannot filter on keys and startwith within that key.",
                    "schema": {
                        "type": "string"
                    },
                    "in": "query"
                },
                {
                    "name": "pivotColumn",
                    "description": "Name of the column to provide the data for the pivot aggregator",
                    "schema": {
                        "type": "string"
                    },
                    "in": "query",
                    "required": true
                }
            ]
        },
        "/bulk/update": {
            "summary": "Update multiple documents with a single call",
            "patch": {
                "requestBody": {
                    "description": "Object with query, mode and fields to update",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BulkUpdateDocuments"
                            },
                            "examples": {
                                "SampleBulkUpdate": {
                                    "value": {
                                        "maxScanDocs": 500000,
                                        "maxScanEntries": 200000,
                                        "mode": "default",
                                        "noViews": false,
                                        "returnUpdatedDocument": false, 
                                        "query": "Form = 'TestForm' and first_name = 'Kristoffer' and last_name = 'Aaronsohn'",
                                        "replaceItems": {
                                            "first_name": "TestName"
                                        },
                                        "timeoutSecs": 300,
                                        "viewRefresh": true
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "data"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object"
                                    }
                                },
                                "examples": {
                                    "SampleBulkUpdateResponse": {
                                        "value": [
                                            {
                                                "@unid": "D2E9CF578D0B3844482588140043410F",
                                                "@noteid": 6666,
                                                "@created": "2022-03-29T20:14:35+08:00",
                                                "@lastmodified": "2022-03-30T08:44:58+08:00",
                                                "@lastaccessed": "2022-03-29T20:14:35+08:00",
                                                "@size": 124,
                                                "@unread": true,
                                                "@etag": "W/\" 6243a80a\"",
                                                "Color": "Purple",
                                                "form": "TestForm",
                                                "Pet": "Bandicoot, long-nosed",
                                                "email": "kaaronsohnf5@goo.ne.jp"
                                            },
                                            {
                                                "@unid": "05B08E4A7874C01E4825881400434111",
                                                "@noteid": 6670,
                                                "@created": "2022-03-29T20:14:35+08:00",
                                                "@lastmodified": "2022-03-30T08:44:58+08:00",
                                                "@lastaccessed": "2022-03-29T20:14:35+08:00",
                                                "@size": 124,
                                                "@unread": true,
                                                "@etag": "W/\" 6243a80a\"",
                                                "Color": "Purple",
                                                "form": "TestForm",
                                                "Pet": "Bandicoot, long-nosed",
                                                "email": "kaaronsohnf5@goo.ne.jp"
                                            },
                                            {
                                                "@unid": "D650B4BF0DE3BB714825881400434113",
                                                "@noteid": 6674,
                                                "@created": "2022-03-29T20:14:35+08:00",
                                                "@lastmodified": "2022-03-30T08:44:58+08:00",
                                                "@lastaccessed": "2022-03-29T20:14:35+08:00",
                                                "@size": 124,
                                                "@unread": true,
                                                "@etag": "W/\" 6243a80a\"",
                                                "Color": "Purple",
                                                "form": "TestForm",
                                                "Pet": "Bandicoot, long-nosed",
                                                "email": "kaaronsohnf5@goo.ne.jp"
                                            }
                                        ]
                                    }
                                }
                            }
                        },
                        "description": "Update result. Returns success / failure for each document"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    },
                    "501": {
                        "$ref": "#/components/responses/501"
                    }
                },
                "security": [
                    {
                        "jwt": [
                        ]
                    }
                ],
                "operationId": "bulkUpdateDocumentsByQuery",
                "summary": "Update multiple documents in a single call",
                "x-keep-version": 1
            },
            "parameters": [
                {
                    "examples": {
                        "CustomApp": {
                            "value": "demo"
                        },
                        "Directory": {
                            "value": "dominodirectory"
                        }
                    },
                    "name": "dataSource",
                    "description": "Keep alias for the database to be queried",
                    "schema": {
                        "type": "string"
                    },
                    "in": "query",
                    "required": true
                }
            ]
        },
        "/admin/backup": {
            "summary": "Backup / Restore of entire KEEP configuration",
            "description": "Everything that is in KeepConfig, so it can be applied else where\nor reapplied after version change",
            "get": {
                "tags": [
                    "admin"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminBackup"
                                },
                                "examples": {
                                    "adminBackupSample": {
                                        "value": {
                                            "version": {
                                                "keep-name": "Domino Keep API",
                                                "keep-desc": "Next generation APIs for HCL Domino",
                                                "image-build": "2022-05-17 14:26",
                                                "keep-vendor": "HCL Labs",
                                                "keep-version": "1.5.0-SNAPSHOT-LocalBuild"
                                            },
                                            "databases": {
                                                "keepconfig": {
                                                    "apiName": "keepconfig",
                                                    "nsfPath": "KeepConfig.nsf",
                                                    "iconName": "mountain",
                                                    "icon": "Base64 stuff, preferably SVG",
                                                    "description": "Configuration settings for the KEEP API, handle with care",
                                                    "schemaName": "keepconfig",
                                                    "active": true,
                                                    "requireRevisionToUpdate": false,
                                                    "allowDecryption": false,
                                                    "cacheTimestamp": 1,
                                                    "dqlAccess": true,
                                                    "dqlFormula": {
                                                        "formulaType": "domino",
                                                        "formula": "@False"
                                                    },
                                                    "allowCode": true,
                                                    "openAccess": true,
                                                    "forms": [
                                                    ],
                                                    "views": [
                                                    ],
                                                    "agents": [
                                                    ],
                                                    "formAliases": {

                                                    },
                                                    "availableViews": [
                                                    ],
                                                    "configuredForms": [
                                                    ],
                                                    "dxlpath": "D:\\Program Files (x86)\\HCL\\Notes\\Data\\dxl.d\\KeepConfig.nsf.dxl"
                                                }
                                            },
                                            "apps": {
                                                "unknown": {
                                                    "@unid": "D5000DB73418654A4825884400339438",
                                                    "author": "CN=John Doe/O=ProjectKeep",
                                                    "client_id": "d88b3b-4bd1-fe3dd2",
                                                    "client_name": "My Demo Application",
                                                    "hasSecret": false,
                                                    "client_uri": "",
                                                    "contacts": [
                                                        "CN=John Doe/O=ProjectKeep"
                                                    ],
                                                    "description": "",
                                                    "logo_uri": "",
                                                    "redirect_uris": [
                                                    ],
                                                    "scope": "",
                                                    "status": "disabled",
                                                    "token_endpoint_auth_method": "client_secret_basic"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Successful retrieval"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "jwt": [
                        ]
                    }
                ],
                "operationId": "getKeepConfig",
                "summary": "Retrieves KEEP configuration",
                "x-keep-version": 1
            },
            "put": {
                "requestBody": {
                    "description": "KeepConfig configuration to merge",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AdminBackup"
                            },
                            "examples": {
                                "adminBackupRequestSample": {
                                    "value": {
                                        "version": {
                                            "keep-name": "Domino Keep API",
                                            "keep-desc": "Next generation APIs for HCL Domino",
                                            "image-build": "2022-05-17 14:26",
                                            "keep-vendor": "HCL Labs",
                                            "keep-version": "1.5.0-SNAPSHOT-LocalBuild"
                                        },
                                        "databases": {
                                            "keepconfig": {
                                                "apiName": "keepconfig",
                                                "nsfPath": "KeepConfig.nsf",
                                                "iconName": "mountain",
                                                "icon": "Base64 stuff, preferably SVG",
                                                "description": "Configuration settings for the KEEP API, handle with care",
                                                "schemaName": "keepconfig",
                                                "active": true,
                                                "requireRevisionToUpdate": false,
                                                "allowDecryption": false,
                                                "cacheTimestamp": 1,
                                                "dqlAccess": true,
                                                "dqlFormula": {
                                                    "formulaType": "domino",
                                                    "formula": "@False"
                                                },
                                                "allowCode": true,
                                                "openAccess": true,
                                                "forms": [
                                                ],
                                                "views": [
                                                ],
                                                "agents": [
                                                ],
                                                "formAliases": {

                                                },
                                                "availableViews": [
                                                ],
                                                "configuredForms": [
                                                ],
                                                "dxlpath": "D:\\Program Files (x86)\\HCL\\Notes\\Data\\dxl.d\\KeepConfig.nsf.dxl"
                                            },
                                            "names": {
                                                "apiName": "names",
                                                "nsfPath": "names.nsf",
                                                "iconName": "mountain",
                                                "icon": "Base64 stuff, preferably SVG",
                                                "description": "Domino Directory on current Runtime",
                                                "schemaName": "names",
                                                "active": true,
                                                "requireRevisionToUpdate": false,
                                                "allowDecryption": false,
                                                "cacheTimestamp": 1,
                                                "dqlAccess": true,
                                                "dqlFormula": {
                                                    "formulaType": "domino",
                                                    "formula": "@False"
                                                },
                                                "allowCode": true,
                                                "openAccess": true,
                                                "forms": [
                                                ],
                                                "views": [
                                                ],
                                                "agents": [
                                                ],
                                                "formAliases": {

                                                },
                                                "availableViews": [
                                                ],
                                                "configuredForms": [
                                                ],
                                                "dxlpath": "D:\\Program Files (x86)\\HCL\\Notes\\Data\\dxl.d\\names.nsf.dxl"
                                            }
                                        },
                                        "apps": {
                                            "unknown": {
                                                "@unid": "D5000DB73418654A4825884400339438",
                                                "author": "CN=John Doe/O=ProjectKeep",
                                                "client_id": "d88b3b-4bd1-fe3dd2",
                                                "client_name": "My Demo Application",
                                                "hasSecret": false,
                                                "client_uri": "",
                                                "contacts": [
                                                    "CN=John Doe/O=ProjectKeep"
                                                ],
                                                "description": "",
                                                "logo_uri": "",
                                                "redirect_uris": [
                                                ],
                                                "scope": "",
                                                "status": "disabled",
                                                "token_endpoint_auth_method": "client_secret_basic"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "admin"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StatusMessage"
                                },
                                "examples": {
                                    "adminBackupStatusMessage": {
                                        "value": {
                                            "statusText": "OK",
                                            "status": 200,
                                            "message": "KeepConfig create / restore complete",
                                            "details": {
                                                "testdb3": "success:null",
                                                "*": "success:03A276EC8AAE8B8B4825881E000EE609"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Successful merge"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    },
                    "501": {
                        "$ref": "#/components/responses/501"
                    }
                },
                "security": [
                    {
                        "jwt": [
                        ]
                    }
                ],
                "operationId": "updateKeepConfig",
                "summary": "Merge the KeepConfig with the existing config",
                "x-keep-version": 2
            },
            "post": {
                "requestBody": {
                    "description": "A complete KeepConfig definition",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AdminBackup"
                            },
                            "examples": {
                                "adminBackupRequestSample": {
                                    "value": {
                                        "version": {
                                            "keep-name": "Domino Keep API",
                                            "keep-desc": "Next generation APIs for HCL Domino",
                                            "image-build": "2022-05-17 14:26",
                                            "keep-vendor": "HCL Labs",
                                            "keep-version": "1.5.0-SNAPSHOT-LocalBuild"
                                        },
                                        "databases": {
                                            "keepconfig": {
                                                "apiName": "keepconfig",
                                                "nsfPath": "KeepConfig.nsf",
                                                "iconName": "mountain",
                                                "icon": "Base64 stuff, preferably SVG",
                                                "description": "Configuration settings for the KEEP API, handle with care",
                                                "schemaName": "keepconfig",
                                                "active": true,
                                                "requireRevisionToUpdate": false,
                                                "allowDecryption": false,
                                                "cacheTimestamp": 1,
                                                "dqlAccess": true,
                                                "dqlFormula": {
                                                    "formulaType": "domino",
                                                    "formula": "@False"
                                                },
                                                "allowCode": true,
                                                "openAccess": true,
                                                "forms": [
                                                ],
                                                "views": [
                                                ],
                                                "agents": [
                                                ],
                                                "formAliases": {

                                                },
                                                "availableViews": [
                                                ],
                                                "configuredForms": [
                                                ],
                                                "dxlpath": "D:\\Program Files (x86)\\HCL\\Notes\\Data\\dxl.d\\KeepConfig.nsf.dxl"
                                            },
                                            "names": {
                                                "apiName": "names",
                                                "nsfPath": "names.nsf",
                                                "iconName": "mountain",
                                                "icon": "Base64 stuff, preferably SVG",
                                                "description": "Domino Directory on current Runtime",
                                                "schemaName": "names",
                                                "active": true,
                                                "requireRevisionToUpdate": false,
                                                "allowDecryption": false,
                                                "cacheTimestamp": 1,
                                                "dqlAccess": true,
                                                "dqlFormula": {
                                                    "formulaType": "domino",
                                                    "formula": "@False"
                                                },
                                                "allowCode": true,
                                                "openAccess": true,
                                                "forms": [
                                                ],
                                                "views": [
                                                ],
                                                "agents": [
                                                ],
                                                "formAliases": {

                                                },
                                                "availableViews": [
                                                ],
                                                "configuredForms": [
                                                ],
                                                "dxlpath": "D:\\Program Files (x86)\\HCL\\Notes\\Data\\dxl.d\\names.nsf.dxl"
                                            }
                                        },
                                        "apps": {
                                            "unknown": {
                                                "@unid": "D5000DB73418654A4825884400339438",
                                                "author": "CN=John Doe/O=ProjectKeep",
                                                "client_id": "d88b3b-4bd1-fe3dd2",
                                                "client_name": "My Demo Application",
                                                "hasSecret": false,
                                                "client_uri": "",
                                                "contacts": [
                                                    "CN=John Doe/O=ProjectKeep"
                                                ],
                                                "description": "",
                                                "logo_uri": "",
                                                "redirect_uris": [
                                                ],
                                                "scope": "",
                                                "status": "disabled",
                                                "token_endpoint_auth_method": "client_secret_basic"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "admin"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StatusMessage"
                                },
                                "examples": {
                                    "adminBackupStatusMessage": {
                                        "value": {
                                            "statusText": "OK",
                                            "status": 200,
                                            "message": "KeepConfig create / restore complete"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Successful creation"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "jwt": [
                        ]
                    }
                ],
                "operationId": "createKeepConfig",
                "summary": "Restores Keep Config",
                "description": "overwrites the existing keep config, use with caution!\nOn your own risk",
                "x-keep-version": 2
            }
        },
        "/run/agentAsync/{uuid}": {
            "summary": "Gets status or cancels async agent",
            "get": {
                "tags": [
                    "code"
                ],
                "parameters": [
                    {
                        "examples": {
                            "sample": {
                                "value": "\"251f1538-5c1d-4b64-b4a5-ae56dade65b6\""
                            }
                        },
                        "name": "uuid",
                        "description": "uuid of the asynchronous agent to check status of",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AgentAsyncMessage"
                                },
                                "examples": {
                                    "sample": {
                                        "value": {
                                            "uuid": "251f1538-5c1d-4b64-b4a5-ae56dade65b6",
                                            "status": "running"
                                        }
                                    },
                                    "sampleDone": {
                                        "value": {
                                            "uuid": "f19a5167-3722-4abe-91ee-d27bab052df7",
                                            "status": "done"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Success"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "jwt": [
                        ]
                    }
                ],
                "operationId": "getAgentInfo",
                "summary": "Get current status for an async agent",
                "description": "Get current status of an agent running asynchronously",
                "x-keep-version": 5
            },
            "delete": {
                "tags": [
                    "code"
                ],
                "parameters": [
                    {
                        "examples": {
                            "sample": {
                                "value": "\"251f1538-5c1d-4b64-b4a5-ae56dade65b6\""
                            }
                        },
                        "name": "uuid",
                        "description": "uuid of the asynchronous agent to check status of",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StatusMessage"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "statusText": "OK",
                                            "status": 200,
                                            "message": "success",
                                            "unid": "cea3a254-11f2-4f9b-8385-5bb815b81cdb"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Success"
                    },
                    "400": {
                        "description": "UUID not found"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "jwt": [
                        ]
                    }
                ],
                "operationId": "cancelAgent",
                "summary": "Aborts an async agent",
                "x-keep-version": 5
            },
            "parameters": [
                {
                    "examples": {
                        "CustomApp": {
                            "value": "demo"
                        },
                        "Directory": {
                            "value": "dominodirectory"
                        }
                    },
                    "name": "dataSource",
                    "description": "Keep alias for the database to be queried",
                    "schema": {
                        "type": "string"
                    },
                    "in": "query",
                    "required": true
                },
                {
                    "name": "uuid",
                    "description": "uuid of the asynchronous agent",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/run/agent": {
            "summary": "Runs an existing agent in a given database",
            "post": {
                "requestBody": {
                    "description": "Request body for run an agent. agentName is required. ",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AgentPayload",
                                "required": [
                                    "agentName"
                                ],
                                "properties": {
                                    "agentName": {
                                        "type": "string"
                                    }
                                }
                            },
                            "examples": {
                                "sample": {
                                    "value": {
                                        "agentName": "processJson"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "code"
                ],
                "parameters": [
                    {
                        "examples": {
                            "CustomApp": {
                                "value": "demo"
                            },
                            "Directory": {
                                "value": "dominodirectory"
                            }
                        },
                        "name": "dataSource",
                        "description": "Keep alias for the database to be queried",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                },
                                "examples": {
                                    "synchronous": {
                                        "value": {
                                            "agentResponse": "done"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Successful execution of agent"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "jwt": [
                        ]
                    }
                ],
                "operationId": "executeAgent",
                "summary": "Runs an agent in a database, in real time",
                "description": "Runs an existing agent, serverside. Existing limits of agent execution duration apply. This should only be used for short-running agents and simulated calling the agent from a browser.",
                "x-keep-version": 1
            },
            "parameters": [
                {
                    "examples": {
                        "CustomApp": {
                            "value": "demo"
                        },
                        "Directory": {
                            "value": "dominodirectory"
                        }
                    },
                    "name": "dataSource",
                    "description": "Keep alias for the database to be queried",
                    "schema": {
                        "type": "string"
                    },
                    "in": "query",
                    "required": true
                }
            ]
        },
        "/run/agentWithContext": {
            "summary": "Runs an existing agent in a given database using a specific document as the agent's run context",
            "description": "Pay attention to the agent's target. ",
            "post": {
                "requestBody": {
                    "description": "Name of agent",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AgentWithContextMessage",
                                "required": [
                                    "agentName"
                                ],
                                "properties": {
                                    "agentName": {
                                        "type": "string"
                                    },
                                    "unid": {
                                        "type": "string"
                                    },
                                    "returnMode": {
                                        "type": "string"
                                    }
                                }
                            },
                            "examples": {
                                "sample": {
                                    "value": {
                                        "agentName": "processJson",
                                        "unid": "36EBDFD11D4381F280258600003ED607",
                                        "returnMode": "default"
                                    }
                                },
                                "sampleWithOutMode": {
                                    "value": {
                                        "agentName": "processJson",
                                        "unid": "36EBDFD11D4381F280258600003ED607"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "code"
                ],
                "parameters": [
                    {
                        "examples": {
                            "CustomApp": {
                                "value": "demo"
                            },
                            "Directory": {
                                "value": "dominodirectory"
                            }
                        },
                        "name": "dataSource",
                        "description": "Keep alias for the database to be queried",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                },
                                "examples": {
                                    "With form mode": {
                                        "value": {
                                            "@unid": "CAE3F1BD3EB1033A0025870A002CDE3A",
                                            "@noteid": 0,
                                            "@created": "2021-07-06T08:10:04Z",
                                            "@lastmodified": "2021-07-06T08:10:04Z",
                                            "@lastaccessed": "2021-07-06T08:10:04Z",
                                            "@size": 104,
                                            "@unread": false,
                                            "@etag": "W/\" 60e40fdc\"",
                                            "Color": "Red",
                                            "email": "gbranthwaite0@nba.com",
                                            "first_name": "George",
                                            "Form": "Customer",
                                            "gender": "Male",
                                            "ip_address": "91.254.204.27",
                                            "last_name": "Branthwaite",
                                            "Pet": "Black-capped chickadee"
                                        }
                                    },
                                    "Without form mode": {
                                        "value": {
                                            "agentResponse": "done"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Successful execution of agent"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "jwt": [
                        ]
                    }
                ],
                "operationId": "executeAgentWithContext",
                "summary": "Runs an agent in a database, in real time, passing a document for context",
                "description": "Runs an existing agent, serverside, passing an UNID of a document to act upon. NotesSession.documentContext can be used in the agent to access the relevant document. Existing limits of agent execution duration apply. This should only be used for short-running agents and simulated calling the agent from a browser.",
                "x-keep-version": 5
            },
            "parameters": [
                {
                    "examples": {
                        "CustomApp": {
                            "value": "demo"
                        },
                        "Directory": {
                            "value": "dominodirectory"
                        }
                    },
                    "name": "dataSource",
                    "description": "Keep alias for the database to be queried",
                    "schema": {
                        "type": "string"
                    },
                    "in": "query",
                    "required": true
                }
            ]
        },
        "/authforoauthflow": {
            "summary": "Get an JWT session for a given user",
            "description": "Auxilary login for use with OAuth flow to process the consent screen",
            "post": {
                "requestBody": {
                    "description": "Username and password in Json format",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BasicAuthForOauthFlow"
                            },
                            "examples": {
                                "AuthLogin": {
                                    "value": {
                                        "password": "{{AdminPassword}}",
                                        "username": "{{AdminName}}",
                                        "scopes": "oauth"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "authentication"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthResult"
                                }
                            }
                        },
                        "description": "We got you"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                },
                                "examples": {
                                    "Unauthorized": {
                                        "value": {
                                            "status": 401,
                                            "message": "Invalid credentials or account locked"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "If it doesn't fit"
                    }
                },
                "security": [
                    {

                    }
                ],
                "operationId": "loginForOAuthFlow",
                "summary": "Get JWT Session for OAuth consent screen",
                "description": "Username, Password & scopes = \"oauth\" are required to use this endpoint",
                "x-keep-version": 1
            }
        },
        "/auth": {
            "summary": "Get an JWT session for a given user",
            "description": "Auxilary login for users who exist in Domino with HTTP passwords",
            "post": {
                "requestBody": {
                    "description": "Username and password in Json format",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BasicAuthRequest"
                            },
                            "examples": {
                                "AuthLogin": {
                                    "value": {
                                        "password": "AdminPassword",
                                        "username": "AdminName"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "authentication"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthResult"
                                }
                            }
                        },
                        "description": "We got you"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                },
                                "examples": {
                                    "Unauthorized": {
                                        "value": {
                                            "status": 401,
                                            "message": "Invalid credentials or account locked"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "If it doesn't fit"
                    }
                },
                "security": [
                    {

                    }
                ],
                "operationId": "authLogin",
                "summary": "Get JWT Session",
                "description": "Login and retrieve JWT token",
                "x-keep-version": 1
            }
        },
        "/openapi": {
            "summary": "Gets a KeepDatabase-specific OpenAPI.   Reference link: https://spec.openapis.org/oas/v3.0.2",
            "description": "resolves db, form, views into database specific enums",
            "get": {
                "tags": [
                    "data"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Data gets returned as OpenAPI compliant file.\nNo reference to OpenAPI here to avoid inception\nof a schema inside a schema"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {

                    }
                ],
                "operationId": "getOpenAPI",
                "summary": "Get KeepDatabase-specific OpenAPI spec",
                "x-keep-version": 1
            },
            "parameters": [
                {
                    "name": "dataSource",
                    "description": "Keep Database for which to get OpenAPI",
                    "schema": {
                        "type": "string"
                    },
                    "in": "query",
                    "required": true
                },
                {
                    "name": "voltmx",
                    "description": "Produce OpenAPI in VoltMX compatible format",
                    "schema": {
                        "type": "boolean"
                    },
                    "in": "query"
                }
            ]
        },
        "/design/{designType}": {
            "summary": "Get Design related information",
            "description": "Retrieve design information for a subset of design elements",
            "get": {
                "tags": [
                    "design"
                ],
                "parameters": [
                    {
                        "examples": {
                            "CustomApp": {
                                "value": "demo"
                            },
                            "Directory": {
                                "value": "dominodirectory"
                            }
                        },
                        "name": "dataSource",
                        "description": "Keep alias for the database to be queried",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": true
                    },
                    {
                        "name": "raw",
                        "description": "Boolean, when true design information is returned as JNX CDRecords in JSON format,\nwhen false the simplified KEEP format is returned",
                        "schema": {
                            "type": "boolean"
                        },
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/DesignFormSimple"
                                            },
                                            {
                                                "$ref": "#/components/schemas/DesignSubFormSimple"
                                            },
                                            {
                                                "$ref": "#/components/schemas/DesignViewSimple"
                                            },
                                            {
                                                "$ref": "#/components/schemas/DesignAgentSimple"
                                            }
                                        ]
                                    }
                                },
                                "examples": {
                                    "forms": {
                                        "value": [
                                            {
                                                "@hide": "",
                                                "@conflictation": "createconflicts",
                                                "@unid": "639C1AE5A68680C2482584350046F7C3",
                                                "@alias": [
                                                ],
                                                "@noteid": "196",
                                                "@name": "fromSalesforce",
                                                "Body": {
                                                    "allowmultivalues": false,
                                                    "kind": "",
                                                    "type": "text"
                                                }
                                            },
                                            {
                                                "@hide": "",
                                                "@conflictation": "createconflicts",
                                                "@unid": "A0DC3840E8CC9615482584350041A8CF",
                                                "@alias": [
                                                ],
                                                "@noteid": "182",
                                                "@name": "SampleForm",
                                                "Shape": {
                                                    "allowmultivalues": false,
                                                    "kind": "editable",
                                                    "type": "text"
                                                },
                                                "Color": {
                                                    "allowmultivalues": false,
                                                    "kind": "editable",
                                                    "type": "text"
                                                },
                                                "Taste": {
                                                    "allowmultivalues": false,
                                                    "kind": "editable",
                                                    "type": "text"
                                                },
                                                "Age": {
                                                    "allowmultivalues": true,
                                                    "kind": "editable",
                                                    "type": "number"
                                                },
                                                "Name": {
                                                    "allowmultivalues": true,
                                                    "kind": "editable",
                                                    "type": "text"
                                                }
                                            }
                                        ]
                                    },
                                    "agents": {
                                        "value": [
                                            {
                                                "@documentset": "Defined by selection formula, check in Domino Designer",
                                                "@name": "SalesforceProcessing",
                                                "@noteid": "19e",
                                                "@trigger": "docupdate",
                                                "@type": "lotusscript",
                                                "@unid": "56D541DC5BCAF1384825843500477872",
                                                "@validForKeep": true,
                                                "": "\n            \n               fromSalesforce\n            \n         ",
                                                "options": "%REM\n\tAgent SalesforceProcessing\n\tCreated Jul 12, 2019 by Stephan Wissel/Singapore/PNPHCL\n\tDescription: Comments for Agent\n%END REM\nOption Public\nOption Declare\n\n\n",
                                                "initialize": "Sub Initialize\n\tDim s As New NotesSession\n\tDim db As NotesDatabase\n\tDim dcol As NotesDocumentCollection\n\tDim doc As NotesDocument\n\tDim nextDoc As NotesDocument\n\tSet db = s.Currentdatabase\n\tSet dcol = db.Unprocesseddocuments\n\tSet doc = dcol.Getfirstdocument()\n\tWhile Not doc Is Nothing\n\t\tSet nextDoc = dcol.Getnextdocument(doc)\n\t\tCall handleOneDoc(doc)\n\t\tCall s.Updateprocesseddoc(doc)\n\t\tSet doc = nextDoc\n\tWend\nEnd Sub\n\n\n\n",
                                                "handleOneDoc": "%REM\n\tSub handleOneDoc\n\tDescription: Creates a RichTextItem for all Fields\n%END REM\nSub handleOneDoc(doc As NotesDocument)\n\tDim rt As NotesRichTextItem\n\tDim item As NotesItem\n\tSet rt = doc.Createrichtextitem(\"Body\")\n\tForAll i In doc.Items\n\t\tSet item = i\n\t\tIf item.name <> \"Body\" Then\n\t\t\trt.Appendtext(item.Name)\n\t\t\trt.Appendtext(\": \")\n\t\t\trt.Appendtext(item.Text)\n\t\t\trt.Addnewline(1)\n\t\tEnd If\n\tEnd ForAll\t\n\n\tCall doc.save(True,True)\nEnd Sub"
                                            },
                                            {
                                                "@documentset": "Defined by selection formula, check in Domino Designer",
                                                "@name": "FixBody",
                                                "@noteid": "1aa",
                                                "@trigger": "actionsmenu",
                                                "@type": "lotusscript",
                                                "@unid": "3F8E64B529DA6CF848258435004A37CC",
                                                "@validForKeep": false,
                                                "": "\n            \n               fromSalesforce\n            \n         ",
                                                "options": "%REM\n\tAgent SalesforceProcessing\n\tCreated Jul 12, 2019 by Stephan Wissel/Singapore/PNPHCL\n\tDescription: Comments for Agent\n%END REM\nOption Public\nOption Declare\n\n\n",
                                                "initialize": "Sub Initialize\n\tDim s As New NotesSession\n\tDim db As NotesDatabase\n\tDim dcol As NotesDocumentCollection\n\tDim doc As NotesDocument\n\tDim nextDoc As NotesDocument\n\tSet db = s.Currentdatabase\n\tSet dcol = db.Unprocesseddocuments\n\tSet doc = dcol.Getfirstdocument()\n\tWhile Not doc Is Nothing\n\t\tSet nextDoc = dcol.Getnextdocument(doc)\n\t\tCall handleOneDoc(doc)\n\t\tCall s.Updateprocesseddoc(doc)\n\t\tSet doc = nextDoc\n\tWend\nEnd Sub\n\n\n\n",
                                                "handleOneDoc": "%REM\n\tSub handleOneDoc\n\tDescription: Creates a RichTextItem for all Fields\n%END REM\nSub handleOneDoc(doc As NotesDocument)\n\tDim rt As NotesRichTextItem\n\tDim item As NotesItem\n\tSet rt = doc.Createrichtextitem(\"Body\")\n\tForAll i In doc.Items\n\t\tSet item = i\n\t\tIf item.name <> \"Body\" Then\n\t\t\trt.Appendtext(item.Name)\n\t\t\trt.Appendtext(\": \")\n\t\t\trt.Appendtext(item.Text)\n\t\t\trt.Addnewline(1)\n\t\tEnd If\n\tEnd ForAll\t\n\n\tCall doc.save(True,True)\nEnd Sub"
                                            }
                                        ]
                                    },
                                    "views": {
                                        "value": [
                                            {
                                                "@alias": [
                                                ],
                                                "@unid": "86C72C1BF64B6DF04825847100373215",
                                                "@selectionFormula": "SELECT (Form = \"Customer\")",
                                                "@name": "Customers",
                                                "@noteid": "1be",
                                                "$0": {
                                                    "title": "#",
                                                    "formula": "@DocNumber"
                                                },
                                                "$1": {
                                                    "title": "Created",
                                                    "formula": "@Created"
                                                },
                                                "last_name": {
                                                    "title": "LastName",
                                                    "formula": ""
                                                },
                                                "first_name": {
                                                    "title": "FirstName",
                                                    "formula": ""
                                                },
                                                "email": {
                                                    "title": "eMail",
                                                    "formula": ""
                                                },
                                                "Color": {
                                                    "title": "Color",
                                                    "formula": ""
                                                },
                                                "Pet": {
                                                    "title": "Pet",
                                                    "formula": ""
                                                }
                                            },
                                            {
                                                "@alias": [
                                                ],
                                                "@unid": "0E35D520A1EBBB5B48258435003E8284",
                                                "@selectionFormula": "SELECT @All",
                                                "@name": "($All)",
                                                "@noteid": "11a",
                                                "$0": {
                                                    "title": "#",
                                                    "formula": "@DocNumber"
                                                },
                                                "Form": {
                                                    "title": "Form",
                                                    "formula": ""
                                                },
                                                "$2": {
                                                    "title": "Created",
                                                    "formula": "@Created"
                                                }
                                            }
                                        ]
                                    },
                                    "subForms": {
                                        "value": [
                                            {
                                                "@alias": "subFormAlias",
                                                "@conflictaction": "createconflicts",
                                                "@hide": "",
                                                "@name": "subFormSharedField",
                                                "@noteid": "282",
                                                "@unid": "CC96242D1260ED3B4825881E002A410B",
                                                "Group": {
                                                    "kind": "editable",
                                                    "type": "text",
                                                    "allowmultivalues": false
                                                },
                                                "Group_Leader": {
                                                    "kind": "editable",
                                                    "type": "text",
                                                    "allowmultivalues": false
                                                }
                                            },
                                            {
                                                "@alias": "",
                                                "@conflictaction": "createconflicts",
                                                "@hide": "",
                                                "@name": "subFormCommon",
                                                "@noteid": "28e",
                                                "@unid": "90FCDCE1F75415004825881E002A9A48",
                                                "Company": {
                                                    "kind": "editable",
                                                    "type": "text",
                                                    "allowmultivalues": false
                                                },
                                                "Company_Address": {
                                                    "kind": "editable",
                                                    "type": "text",
                                                    "allowmultivalues": false
                                                }
                                            }
                                        ]
                                    }
                                }
                            }
                        },
                        "description": "Successful retrieval"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "406": {
                        "$ref": "#/components/responses/406"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "jwt": [
                        ]
                    }
                ],
                "operationId": "fetchDesignType",
                "summary": "Retrieve list of design elements for a database for a specific type",
                "description": "List design information in JSON format for a subset of design elements in JSON format.",
                "x-keep-version": 1
            },
            "parameters": [
                {
                    "name": "designType",
                    "description": "Type of design to query",
                    "schema": {
                        "enum": [
                            "agents",
                            "forms",
                            "libraries",
                            "views",
                            "itemdefinitions",
                            "folders",
                            "pages",
                            "subforms",
                            "outlines",
                            "navigators",
                            "actions",
                            "columns",
                            "fields"
                        ],
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                },
                {
                    "examples": {
                        "CustomApp": {
                            "value": "demo"
                        },
                        "Directory": {
                            "value": "dominodirectory"
                        }
                    },
                    "name": "dataSource",
                    "description": "path to database to be queried",
                    "schema": {
                        "type": "string"
                    },
                    "in": "query",
                    "required": true
                },
                {
                    "name": "raw",
                    "description": "Boolean, when true design information is returned as JNX CDRecords in JSON format,\nwhen false the simplified KEEP format is returned",
                    "schema": {
                        "type": "boolean"
                    },
                    "in": "query"
                },
                {
                    "name": "nsfPath",
                    "description": "ALternate access to the design of an NSF to facilitate creation of schema definition",
                    "schema": {
                        "type": "string"
                    },
                    "in": "query",
                    "required": false
                }
            ]
        },
        "/design/{designType}/{designName}": {
            "summary": "Get design information for a specific design element.",
            "description": "Retrieve design information for a specific design element in json format.\n\nFor designType 'forms', the 'designName' you should give a value of the specfic name of the form you have configure. You can configure other designType likewise.",
            "get": {
                "tags": [
                    "design"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/DesignFormSimple"
                                        },
                                        {
                                            "$ref": "#/components/schemas/DesignSubFormSimple"
                                        },
                                        {
                                            "$ref": "#/components/schemas/DesignViewSimple"
                                        },
                                        {
                                            "$ref": "#/components/schemas/DesignAgentSimple"
                                        }
                                    ]
                                },
                                "examples": {
                                    "ViewSample": {
                                        "value": {
                                            "@alias": [
                                            ],
                                            "@unid": "86C72C1BF64B6DF04825847100373215",
                                            "@selectionFormula": "SELECT (Form = \"Customer\")",
                                            "@name": "Customers",
                                            "@noteid": "1be",
                                            "$0": {
                                                "title": "#",
                                                "formula": "@DocNumber"
                                            },
                                            "$1": {
                                                "title": "Created",
                                                "formula": "@Created"
                                            },
                                            "last_name": {
                                                "title": "LastName",
                                                "formula": ""
                                            },
                                            "first_name": {
                                                "title": "FirstName",
                                                "formula": ""
                                            },
                                            "email": {
                                                "title": "eMail",
                                                "formula": ""
                                            },
                                            "Color": {
                                                "title": "Color",
                                                "formula": ""
                                            },
                                            "Pet": {
                                                "title": "Pet",
                                                "formula": ""
                                            }
                                        }
                                    },
                                    "FormSample": {
                                        "value": {
                                            "@hide": "",
                                            "@conflictation": "createconflicts",
                                            "@unid": "A0DC3840E8CC9615482584350041A8CF",
                                            "@alias": [
                                            ],
                                            "@noteid": "182",
                                            "@name": "SampleForm",
                                            "Shape": {
                                                "allowmultivalues": false,
                                                "kind": "editable",
                                                "type": "text"
                                            },
                                            "Color": {
                                                "allowmultivalues": false,
                                                "kind": "editable",
                                                "type": "text"
                                            },
                                            "Taste": {
                                                "allowmultivalues": false,
                                                "kind": "editable",
                                                "type": "text"
                                            },
                                            "Age": {
                                                "allowmultivalues": true,
                                                "kind": "editable",
                                                "type": "number"
                                            },
                                            "Name": {
                                                "allowmultivalues": true,
                                                "kind": "editable",
                                                "type": "text"
                                            }
                                        }
                                    },
                                    "AgentSample": {
                                        "value": "\r\n            \r\n               fromSalesforce\r\n            \r\n         %REM\r\n\tAgent SalesforceProcessing\r\n\tCreated Jul 12, 2019 by Stephan Wissel/Singapore/PNPHCL\r\n\tDescription: Comments for Agent\r\n%END REM\r\nOption Public\r\nOption Declare\r\n\r\n\r\nSub Initialize\r\n\tDim s As New NotesSession\r\n\tDim db As NotesDatabase\r\n\tDim dcol As NotesDocumentCollection\r\n\tDim doc As NotesDocument\r\n\tDim nextDoc As NotesDocument\r\n\tSet db = s.Currentdatabase\r\n\tSet dcol = db.Unprocesseddocuments\r\n\tSet doc = dcol.Getfirstdocument()\r\n\tWhile Not doc Is Nothing\r\n\t\tSet nextDoc = dcol.Getnextdocument(doc)\r\n\t\tCall handleOneDoc(doc)\r\n\t\tCall s.Updateprocesseddoc(doc)\r\n\t\tSet doc = nextDoc\r\n\tWend\r\nEnd Sub\r\n\r\n\r\n\r\n%REM\r\n\tSub handleOneDoc\r\n\tDescription: Creates a RichTextItem for all Fields\r\n%END REM\r\nSub handleOneDoc(doc As NotesDocument)\r\n\tDim rt As NotesRichTextItem\r\n\tDim item As NotesItem\r\n\tSet rt = doc.Createrichtextitem(\"Body\")\r\n\tForAll i In doc.Items\r\n\t\tSet item = i\r\n\t\tIf item.name <> \"Body\" Then\r\n\t\t\trt.Appendtext(item.Name)\r\n\t\t\trt.Appendtext(\": \")\r\n\t\t\trt.Appendtext(item.Text)\r\n\t\t\trt.Addnewline(1)\r\n\t\tEnd If\r\n\tEnd ForAll\t\r\n\r\n\tCall doc.save(True,True)\r\nEnd Sub"
                                    },
                                    "SubFormSample": {
                                        "value": {
                                            "@alias": "subFormAlias",
                                            "@conflictaction": "createconflicts",
                                            "@hide": "",
                                            "@name": "subFormSharedField",
                                            "@noteid": "282",
                                            "@unid": "CC96242D1260ED3B4825881E002A410B",
                                            "Group": {
                                                "kind": "editable",
                                                "type": "text",
                                                "allowmultivalues": false
                                            },
                                            "Group_Leader": {
                                                "kind": "editable",
                                                "type": "text",
                                                "allowmultivalues": false
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Successful retrieval"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "jwt": [
                        ]
                    }
                ],
                "operationId": "getDesign",
                "summary": "Retrieve individual design element for a database",
                "description": "Retrieve design information in JSON format for a specific design element in JSON format.",
                "x-keep-version": 1
            },
            "put": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/DesignFormSimpleRequest"
                                    },
                                    {
                                        "$ref": "#/components/schemas/DesignViewSimpleRequest"
                                    }
                                ]
                            },
                            "examples": {
                                "formRequest": {
                                    "value": {
                                        "name": "NewEntry",
                                        "alias": "",
                                        "fields": [
                                            {
                                                "name": "name",
                                                "type": "text",
                                                "allowmultivalues": false
                                            },
                                            {
                                                "name": "email",
                                                "type": "text",
                                                "allowmultivalues": false
                                            },
                                            {
                                                "name": "newField",
                                                "type": "text",
                                                "allowmultivalues": true
                                            }
                                        ]
                                    }
                                },
                                "viewRequest": {
                                    "value": {
                                        "name": "newentries",
                                        "selectionFormula": "Form = \"NewEntry\"",
                                        "columns": [
                                            {
                                                "name": "name",
                                                "title": "name",
                                                "separatemultiplevalues": false,
                                                "sort": "ascending",
                                                "formula": "name"
                                            },
                                            {
                                                "name": "email",
                                                "title": "email",
                                                "separatemultiplevalues": false,
                                                "sort": "ascending",
                                                "formula": "email"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "design"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StatusMessage"
                                },
                                "examples": {
                                    "successMessage": {
                                        "value": {
                                            "success": true
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Successful update of design element"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    },
                    "501": {
                        "$ref": "#/components/responses/501"
                    }
                },
                "security": [
                    {
                        "jwt": [
                        ]
                    }
                ],
                "operationId": "updateCreateDesign",
                "summary": "Updates a view, form, agent or library",
                "description": "Updates or creates Domino design elements based on simplified JSON",
                "x-keep-version": 2
            },
            "parameters": [
                {
                    "examples": {
                        "sampleFormName": {
                            "value": "SampleForm"
                        }
                    },
                    "name": "designName",
                    "description": "Name of design element to retrieve",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                },
                {
                    "examples": {
                        "CustomApp": {
                            "value": "demo"
                        },
                        "Directory": {
                            "value": "dominodirectory"
                        }
                    },
                    "name": "dataSource",
                    "description": "Path to database",
                    "schema": {
                        "type": "string"
                    },
                    "in": "query",
                    "required": true
                },
                {
                    "name": "raw",
                    "description": "Boolean, when true design information is returned as JNX CDRecords in JSON format,\nwhen false the simplified KEEP format is returned",
                    "schema": {
                        "type": "boolean"
                    },
                    "in": "query"
                },
                {
                    "name": "designType",
                    "description": "Type of design element to query",
                    "schema": {
                        "enum": [
                            "agents",
                            "forms",
                            "libraries",
                            "views",
                            "folders",
                            "pages",
                            "subforms",
                            "outlines",
                            "navigators",
                            "actions",
                            "columns",
                            "fields",
                            "itemdefinitions"
                        ],
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                },
                {
                    "name": "nsfPath",
                    "description": "ALternate access to the design of an NSF to facilitate creation of schema definition",
                    "schema": {
                        "type": "string"
                    },
                    "in": "query",
                    "required": false
                }
            ]
        },
        "/admin/access": {
            "summary": "Provide information on access to KEEP DB configuration settings",
            "get": {
                "tags": [
                    "admin"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/KeepAccess"
                                }
                            }
                        },
                        "description": "Provide access info"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "jwt": [
                        ]
                    }
                ],
                "operationId": "getKeepAccess",
                "summary": "Check if user has the right to update mappings",
                "x-keep-version": 1
            },
            "post": {
                "requestBody": {
                    "description": "Details to be checked",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/KeepAccessQuery"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "admin"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/KeepAccess"
                                }
                            }
                        },
                        "description": "Access details"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "jwt": [
                        ]
                    }
                ],
                "operationId": "queryKeepAccess",
                "summary": "Check for admin access permissions",
                "x-keep-version": 1
            }
        },
        "/dxl": {
            "summary": "Actions on DXL of a database.",
            "description": "Get raw DXL of a given database, upload DXL to alter design elements, or removes DXL from cache. ",
            "get": {
                "tags": [
                    "design"
                ],
                "parameters": [
                    {
                        "examples": {
                            "CustomApp": {
                                "value": "demo"
                            },
                            "Directory": {
                                "value": "dominodirectory"
                            }
                        },
                        "name": "dataSource",
                        "description": "Keep alias for the database to be queried",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "text/xml": {
                                "schema": {
                                    "type": "string"
                                },
                                "examples": {
                                    "dxlSimple": {
                                        "value": "<database xmlns='http://www.lotus.com/dxl' replicaid='48258435003E8283' path='Demo.nsf' title='Demo'>\r\n    <view name='($All)' xmlns='http://www.lotus.com/dxl' version='12.0' maintenanceversion='1.0'\r\n replicaid='48258435003E8283' showinmenu='false' publicaccess='false' designerversion='8.5.3'\r\n default='true' unreadmarks='none' onopengoto='lastopened' onrefresh='displayindicator'\r\n headers='beveled' opencollapsed='false' showresponsehierarchy='true' showmargin='true'\r\n shrinkrows='false' extendlastcolumn='false' showhierarchies='false' unreadcolor='black'\r\n rowlinecount='1' headerlinecount='1' rowspacing='1' bgcolor='white' totalscolor='black'\r\n headerbgcolor='white' boldunreadrows='false' evaluateactions='false' allownewdocuments='false'\r\n allowcustomizations='false' hidemarginborder='false' marginwidth='0px' marginbgcolor='white'\r\n uniquekeys='false'>\r\n        <noteinfo noteid='11a' unid='0E35D520A1EBBB5B48258435003E8284' sequence='3'>\r\n            <created>\r\n                <datetime>20190712T192246,44+08</datetime>\r\n            </created>\r\n            <modified>\r\n                <datetime>20220407T151018,22+08</datetime>\r\n            </modified>\r\n            <revised>\r\n                <datetime>20220407T151018,21+08</datetime>\r\n            </revised>\r\n            <lastaccessed>\r\n                <datetime>20220407T151018,21+08</datetime>\r\n            </lastaccessed>\r\n            <addedtofile>\r\n                <datetime>20190712T192246,45+08</datetime>\r\n            </addedtofile>\r\n        </noteinfo>\r\n        <updatedby>\r\n            <name>CN=LP2-AP-51723551/O=HCLPNP</name>\r\n            <name>CN=YING FENG/O=HCLPNP</name>\r\n        </updatedby>\r\n        <code\r\n event='selection'>\r\n            <formula>SELECT @All</formula>\r\n        </code>\r\n        <actionbar bgcolor='#f0f0f0' bordercolor='black'>\r\n            <actionbuttonstyle bgcolor='#f0f0f0'/>\r\n            <font size='9pt' color='system'/>\r\n            <border\r\n style='solid' width='0px 0px 1px'/>\r\n            <action title='Categori_ze' showinbar='false' systemcommand='categorize'/>\r\n            <action title='_Edit Document' showinbar='false' systemcommand='edit'/>\r\n            <action title='_Send Document' showinbar='false' systemcommand='send'/>\r\n            <action title='_Forward' showinbar='false' systemcommand='forward'/>\r\n            <action title='_Move To Folder...' showinbar='false' systemcommand='movetofolder'/>\r\n            <action title='_Remove From Folder' showinbar='false' systemcommand='removefromfolder'/>\r\n            <action title='_Read' showinbar='false' systemcommand='markread'/>\r\n            <action title='_Unread' showinbar='false' systemcommand='markunread'/>\r\n            <action title='_Open in New Window' showinbar='false' systemcommand='openinnewwindow'/>\r\n            <action title='_Print...' showinbar='false' systemcommand='print'/>\r\n            <action title='_Delete' showinbar='false' systemcommand='delete'/>\r\n            <action title='_Document Properties' showinbar='false' systemcommand='properties'/>\r\n            <action title='C_ut' showinbar='false' systemcommand='cut'/>\r\n            <action title='_Copy' showinbar='false' systemcommand='copy'/>\r\n            <action title='Copy as Document _Link' showinbar='false' systemcommand='copyasdoclink'/>\r\n            <action title='Copy as _Table' showinbar='false' systemcommand='copyastable'/>\r\n            <action title='P_aste' showinbar='false' systemcommand='paste'/>\r\n            <action title='_Open' showinbar='false' systemcommand='open'/>\r\n            <action title='Bookmark' showinbar='false' systemcommand='bookmark'/>\r\n        </actionbar>\r\n        <column hidedetailrows='false' itemname='$0' width='3.7500' resizable='true'\r\n separatemultiplevalues='false' sortnoaccent='true' sortnocase='true' showaslinks='false'>\r\n            <columnheader\r\n title='#'>\r\n                <font size='9pt' style='bold'/>\r\n            </columnheader>\r\n            <code event='value'>\r\n                <formula\r\n>@DocNumber</formula>\r\n            </code>\r\n        </column>\r\n        <column hidedetailrows='false' itemname='Form' width='10' resizable='true'\r\n separatemultiplevalues='false' sortnoaccent='false' sortnocase='true' showaslinks='false'>\r\n            <columnheader\r\n title='Form'>\r\n                <font size='9pt' style='bold'/>\r\n            </columnheader>\r\n        </column>\r\n        <column hidedetailrows='false' itemname='$2' width='10' resizable='true' separatemultiplevalues='false'\r\n sortnoaccent='false' sortnocase='true' showaslinks='false'>\r\n            <columnheader\r\n title='Created'>\r\n                <font size='9pt' style='bold'/>\r\n            </columnheader>\r\n            <code event='value'>\r\n                <formula\r\n>@Created</formula>\r\n            </code>\r\n        </column>\r\n    </view>\r\n    <note class='form' xmlns='http://www.lotus.com/dxl' version='12.0' maintenanceversion='1.0'\r\n replicaid='48258435003E8283'>\r\n        <noteinfo noteid='156' unid='A552C92D7F1DCFB14825843500404086' sequence='3'>\r\n            <created>\r\n                <datetime>20190712T194148,22+08</datetime>\r\n            </created>\r\n            <modified>\r\n                <datetime>20220407T151018,03+08</datetime>\r\n            </modified>\r\n            <revised>\r\n                <datetime>20220407T151018,02+08</datetime>\r\n            </revised>\r\n            <lastaccessed>\r\n                <datetime>20220407T151018,02+08</datetime>\r\n            </lastaccessed>\r\n            <addedtofile>\r\n                <datetime>20190712T194148,22+08</datetime>\r\n            </addedtofile>\r\n        </noteinfo>\r\n        <updatedby>\r\n            <name>CN=YING FENG/O=HCLPNP</name>\r\n        </updatedby>\r\n        <item name='$TITLE'>\r\n            <text>.settings/org.eclipse.wst.validation.prefs</text>\r\n        </item>\r\n        <item name='$Flags'>\r\n            <text>~C4g</text>\r\n        </item>\r\n        <item name='$DesignerVersion'>\r\n            <text>8.5.3</text>\r\n        </item>\r\n        <item name='$FileSize' sign='true'>\r\n            <number>39</number>\r\n        </item>\r\n        <item name='$FileData' sign='true'>\r\n            <rawitemdata type='1'>\r\nYQAYAAAAAAAnAAAAAQAAAAAAAAAAAAAAYAA5AAAAJwAoAAAAAAAAAAAAb3ZlcnJpZGU9dHJ1ZQpz\r\ndXNwZW5kPXRydWUKdmYudmVyc2lvbj0zAA==\r\n</rawitemdata>\r\n        </item>\r\n        <item name='$FileNames' sign='true'>\r\n            <text>.settings/org.eclipse.wst.validation.prefs</text>\r\n        </item>\r\n    </note>\r\n    <note class='form' xmlns='http://www.lotus.com/dxl' version='12.0' maintenanceversion='1.0'\r\n replicaid='48258435003E8283'>\r\n        <noteinfo noteid='15a' unid='AD725606B63481A34825843500404297' sequence='4'>\r\n            <created>\r\n                <datetime>20190712T194153,51+08</datetime>\r\n            </created>\r\n            <modified>\r\n                <datetime>20220407T151018,04+08</datetime>\r\n            </modified>\r\n            <revised>\r\n                <datetime>20220407T151018,03+08</datetime>\r\n            </revised>\r\n            <lastaccessed>\r\n                <datetime>20220407T151018,03+08</datetime>\r\n            </lastaccessed>\r\n            <addedtofile>\r\n                <datetime>20190712T194153,51+08</datetime>\r\n            </addedtofile>\r\n        </noteinfo>\r\n        <updatedby>\r\n            <name>CN=YING FENG/O=HCLPNP</name>\r\n        </updatedby>\r\n        <item name='$Flags'>\r\n            <text>~C4g</text>\r\n        </item>\r\n        <item name='$FlagsExt'>\r\n            <text>w</text>\r\n        </item>\r\n        <item name='$TITLE'>\r\n            <text>WEB-INF/xsp.properties</text>\r\n        </item>\r\n        <item name='$DesignerVersion'>\r\n            <text>8.5.3</text>\r\n        </item>\r\n        <item name='$FileSize' sign='true'>\r\n            <number>211</number>\r\n        </item>\r\n        <item name='$FileData' sign='true'>\r\n            <rawitemdata type='1'>\r\nYQAYAAAAAADTAAAAAQAAAAAAAAAAAAAAYADlAAAA0wDUAAAAAAAAAAAAeHNwLmFqYXgucmVuZGVy\r\nd2hvbGV0cmVlPWZhbHNlDQp4c3AuY2xpZW50LnNjcmlwdC5yYWRpb0NoZWNrYm94LmllLm9uY2hh\r\nbmdlLnRyaWdnZXI9ZWFybHktb25jbGljaw0KeHNwLmNzcmYucHJvdGVjdGlvbj10cnVlDQp4c3Au\r\ncGVyc2lzdGVuY2UubW9kZT1maWxlDQp4c3AucmVzb3VyY2VzLmFnZ3JlZ2F0ZT10cnVlDQp4c3Au\r\nZXJyb3IucGFnZS5kZWZhdWx0PXRydWUNCmU=\r\n</rawitemdata>\r\n        </item>\r\n        <item name='$FileNames' sign='true'>\r\n            <text>WEB-INF/xsp.properties</text>\r\n        </item>\r\n    </note>\r\n    <note class='form' xmlns='http://www.lotus.com/dxl' version='12.0' maintenanceversion='1.0'\r\n replicaid='48258435003E8283'>\r\n        <noteinfo noteid='15e' unid='9DD894B23E3B5D7F4825843500405580' sequence='3'>\r\n            <created>\r\n                <datetime>20190712T194241,92+08</datetime>\r\n            </created>\r\n            <modified>\r\n                <datetime>20220407T151018,05+08</datetime>\r\n            </modified>\r\n            <revised>\r\n                <datetime>20220407T151018,04+08</datetime>\r\n            </revised>\r\n            <lastaccessed>\r\n                <datetime>20220407T151018,04+08</datetime>\r\n            </lastaccessed>\r\n            <addedtofile>\r\n                <datetime>20190712T194241,92+08</datetime>\r\n            </addedtofile>\r\n        </noteinfo>\r\n        <updatedby>\r\n            <name>CN=YING FENG/O=HCLPNP</name>\r\n        </updatedby>\r\n        <item name='$Flags'>\r\n            <text>~C4g</text>\r\n        </item>\r\n        <item name='$TITLE'>\r\n            <text>.classpath</text>\r\n        </item>\r\n        <item name='$DesignerVersion'>\r\n            <text>8.5.3</text>\r\n        </item>\r\n        <item name='$FileSize' sign='true'>\r\n            <number>329</number>\r\n        </item>\r\n        <item name='$FileData' sign='true'>\r\n            <rawitemdata type='1'>\r\nYQAYAAAAAABJAQAAAQAAAAAAAAAAAAAAYABbAQAASQFKAQAAAAAAAAAAPD94bWwgdmVyc2lvbj0i\r\nMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGNsYXNzcGF0aD4KICA8Y2xhc3NwYXRoZW50cnkga2lu\r\nZD0ic3JjIiBwYXRoPSJMb2NhbCIvPgogIDxjbGFzc3BhdGhlbnRyeSBraW5kPSJjb24iIHBhdGg9\r\nIm9yZy5lY2xpcHNlLmpkdC5sYXVuY2hpbmcuSlJFX0NPTlRBSU5FUiIvPgogIDxjbGFzc3BhdGhl\r\nbnRyeSBraW5kPSJjb24iIHBhdGg9Im9yZy5lY2xpcHNlLnBkZS5jb3JlLnJlcXVpcmVkUGx1Z2lu\r\ncyIvPgogIDxjbGFzc3BhdGhlbnRyeSBraW5kPSJvdXRwdXQiIHBhdGg9IldlYkNvbnRlbnQvV0VC\r\nLUlORi9jbGFzc2VzIi8+CjwvY2xhc3NwYXRoPgoA\r\n</rawitemdata>\r\n        </item>\r\n        <item name='$FileNames' sign='true'>\r\n            <text>.classpath</text>\r\n        </item>\r\n    </note>\r\n    <note class='form' xmlns='http://www.lotus.com/dxl' version='12.0' maintenanceversion='1.0'\r\n replicaid='48258435003E8283'>\r\n        <noteinfo noteid='162' unid='D507734FB95BFD664825843500405584' sequence='3'>\r\n            <created>\r\n                <datetime>20190712T194241,96+08</datetime>\r\n            </created>\r\n            <modified>\r\n                <datetime>20220407T151018,06+08</datetime>\r\n            </modified>\r\n            <revised>\r\n                <datetime>20220407T151018,05+08</datetime>\r\n            </revised>\r\n            <lastaccessed>\r\n                <datetime>20220407T151018,05+08</datetime>\r\n            </lastaccessed>\r\n            <addedtofile>\r\n                <datetime>20190712T194241,97+08</datetime>\r\n            </addedtofile>\r\n        </noteinfo>\r\n        <updatedby>\r\n            <name>CN=YING FENG/O=HCLPNP</name>\r\n        </updatedby>\r\n        <item name='$Flags'>\r\n            <text>~C4g</text>\r\n        </item>\r\n        <item name='$TITLE'>\r\n            <text>.settings/org.eclipse.wst.jsdt.ui.superType.name</text>\r\n        </item>\r\n        <item name='$DesignerVersion'>\r\n            <text>8.5.3</text>\r\n        </item>\r\n        <item name='$FileSize' sign='true'>\r\n            <number>6</number>\r\n        </item>\r\n        <item name='$FileData' sign='true'>\r\n            <rawitemdata type='1'>\r\nYQAYAAAAAAAGAAAAAQAAAAAAAAAAAAAAYAAYAAAABgAGAAAAAAAAAAAAV2luZG93\r\n</rawitemdata>\r\n        </item>\r\n        <item name='$FileNames' sign='true'>\r\n            <text>.settings/org.eclipse.wst.jsdt.ui.superType.name</text>\r\n        </item>\r\n    </note>\r\n    <note class='form' xmlns='http://www.lotus.com/dxl' version='12.0' maintenanceversion='1.0'\r\n replicaid='48258435003E8283'>\r\n        <noteinfo noteid='166' unid='EF45DC59295FB9D74825843500405587' sequence='3'>\r\n            <created>\r\n                <datetime>20190712T194241,99+08</datetime>\r\n            </created>\r\n            <modified>\r\n                <datetime>20220407T151018,07+08</datetime>\r\n            </modified>\r\n            <revised>\r\n                <datetime>20220407T151018,06+08</datetime>\r\n            </revised>\r\n            <lastaccessed>\r\n                <datetime>20220407T151018,06+08</datetime>\r\n            </lastaccessed>\r\n            <addedtofile>\r\n                <datetime>20190712T194242,02+08</datetime>\r\n            </addedtofile>\r\n        </noteinfo>\r\n        <updatedby>\r\n            <name>CN=YING FENG/O=HCLPNP</name>\r\n        </updatedby>\r\n        <item name='$Flags'>\r\n            <text>~C4g</text>\r\n        </item>\r\n        <item name='$TITLE'>\r\n            <text>.settings/org.eclipse.wst.jsdt.ui.superType.container</text>\r\n        </item>\r\n        <item name='$DesignerVersion'>\r\n            <text>8.5.3</text>\r\n        </item>\r\n        <item name='$FileSize' sign='true'>\r\n            <number>49</number>\r\n        </item>\r\n        <item name='$FileData' sign='true'>\r\n            <rawitemdata type='1'>\r\nYQAYAAAAAAAxAAAAAQAAAAAAAAAAAAAAYABDAAAAMQAyAAAAAAAAAAAAb3JnLmVjbGlwc2Uud3N0\r\nLmpzZHQubGF1bmNoaW5nLmJhc2VCcm93c2VyTGlicmFyeQA=\r\n</rawitemdata>\r\n        </item>\r\n        <item name='$FileNames' sign='true'>\r\n            <text>.settings/org.eclipse.wst.jsdt.ui.superType.container</text>\r\n        </item>\r\n    </note>\r\n    <note class='form' xmlns='http://www.lotus.com/dxl' version='12.0' maintenanceversion='1.0'\r\n replicaid='48258435003E8283'>\r\n        <noteinfo noteid='16a' unid='8FBFB909E349AAB4482584350040558E' sequence='3'>\r\n            <created>\r\n                <datetime>20190712T194242,06+08</datetime>\r\n            </created>\r\n            <modified>\r\n                <datetime>20220407T151018,08+08</datetime>\r\n            </modified>\r\n            <revised>\r\n                <datetime>20220407T151018,07+08</datetime>\r\n            </revised>\r\n            <lastaccessed>\r\n                <datetime>20220407T151018,07+08</datetime>\r\n            </lastaccessed>\r\n            <addedtofile>\r\n                <datetime>20190712T194242,07+08</datetime>\r\n            </addedtofile>\r\n        </noteinfo>\r\n        <updatedby>\r\n            <name>CN=YING FENG/O=HCLPNP</name>\r\n        </updatedby>\r\n        <item name='$Flags'>\r\n            <text>~C4g</text>\r\n        </item>\r\n        <item name='$TITLE'>\r\n            <text>.settings/.jsdtscope</text>\r\n        </item>\r\n        <item name='$DesignerVersion'>\r\n            <text>8.5.3</text>\r\n        </item>\r\n        <item name='$FileSize' sign='true'>\r\n            <number>339</number>\r\n        </item>\r\n        <item name='$FileData' sign='true'>\r\n            <rawitemdata type='1'>\r\nYQAYAAAAAABTAQAAAQAAAAAAAAAAAAAAYABlAQAAUwFUAQAAAAAAAAAAPD94bWwgdmVyc2lvbj0i\r\nMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjxjbGFzc3BhdGg+DQoJPGNsYXNzcGF0aGVudHJ5IGtp\r\nbmQ9InNyYyIgcGF0aD0iQ29kZS9TY3JpcHRMaWJyYXJpZXMiLz4NCgk8Y2xhc3NwYXRoZW50cnkg\r\na2luZD0iY29uIiBwYXRoPSJvcmcuZWNsaXBzZS53c3QuanNkdC5sYXVuY2hpbmcuSlJFX0NPTlRB\r\nSU5FUiIvPg0KCTxjbGFzc3BhdGhlbnRyeSBraW5kPSJjb24iIHBhdGg9Im9yZy5lY2xpcHNlLndz\r\ndC5qc2R0LmxhdW5jaGluZy5iYXNlQnJvd3NlckxpYnJhcnkiLz4NCgk8Y2xhc3NwYXRoZW50cnkg\r\na2luZD0ib3V0cHV0IiBwYXRoPSIiLz4NCjwvY2xhc3NwYXRoPg0KAA==\r\n</rawitemdata>\r\n        </item>\r\n        <item name='$FileNames' sign='true'>\r\n            <text>.settings/.jsdtscope</text>\r\n        </item>\r\n    </note>\r\n    <note class='form' xmlns='http://www.lotus.com/dxl' version='12.0' maintenanceversion='1.0'\r\n replicaid='48258435003E8283'>\r\n        <noteinfo noteid='16e' unid='896B129819071BF248258435004055A0' sequence='4'>\r\n            <created>\r\n                <datetime>20190712T194242,24+08</datetime>\r\n            </created>\r\n            <modified>\r\n                <datetime>20220407T151018,09+08</datetime>\r\n            </modified>\r\n            <revised>\r\n                <datetime>20220407T151018,08+08</datetime>\r\n            </revised>\r\n            <lastaccessed>\r\n                <datetime>20220407T151018,08+08</datetime>\r\n            </lastaccessed>\r\n            <addedtofile>\r\n                <datetime>20190712T194242,25+08</datetime>\r\n            </addedtofile>\r\n        </noteinfo>\r\n        <updatedby>\r\n            <name>CN=YING FENG/O=HCLPNP</name>\r\n        </updatedby>\r\n        <item name='$Flags'>\r\n            <text>~C4g</text>\r\n        </item>\r\n        <item name='$FlagsExt'>\r\n            <text>w</text>\r\n        </item>\r\n        <item name='$TITLE'>\r\n            <text>WEB-INF/faces-config.xml</text>\r\n        </item>\r\n        <item name='$DesignerVersion'>\r\n            <text>8.5.3</text>\r\n        </item>\r\n        <item name='$FileSize' sign='true'>\r\n            <number>234</number>\r\n        </item>\r\n        <item name='$FileData' sign='true'>\r\n            <rawitemdata type='1'>\r\nYQAYAAAAAADqAAAAAQAAAAAAAAAAAAAAYAD8AAAA6gDqAAAAAAAAAAAAPD94bWwgdmVyc2lvbj0i\r\nMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGZhY2VzLWNvbmZpZz4KICA8IS0tQVVUT0dFTi1TVEFS\r\nVC1CVUlMREVSOiBBdXRvbWF0aWNhbGx5IGdlbmVyYXRlZCBieSBJQk0gRG9taW5vIERlc2lnbmVy\r\nLiBEbyBub3QgbW9kaWZ5Li0tPgogIDwhLS1BVVRPR0VOLUVORC1CVUlMREVSOiBFbmQgb2YgYXV0\r\nb21hdGljYWxseSBnZW5lcmF0ZWQgc2VjdGlvbi0tPgo8L2ZhY2VzLWNvbmZpZz4K\r\n</rawitemdata>\r\n        </item>\r\n        <item name='$FileNames' sign='true'>\r\n            <text>WEB-INF/faces-config.xml</text>\r\n        </item>\r\n    </note>\r\n    <note class='form' xmlns='http://www.lotus.com/dxl' version='12.0' maintenanceversion='1.0'\r\n replicaid='48258435003E8283'>\r\n        <noteinfo noteid='172' unid='CE0D62D623B5AD3148258435004055A5' sequence='3'>\r\n            <created>\r\n                <datetime>20190712T194242,29+08</datetime>\r\n            </created>\r\n            <modified>\r\n                <datetime>20220407T151018,10+08</datetime>\r\n            </modified>\r\n            <revised>\r\n                <datetime>20220407T151018,09+08</datetime>\r\n            </revised>\r\n            <lastaccessed>\r\n                <datetime>20220407T151018,09+08</datetime>\r\n            </lastaccessed>\r\n            <addedtofile>\r\n                <datetime>20190712T194242,30+08</datetime>\r\n            </addedtofile>\r\n        </noteinfo>\r\n        <updatedby>\r\n            <name>CN=YING FENG/O=HCLPNP</name>\r\n        </updatedby>\r\n        <item name='$Flags'>\r\n            <text>~C4gP</text>\r\n        </item>\r\n        <item name='$TITLE'>\r\n            <text>build.properties</text>\r\n        </item>\r\n        <item name='$DesignerVersion'>\r\n            <text>8.5.3</text>\r\n        </item>\r\n        <item name='$FileSize' sign='true'>\r\n            <number>84</number>\r\n        </item>\r\n        <item name='$FileData' sign='true'>\r\n            <rawitemdata type='1'>\r\nYQAYAAAAAABUAAAAAQAAAAAAAAAAAAAAYABmAAAAVABUAAAAAAAAAAAAc291cmNlLi4gPSBMb2Nh\r\nbC8sXA0KICAgICAgICAgICBDb2RlL0phdmEvDQpvdXRwdXQuLiA9IFdlYkNvbnRlbnQvV0VCLUlO\r\nRi9jbGFzc2VzLw0K\r\n</rawitemdata>\r\n        </item>\r\n        <item name='$FileNames' sign='true'>\r\n            <text>build.properties</text>\r\n        </item>\r\n    </note>\r\n    <note class='form' xmlns='http://www.lotus.com/dxl' version='12.0' maintenanceversion='1.0'\r\n replicaid='48258435003E8283'>\r\n        <noteinfo noteid='176' unid='01CC7F90109F934F48258435004055B3' sequence='5'>\r\n            <created>\r\n                <datetime>20190712T194242,43+08</datetime>\r\n            </created>\r\n            <modified>\r\n                <datetime>20220407T151018,11+08</datetime>\r\n            </modified>\r\n            <revised>\r\n                <datetime>20220407T151018,10+08</datetime>\r\n            </revised>\r\n            <lastaccessed>\r\n                <datetime>20220407T151018,10+08</datetime>\r\n            </lastaccessed>\r\n            <addedtofile>\r\n                <datetime>20190712T194242,44+08</datetime>\r\n            </addedtofile>\r\n        </noteinfo>\r\n        <updatedby>\r\n            <name>CN=YING FENG/O=HCLPNP</name>\r\n        </updatedby>\r\n        <item name='$Flags'>\r\n            <text>~C4gP</text>\r\n        </item>\r\n        <item name='$TITLE'>\r\n            <text>plugin.xml</text>\r\n        </item>\r\n        <item name='$DesignerVersion'>\r\n            <text>8.5.3</text>\r\n        </item>\r\n        <item name='$FileSize' sign='true'>\r\n            <number>1189</number>\r\n        </item>\r\n        <item name='$FileData' sign='true'>\r\n            <rawitemdata type='1'>\r\nYQAYAAAAAAClBAAAAQAAAAAAAAAAAAAAYAC3BAAApQSmBAAAAAAAAAAAPD94bWwgdmVyc2lvbj0i\r\nMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPHBsdWdpbiBjbGFzcz0icGx1Z2luLkFjdGl2YXRvciIK\r\nICBpZD0iTFAyMmRBUDJkNTE3MjM1NTFfMmZIQ0xQTlBfRGVtb19uc2YiIG5hbWU9IkRvbWlubyBE\r\nZXNpZ25lciIKICBwcm92aWRlcj0iVE9ETyIgdmVyc2lvbj0iMS4wLjAiPgogIDxyZXF1aXJlcz4K\r\nICAgIDwhLS1BVVRPR0VOLVNUQVJULUJVSUxERVI6IEF1dG9tYXRpY2FsbHkgZ2VuZXJhdGVkIGJ5\r\nIG51bGwuIERvIG5vdCBtb2RpZnkuLS0+CiAgICA8aW1wb3J0IHBsdWdpbj0ib3JnLmVjbGlwc2Uu\r\ndWkiLz4KICAgIDxpbXBvcnQgcGx1Z2luPSJvcmcuZWNsaXBzZS5jb3JlLnJ1bnRpbWUiLz4KICAg\r\nIDxpbXBvcnQgb3B0aW9uYWw9InRydWUiIHBsdWdpbj0iY29tLmlibS5jb21tb25zIi8+CiAgICA8\r\naW1wb3J0IG9wdGlvbmFsPSJ0cnVlIiBwbHVnaW49ImNvbS5pYm0uY29tbW9ucy54bWwiLz4KICAg\r\nIDxpbXBvcnQgb3B0aW9uYWw9InRydWUiIHBsdWdpbj0iY29tLmlibS5jb21tb25zLnZmcyIvPgog\r\nICAgPGltcG9ydCBvcHRpb25hbD0idHJ1ZSIgcGx1Z2luPSJjb20uaWJtLmpzY3JpcHQiLz4KICAg\r\nIDxpbXBvcnQgb3B0aW9uYWw9InRydWUiIHBsdWdpbj0iY29tLmlibS5kZXNpZ25lci5ydW50aW1l\r\nLmRpcmVjdG9yeSIvPgogICAgPGltcG9ydCBvcHRpb25hbD0idHJ1ZSIgcGx1Z2luPSJjb20uaWJt\r\nLmRlc2lnbmVyLnJ1bnRpbWUiLz4KICAgIDxpbXBvcnQgb3B0aW9uYWw9InRydWUiIHBsdWdpbj0i\r\nY29tLmlibS54c3AuY29yZSIvPgogICAgPGltcG9ydCBvcHRpb25hbD0idHJ1ZSIgcGx1Z2luPSJj\r\nb20uaWJtLnhzcC5leHRzbiIvPgogICAgPGltcG9ydCBvcHRpb25hbD0idHJ1ZSIgcGx1Z2luPSJj\r\nb20uaWJtLnhzcC5kZXNpZ25lciIvPgogICAgPGltcG9ydCBvcHRpb25hbD0idHJ1ZSIgcGx1Z2lu\r\nPSJjb20uaWJtLnhzcC5kb21pbm8iLz4KICAgIDxpbXBvcnQgb3B0aW9uYWw9InRydWUiIHBsdWdp\r\nbj0iY29tLmlibS5ub3Rlcy5qYXZhLmFwaSIvPgogICAgPGltcG9ydCBvcHRpb25hbD0idHJ1ZSIg\r\ncGx1Z2luPSJjb20uaWJtLnhzcC5yY3AiLz4KICAgIDwhLS1BVVRPR0VOLUVORC1CVUlMREVSOiBF\r\nbmQgb2YgYXV0b21hdGljYWxseSBnZW5lcmF0ZWQgc2VjdGlvbi0tPgogIDwvcmVxdWlyZXM+Cjwv\r\ncGx1Z2luPgo8P2VjbGlwc2UgdmVyc2lvbj0iMy4wIj8+CmU=\r\n</rawitemdata>\r\n        </item>\r\n        <item name='$FileNames' sign='true'>\r\n            <text>plugin.xml</text>\r\n        </item>\r\n    </note>\r\n    <note class='form' xmlns='http://www.lotus.com/dxl' version='12.0' maintenanceversion='1.0'\r\n replicaid='48258435003E8283'>\r\n        <noteinfo noteid='17a' unid='645430FA02D40E73482584350040577F' sequence='3'>\r\n            <created>\r\n                <datetime>20190712T194247,03+08</datetime>\r\n            </created>\r\n            <modified>\r\n                <datetime>20220407T151018,12+08</datetime>\r\n            </modified>\r\n            <revised>\r\n                <datetime>20220407T151018,11+08</datetime>\r\n            </revised>\r\n            <lastaccessed>\r\n                <datetime>20220407T151018,11+08</datetime>\r\n            </lastaccessed>\r\n            <addedtofile>\r\n                <datetime>20190712T194247,03+08</datetime>\r\n            </addedtofile>\r\n        </noteinfo>\r\n        <updatedby>\r\n            <name>CN=YING FENG/O=HCLPNP</name>\r\n        </updatedby>\r\n        <item name='$TITLE'>\r\n            <text>.project</text>\r\n        </item>\r\n        <item name='$Flags'>\r\n            <text>~C4gP</text>\r\n        </item>\r\n        <item name='$DesignerVersion'>\r\n            <text>8.5.3</text>\r\n        </item>\r\n        <item name='$FileSize' sign='true'>\r\n            <number>1771</number>\r\n        </item>\r\n        <item name='$FileData' sign='true'>\r\n            <rawitemdata type='1'>\r\nYQAYAAAAAADrBgAAAQAAAAAAAAAAAAAAYAD9BgAA6wbsBgAAAAAAAAAAPD94bWwgdmVyc2lvbj0i\r\nMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPHByb2plY3REZXNjcmlwdGlvbj4KICA8bmFtZT5EZW1v\r\nLm5zZjwvbmFtZT4KICA8Y29tbWVudC8+CiAgPHByb2plY3RzLz4KICA8YnVpbGRTcGVjPgogICAg\r\nPGJ1aWxkQ29tbWFuZD4KICAgICAgPG5hbWU+Y29tLmlibS5kZXNpZ25lci5kb21pbm8uamF2YWxp\r\nYi5qYXZhbGlibWFya2VyYnVpbGRlcjwvbmFtZT4KICAgICAgPGFyZ3VtZW50cy8+CiAgICA8L2J1\r\naWxkQ29tbWFuZD4KICAgIDxidWlsZENvbW1hbmQ+CiAgICAgIDxuYW1lPmNvbS5pYm0uZGVzaWdu\r\nZXIuZG9taW5vLmRlc2lnbi5qc3ZhbGlkYXRpb25idWlsZGVyPC9uYW1lPgogICAgICA8YXJndW1l\r\nbnRzLz4KICAgIDwvYnVpbGRDb21tYW5kPgogICAgPGJ1aWxkQ29tbWFuZD4KICAgICAgPG5hbWU+\r\nY29tLmlibS5kZXNpZ25lci5kb21pbm8uaWRlLnJlc291cmNlcy5mYWNlc0NvbmZpZ2J1aWxkZXI8\r\nL25hbWU+CiAgICAgIDxhcmd1bWVudHMvPgogICAgPC9idWlsZENvbW1hbmQ+CiAgICA8YnVpbGRD\r\nb21tYW5kPgogICAgICA8bmFtZT5jb20uaWJtLmRlc2lnbmVyLmRvbWluby5pZGUucmVzb3VyY2Vz\r\nLkJ1aWxkUHJvcGVydGllc0J1aWxkZXI8L25hbWU+CiAgICAgIDxhcmd1bWVudHMvPgogICAgPC9i\r\ndWlsZENvbW1hbmQ+CiAgICA8YnVpbGRDb21tYW5kPgogICAgICA8bmFtZT5jb20uaWJtLmRlc2ln\r\nbmVyLmRvbWluby5pZGUucmVzb3VyY2VzLnBsdWdpblhNTGJ1aWxkZXI8L25hbWU+CiAgICAgIDxh\r\ncmd1bWVudHMvPgogICAgPC9idWlsZENvbW1hbmQ+CiAgICA8YnVpbGRDb21tYW5kPgogICAgICA8\r\nbmFtZT5jb20uaWJtLmRlc2lnbmVyLmRvbWluby54c3AuZWRpdG9yLnhwYWdlc2J1aWxkZXI8L25h\r\nbWU+CiAgICAgIDxhcmd1bWVudHMvPgogICAgPC9idWlsZENvbW1hbmQ+CiAgICA8YnVpbGRDb21t\r\nYW5kPgogICAgICA8bmFtZT5vcmcuZWNsaXBzZS5qZHQuY29yZS5qYXZhYnVpbGRlcjwvbmFtZT4K\r\nICAgICAgPGFyZ3VtZW50cy8+CiAgICA8L2J1aWxkQ29tbWFuZD4KICAgIDxidWlsZENvbW1hbmQ+\r\nCiAgICAgIDxuYW1lPmNvbS5pYm0uZGVzaWduZXIuZG9taW5vLmlkZS5yZXNvdXJjZXMuTFdQREJ1\r\naWxkZXI8L25hbWU+CiAgICAgIDxhcmd1bWVudHMvPgogICAgPC9idWlsZENvbW1hbmQ+CiAgICA8\r\nYnVpbGRDb21tYW5kPgogICAgICA8bmFtZT5jb20uaWJtLmRlc2lnbmVyLmRvbWluby5sc2NyaXB0\r\nLkxTQnVpbGRlcjwvbmFtZT4KICAgICAgPGFyZ3VtZW50cy8+CiAgICA8L2J1aWxkQ29tbWFuZD4K\r\nICAgIDxidWlsZENvbW1hbmQ+CiAgICAgIDxuYW1lPm9yZy5lY2xpcHNlLnBkZS5NYW5pZmVzdEJ1\r\naWxkZXI8L25hbWU+CiAgICAgIDxhcmd1bWVudHMvPgogICAgPC9idWlsZENvbW1hbmQ+CiAgICA8\r\nYnVpbGRDb21tYW5kPgogICAgICA8bmFtZT5vcmcuZWNsaXBzZS5wZGUuU2NoZW1hQnVpbGRlcjwv\r\nbmFtZT4KICAgICAgPGFyZ3VtZW50cy8+CiAgICA8L2J1aWxkQ29tbWFuZD4KICA8L2J1aWxkU3Bl\r\nYz4KICA8bmF0dXJlcz4KICAgIDxuYXR1cmU+Y29tLmlibS53b3JrcGxhY2Uubm90ZXMuZmlsZXN5\r\nc3RlbS5ERE5hdHVyZTwvbmF0dXJlPgogICAgPG5hdHVyZT5vcmcuZWNsaXBzZS5qZHQuY29yZS5q\r\nYXZhbmF0dXJlPC9uYXR1cmU+CiAgICA8bmF0dXJlPm9yZy5lY2xpcHNlLnBkZS5QbHVnaW5OYXR1\r\ncmU8L25hdHVyZT4KICAgIDxuYXR1cmU+b3JnLmVjbGlwc2Uud3N0LmpzZHQuY29yZS5qc05hdHVy\r\nZTwvbmF0dXJlPgogIDwvbmF0dXJlcz4KPC9wcm9qZWN0RGVzY3JpcHRpb24+CgA=\r\n</rawitemdata>\r\n        </item>\r\n        <item name='$FileNames' sign='true'>\r\n            <text>.project</text>\r\n        </item>\r\n    </note>\r\n    <note class='form' xmlns='http://www.lotus.com/dxl' version='12.0' maintenanceversion='1.0'\r\n replicaid='48258435003E8283'>\r\n        <noteinfo noteid='17e' unid='509240913F3403A048258435004057EA' sequence='6'>\r\n            <created>\r\n                <datetime>20190712T194248,10+08</datetime>\r\n            </created>\r\n            <modified>\r\n                <datetime>20220407T151048,02+08</datetime>\r\n            </modified>\r\n            <revised>\r\n                <datetime>20220407T151048,01+08</datetime>\r\n            </revised>\r\n            <lastaccessed>\r\n                <datetime>20220407T151048,01+08</datetime>\r\n            </lastaccessed>\r\n            <addedtofile>\r\n                <datetime>20190712T194248,09+08</datetime>\r\n            </addedtofile>\r\n        </noteinfo>\r\n        <updatedby>\r\n            <name>CN=YING FENG/O=HCLPNP</name>\r\n        </updatedby>\r\n        <wassignedby>\r\n            <name>CN=YING FENG/O=HCLPNP</name>\r\n        </wassignedby>\r\n        <item name='$Flags'>\r\n            <text>~C4g</text>\r\n        </item>\r\n        <item name='$FlagsExt'>\r\n            <text>w</text>\r\n        </item>\r\n        <item name='$TITLE'>\r\n            <text>WEB-INF/classes/plugin/Activator.class</text>\r\n        </item>\r\n        <item name='$DesignerVersion'>\r\n            <text>8.5.3</text>\r\n        </item>\r\n        <item name='$FileSize' sign='true'>\r\n            <number>1069</number>\r\n        </item>\r\n        <item name='$FileData' sign='true'>\r\n            <rawitemdata type='1'>\r\nYQAYAAAAAAAtBAAAAQAAAAAAAAAAAAAAYAA/BAAALQQuBAAAAAAAAAAAyv66vgAAADQAKwcAAgEA\r\nEHBsdWdpbi9BY3RpdmF0b3IHAAQBACZvcmcvZWNsaXBzZS91aS9wbHVnaW4vQWJzdHJhY3RVSVBs\r\ndWdpbgEABnBsdWdpbgEAEkxwbHVnaW4vQWN0aXZhdG9yOwEABjxpbml0PgEAAygpVgEABENvZGUK\r\nAAMACwwABwAICQABAA0MAAUABgEAD0xpbmVOdW1iZXJUYWJsZQEAEkxvY2FsVmFyaWFibGVUYWJs\r\nZQEABHRoaXMBAAVzdGFydAEAJShMb3JnL29zZ2kvZnJhbWV3b3JrL0J1bmRsZUNvbnRleHQ7KVYB\r\nAApFeGNlcHRpb25zBwAVAQATamF2YS9sYW5nL0V4Y2VwdGlvbgoAAwAXDAARABIBAAdjb250ZXh0\r\nAQAiTG9yZy9vc2dpL2ZyYW1ld29yay9CdW5kbGVDb250ZXh0OwEABHN0b3AKAAMAHAwAGgASAQAK\r\nZ2V0RGVmYXVsdAEAFCgpTHBsdWdpbi9BY3RpdmF0b3I7AQASZ2V0SW1hZ2VEZXNjcmlwdG9yAQBA\r\nKExqYXZhL2xhbmcvU3RyaW5nOylMb3JnL2VjbGlwc2UvamZhY2UvcmVzb3VyY2UvSW1hZ2VEZXNj\r\ncmlwdG9yOwgAIgEACERlbW8ubnNmCgADACQMACUAJgEAGWltYWdlRGVzY3JpcHRvckZyb21QbHVn\r\naW4BAFIoTGphdmEvbGFuZy9TdHJpbmc7TGphdmEvbGFuZy9TdHJpbmc7KUxvcmcvZWNsaXBzZS9q\r\nZmFjZS9yZXNvdXJjZS9JbWFnZURlc2NyaXB0b3I7AQAEcGF0aAEAEkxqYXZhL2xhbmcvU3RyaW5n\r\nOwEAClNvdXJjZUZpbGUBAA5BY3RpdmF0b3IuamF2YQAhAAEAAwAAAAEACgAFAAYAAAAFAAEABwAI\r\nAAEACQAAADsAAQABAAAACSq3AAoqswAMsQAAAAIADgAAAA4AAwAAABgABAAZAAgAGgAPAAAADAAB\r\nAAAACQAQAAYAAAABABEAEgACABMAAAAEAAEAFAAJAAAAPgACAAIAAAAGKiu3ABaxAAAAAgAOAAAA\r\nCgACAAAAIAAFACEADwAAABYAAgAAAAYAEAAGAAAAAAAGABgAGQABAAEAGgASAAIAEwAAAAQAAQAU\r\nAAkAAABGAAIAAgAAAAoqK7cAGwGzAAyxAAAAAgAOAAAADgADAAAAJwAFACgACQApAA8AAAAWAAIA\r\nAAAKABAABgAAAAAACgAYABkAAQAJAB0AHgABAAkAAAAkAAEAAAAAAASyAAywAAAAAgAOAAAABgAB\r\nAAAALwAPAAAAAgAAAAkAHwAgAAEACQAAADEAAgABAAAABxIhKrgAI7AAAAACAA4AAAAGAAEAAAA6\r\nAA8AAAAMAAEAAAAHACcAKAAAAAEAKQAAAAIAKlA=\r\n</rawitemdata>\r\n        </item>\r\n        <item name='$FileNames' sign='true'>\r\n            <text>WEB-INF/classes/plugin/Activator.class</text>\r\n        </item>\r\n    </note>\r\n    <form name='SampleForm' xmlns='http://www.lotus.com/dxl' version='12.0' maintenanceversion='1.0'\r\n replicaid='48258435003E8283' publicaccess='false' designerversion='8.5.3'\r\n default='true' comment='Shape Color Taste' renderpassthrough='true'>\r\n        <noteinfo noteid='182' unid='A0DC3840E8CC9615482584350041A8CF' sequence='4'>\r\n            <created>\r\n                <datetime>20190712T195710,55+08</datetime>\r\n            </created>\r\n            <modified>\r\n                <datetime>20220407T151018,15+08</datetime>\r\n            </modified>\r\n            <revised>\r\n                <datetime>20220407T151018,14+08</datetime>\r\n            </revised>\r\n            <lastaccessed>\r\n                <datetime>20220407T151018,14+08</datetime>\r\n            </lastaccessed>\r\n            <addedtofile>\r\n                <datetime>20190712T195710,86+08</datetime>\r\n            </addedtofile>\r\n        </noteinfo>\r\n        <updatedby>\r\n            <name>CN=YING FENG/O=HCLPNP</name>\r\n        </updatedby>\r\n        <body>\r\n            <richtext>\r\n                <pardef id='1'/>\r\n                <par def='1'/>\r\n                <table widthtype='fitmargins' refwidth='11.9271in'>\r\n                    <tablecolumn width='7.2847%'/>\r\n                    <tablecolumn\r\n width='92.7153%'/>\r\n                    <tablerow>\r\n                        <tablecell>\r\n                            <pardef id='3' keepwithnext='true' keeptogether='true'/>\r\n                            <par def='3'>Shape</par>\r\n                        </tablecell>\r\n                        <tablecell>\r\n                            <pardef id='4' keepwithnext='true' keeptogether='true'/>\r\n                            <par def='4'>\r\n                                <field type='text' kind='editable' name='Shape'>\r\n                                    <code event='inputvalidation'>\r\n                                        <formula\r\n>@If(@ThisValue=\"\";@Failure(@ThisName+\" is mandatory\");@Success)</formula>\r\n                                    </code>\r\n                                </field>\r\n                                <compositedata\r\n type='98' prevtype='65418' nexttype='222' afterparcount='7' containertype='65418'\r\n aftercontainercount='1' afterbegincount='3'>\r\nYg4BAIQAAAAAAAAAAAA=\r\n</compositedata>\r\n                            </par>\r\n                        </tablecell>\r\n                    </tablerow>\r\n                    <tablerow>\r\n                        <tablecell>\r\n                            <par def='3'>Color</par>\r\n                        </tablecell>\r\n                        <tablecell>\r\n                            <par def='4'>\r\n                                <field type='text' kind='editable' name='Color'/>\r\n                                <compositedata\r\n type='98' prevtype='65418' nexttype='222' afterparcount='6' containertype='65418'\r\n aftercontainercount='1' afterbegincount='3'>\r\nYg4BAIQAAAAAAAAAAAA=\r\n</compositedata>\r\n                            </par>\r\n                        </tablecell>\r\n                    </tablerow>\r\n                    <tablerow>\r\n                        <tablecell>\r\n                            <par def='3'>Taste</par>\r\n                        </tablecell>\r\n                        <tablecell>\r\n                            <par def='4'>\r\n                                <field type='text' kind='editable' name='Taste'/>\r\n                                <compositedata\r\n type='98' prevtype='65418' nexttype='222' afterparcount='6' containertype='65418'\r\n aftercontainercount='1' afterbegincount='3'>\r\nYg4BAIQAAAAAAAAAAAA=\r\n</compositedata>\r\n                            </par>\r\n                        </tablecell>\r\n                    </tablerow>\r\n                    <tablerow>\r\n                        <tablecell>\r\n                            <par def='3'/>\r\n                        </tablecell>\r\n                        <tablecell>\r\n                            <par def='4'>\r\n                                <button width='2in' widthtype='maximum' maxlines='1' wraptext='true'\r\n bgcolor='system'>\r\n                                    <code event='click'>\r\n                                        <formula>@If(@Command([FileSave]);@Command([FileCloseWindow]);\"\")</formula>\r\n                                    </code>\r\n                                    Save\r\n                                </button>\r\n                            </par>\r\n                        </tablecell>\r\n                    </tablerow>\r\n                </table>\r\n                <par def='1'/>\r\n            </richtext>\r\n        </body>\r\n        <item name='$$ScriptName' summary='false' sign='true'>\r\n            <text>SampleForm</text>\r\n        </item>\r\n    </form>\r\n    <note class='form' xmlns='http://www.lotus.com/dxl' version='12.0' maintenanceversion='1.0'\r\n replicaid='48258435003E8283'>\r\n        <noteinfo noteid='186' unid='C5E492FDA6026C71482584350042689A' sequence='4'>\r\n            <created>\r\n                <datetime>20190712T200521,54+08</datetime>\r\n            </created>\r\n            <modified>\r\n                <datetime>20220407T151018,14+08</datetime>\r\n            </modified>\r\n            <revised>\r\n                <datetime>20220407T151018,13+08</datetime>\r\n            </revised>\r\n            <lastaccessed>\r\n                <datetime>20220407T151018,13+08</datetime>\r\n            </lastaccessed>\r\n            <addedtofile>\r\n                <datetime>20190712T200521,57+08</datetime>\r\n            </addedtofile>\r\n        </noteinfo>\r\n        <updatedby>\r\n            <name>CN=YING FENG/O=HCLPNP</name>\r\n        </updatedby>\r\n        <item name='$Flags'>\r\n            <text>~C4g</text>\r\n        </item>\r\n        <item name='$TITLE'>\r\n            <text>AppProperties/xspdesign.properties</text>\r\n        </item>\r\n        <item name='$DesignerVersion'>\r\n            <text>8.5.3</text>\r\n        </item>\r\n        <item name='$FileSize' sign='true'>\r\n            <number>31</number>\r\n        </item>\r\n        <item name='$FileData' sign='true'>\r\n            <rawitemdata type='1'>\r\nYQAYAAAAAAAfAAAAAQAAAAAAAAAAAAAAYAAxAAAAHwAgAAAAAAAAAAAAI0ZyaSBKdWwgMTIgMjA6\r\nMTA6NDcgU0dUIDIwMTkNCgo=\r\n</rawitemdata>\r\n        </item>\r\n        <item name='$FileNames' sign='true'>\r\n            <text>xspdesign.properties</text>\r\n        </item>\r\n    </note>\r\n    <form name='fromSalesforce' xmlns='http://www.lotus.com/dxl' version='12.0'\r\n maintenanceversion='1.0' replicaid='48258435003E8283' publicaccess='false'\r\n designerversion='8.5.3' comment='Collection form' renderpassthrough='true'>\r\n        <noteinfo noteid='196' unid='639C1AE5A68680C2482584350046F7C3' sequence='5'>\r\n            <created>\r\n                <datetime>20190712T205509,47+08</datetime>\r\n            </created>\r\n            <modified>\r\n                <datetime>20220407T151018,16+08</datetime>\r\n            </modified>\r\n            <revised>\r\n                <datetime>20220407T151018,15+08</datetime>\r\n            </revised>\r\n            <lastaccessed>\r\n                <datetime>20220407T151018,15+08</datetime>\r\n            </lastaccessed>\r\n            <addedtofile>\r\n                <datetime>20190712T205509,78+08</datetime>\r\n            </addedtofile>\r\n        </noteinfo>\r\n        <updatedby>\r\n            <name>CN=YING FENG/O=HCLPNP</name>\r\n        </updatedby>\r\n        <body>\r\n            <richtext>\r\n                <pardef id='1'/>\r\n                <par def='1'>\r\n                    <run>\r\n                        <font size='14pt' style='bold' color='#c200ff'/>Stuff from Salesforce\r\n                    </run>\r\n                </par>\r\n                <par def='1'/>\r\n                <par def='1'>\r\n                    <field type='richtext' kind='computedwhencomposed' name='Body'\r\n storageformat='htmlmime'>\r\n                        <code event='defaultvalue'>\r\n                            <formula>Body</formula>\r\n                        </code>\r\n                    </field>\r\n                    <compositedata\r\n type='98' prevtype='65418' nexttype='222' afterparcount='6' containertype='65418'\r\n aftercontainercount='1' afterbegincount='3'>\r\nYg4BAIQAAAAAAAEAAAA=\r\n</compositedata>\r\n                </par>\r\n            </richtext>\r\n        </body>\r\n        <item name='$$ScriptName' summary='false' sign='true'>\r\n            <text>fromSalesforce</text>\r\n        </item>\r\n    </form>\r\n    <agent name='SalesforceProcessing' xmlns='http://www.lotus.com/dxl' version='12.0'\r\n maintenanceversion='1.0' replicaid='48258435003E8283' hide='v3' publicaccess='false'\r\n designerversion='8.5.3' comment='Move Salesforce data to RichText' activatable='false'>\r\n        <noteinfo noteid='19e' unid='56D541DC5BCAF1384825843500477872' sequence='4'>\r\n            <created>\r\n                <datetime>20190712T210038,90+08</datetime>\r\n            </created>\r\n            <modified>\r\n                <datetime>20220407T151018,23+08</datetime>\r\n            </modified>\r\n            <revised>\r\n                <datetime>20220407T151018,22+08</datetime>\r\n            </revised>\r\n            <lastaccessed>\r\n                <datetime>20220407T151018,22+08</datetime>\r\n            </lastaccessed>\r\n            <addedtofile>\r\n                <datetime>20190712T210038,94+08</datetime>\r\n            </addedtofile>\r\n        </noteinfo>\r\n        <updatedby>\r\n            <name>CN=YING FENG/O=HCLPNP</name>\r\n        </updatedby>\r\n        <designchange>\r\n            <datetime>20220407T151018,11+08</datetime>\r\n        </designchange>\r\n        <trigger type='docupdate'>\r\n            <schedule type='automatic' runlocation='specific' runserver='CN=Wolfpack/O=SenseiDemo'/>\r\n        </trigger>\r\n        <documentset type='implicit'>\r\n            <search type='byformnames'>\r\n                <formchoice\r\n name='fromSalesforce'/>\r\n            </search>\r\n        </documentset>\r\n        <code event='options'>\r\n            <lotusscript\r\n>%REM\r\n\tAgent SalesforceProcessing\r\n\tCreated Jul 12, 2019 by Stephan Wissel/Singapore/PNPHCL\r\n\tDescription: Comments for Agent\r\n%END REM\r\nOption Public\r\nOption Declare\r\n\r\n\r\n</lotusscript>\r\n        </code>\r\n        <code event='initialize'>\r\n            <lotusscript>Sub Initialize\r\n\tDim s As New NotesSession\r\n\tDim db As NotesDatabase\r\n\tDim dcol As NotesDocumentCollection\r\n\tDim doc As NotesDocument\r\n\tDim nextDoc As NotesDocument\r\n\tSet db = s.Currentdatabase\r\n\tSet dcol = db.Unprocesseddocuments\r\n\tSet doc = dcol.Getfirstdocument()\r\n\tWhile Not doc Is Nothing\r\n\t\tSet nextDoc = dcol.Getnextdocument(doc)\r\n\t\tCall handleOneDoc(doc)\r\n\t\tCall s.Updateprocesseddoc(doc)\r\n\t\tSet doc = nextDoc\r\n\tWend\r\nEnd Sub\r\n\r\n\r\n\r\n</lotusscript>\r\n        </code>\r\n        <code event='handleOneDoc'>\r\n            <lotusscript>%REM\r\n\tSub handleOneDoc\r\n\tDescription: Creates a RichTextItem for all Fields\r\n%END REM\r\nSub handleOneDoc(doc As NotesDocument)\r\n\tDim rt As NotesRichTextItem\r\n\tDim item As NotesItem\r\n\tSet rt = doc.Createrichtextitem(\"Body\")\r\n\tForall i In doc.Items\r\n\t\tSet item = i\r\n\t\tIf item.name &lt;&gt; \"Body\" Then\r\n\t\t\trt.Appendtext(item.Name)\r\n\t\t\trt.Appendtext(\": \")\r\n\t\t\trt.Appendtext(item.Text)\r\n\t\t\trt.Addnewline(1)\r\n\t\tEnd If\r\n\tEnd Forall\t\r\n\r\n\tCall doc.save(True,True)\r\nEnd Sub</lotusscript>\r\n        </code>\r\n    </agent>\r\n    <agent name='Fix Body' xmlns='http://www.lotus.com/dxl' version='12.0' maintenanceversion='1.0'\r\n replicaid='48258435003E8283' hide='v3' publicaccess='false' designerversion='8.5.3'\r\n comment='Move Salesforce data to RichText'>\r\n        <noteinfo noteid='1aa' unid='3F8E64B529DA6CF848258435004A37CC' sequence='5'>\r\n            <created>\r\n                <datetime>20190712T213039,48+08</datetime>\r\n            </created>\r\n            <modified>\r\n                <datetime>20220407T151018,24+08</datetime>\r\n            </modified>\r\n            <revised>\r\n                <datetime>20220407T151018,23+08</datetime>\r\n            </revised>\r\n            <lastaccessed>\r\n                <datetime>20220407T151018,23+08</datetime>\r\n            </lastaccessed>\r\n            <addedtofile>\r\n                <datetime>20190712T213039,53+08</datetime>\r\n            </addedtofile>\r\n        </noteinfo>\r\n        <updatedby>\r\n            <name>CN=YING FENG/O=HCLPNP</name>\r\n        </updatedby>\r\n        <designchange>\r\n            <datetime>20220407T151018,14+08</datetime>\r\n        </designchange>\r\n        <trigger type='actionsmenu'/>\r\n        <documentset type='selected'>\r\n            <search type='byformnames'>\r\n                <formchoice\r\n name='fromSalesforce'/>\r\n            </search>\r\n        </documentset>\r\n        <code event='options'>\r\n            <lotusscript\r\n>%REM\r\n\tAgent SalesforceProcessing\r\n\tCreated Jul 12, 2019 by Stephan Wissel/Singapore/PNPHCL\r\n\tDescription: Comments for Agent\r\n%END REM\r\nOption Public\r\nOption Declare\r\n\r\n\r\n</lotusscript>\r\n        </code>\r\n        <code event='initialize'>\r\n            <lotusscript>Sub Initialize\r\n\tDim s As New NotesSession\r\n\tDim db As NotesDatabase\r\n\tDim dcol As NotesDocumentCollection\r\n\tDim doc As NotesDocument\r\n\tDim nextDoc As NotesDocument\r\n\tSet db = s.Currentdatabase\r\n\tSet dcol = db.Unprocesseddocuments\r\n\tSet doc = dcol.Getfirstdocument()\r\n\tWhile Not doc Is Nothing\r\n\t\tSet nextDoc = dcol.Getnextdocument(doc)\r\n\t\tCall handleOneDoc(doc)\r\n\t\tCall s.Updateprocesseddoc(doc)\r\n\t\tSet doc = nextDoc\r\n\tWend\r\nEnd Sub\r\n\r\n\r\n\r\n</lotusscript>\r\n        </code>\r\n        <code event='handleOneDoc'>\r\n            <lotusscript>%REM\r\n\tSub handleOneDoc\r\n\tDescription: Creates a RichTextItem for all Fields\r\n%END REM\r\nSub handleOneDoc(doc As NotesDocument)\r\n\tDim rt As NotesRichTextItem\r\n\tDim item As NotesItem\r\n\tSet rt = doc.Createrichtextitem(\"Body\")\r\n\tForall i In doc.Items\r\n\t\tSet item = i\r\n\t\tIf item.name &lt;&gt; \"Body\" Then\r\n\t\t\trt.Appendtext(item.Name)\r\n\t\t\trt.Appendtext(\": \")\r\n\t\t\trt.Appendtext(item.Text)\r\n\t\t\trt.Addnewline(1)\r\n\t\tEnd If\r\n\tEnd Forall\t\r\n\r\n\tCall doc.save(True,True)\r\nEnd Sub</lotusscript>\r\n        </code>\r\n    </agent>\r\n    <view name='Customers' xmlns='http://www.lotus.com/dxl' version='12.0' maintenanceversion='1.0'\r\n replicaid='48258435003E8283' showinmenu='false' noreplace='true' publicaccess='false'\r\n designerversion='8.5.3' unreadmarks='none' onopengoto='lastopened' onrefresh='displayindicator'\r\n headers='beveled' opencollapsed='false' showresponsehierarchy='true' showmargin='true'\r\n shrinkrows='false' extendlastcolumn='false' showhierarchies='false' unreadcolor='black'\r\n rowlinecount='1' headerlinecount='1' rowspacing='1' bgcolor='white' altrowcolor='#f7f7f7'\r\n totalscolor='black' headerbgcolor='white' boldunreadrows='false' evaluateactions='false'\r\n allownewdocuments='false' allowcustomizations='true' hidemarginborder='false'\r\n marginwidth='0px' marginbgcolor='white' gridstyle='solid' gridcolor='silver'\r\n uniquekeys='false'>\r\n        <noteinfo noteid='1be' unid='86C72C1BF64B6DF04825847100373215' sequence='4'>\r\n            <created>\r\n                <datetime>20190910T180253,01+08</datetime>\r\n            </created>\r\n            <modified>\r\n                <datetime>20220407T151018,25+08</datetime>\r\n            </modified>\r\n            <revised>\r\n                <datetime>20220407T151018,24+08</datetime>\r\n            </revised>\r\n            <lastaccessed>\r\n                <datetime>20220407T151018,24+08</datetime>\r\n            </lastaccessed>\r\n            <addedtofile>\r\n                <datetime>20190910T180253,07+08</datetime>\r\n            </addedtofile>\r\n        </noteinfo>\r\n        <updatedby>\r\n            <name>CN=LP2-AP-51723551/O=HCLPNP</name>\r\n            <name>CN=YING FENG/O=HCLPNP</name>\r\n        </updatedby>\r\n        <code\r\n event='selection'>\r\n            <formula>SELECT (Form = \"Customer\")</formula>\r\n        </code>\r\n        <column hidedetailrows='false' itemname='$0' width='6.6250' resizable='true'\r\n separatemultiplevalues='false' sortnoaccent='true' sortnocase='true' showaslinks='false'>\r\n            <columnheader\r\n title='#'>\r\n                <font size='9pt' style='bold'/>\r\n            </columnheader>\r\n            <code event='value'>\r\n                <formula\r\n>@DocNumber</formula>\r\n            </code>\r\n        </column>\r\n        <column hidedetailrows='false' itemname='$1' width='13.5000' resizable='true'\r\n separatemultiplevalues='false' sortnoaccent='false' sortnocase='true' showaslinks='false'>\r\n            <columnheader\r\n title='Created'>\r\n                <font size='9pt' style='bold'/>\r\n            </columnheader>\r\n            <code event='value'>\r\n                <formula\r\n>@Created</formula>\r\n            </code>\r\n        </column>\r\n        <column sort='ascending' hidedetailrows='false' itemname='last_name' width='10'\r\n resizable='true' separatemultiplevalues='false' sortnoaccent='false' sortnocase='true'\r\n showaslinks='false'>\r\n            <columnheader title='LastName'>\r\n                <font size='9pt' style='bold'/>\r\n            </columnheader>\r\n        </column>\r\n        <column hidedetailrows='false' itemname='first_name' width='10' resizable='true'\r\n separatemultiplevalues='false' sortnoaccent='false' sortnocase='true' showaslinks='false'>\r\n            <columnheader\r\n title='FirstName'>\r\n                <font size='9pt' style='bold'/>\r\n            </columnheader>\r\n        </column>\r\n        <column hidedetailrows='false' itemname='email' width='16.8750' resizable='true'\r\n separatemultiplevalues='false' sortnoaccent='false' sortnocase='true' showaslinks='false'>\r\n            <columnheader\r\n title='eMail'>\r\n                <font size='9pt' style='bold'/>\r\n            </columnheader>\r\n        </column>\r\n        <column hidedetailrows='false' itemname='Color' width='10' resizable='true'\r\n separatemultiplevalues='false' sortnoaccent='false' sortnocase='true' showaslinks='false'>\r\n            <columnheader\r\n title='Color'>\r\n                <font size='9pt' style='bold'/>\r\n            </columnheader>\r\n        </column>\r\n        <column hidedetailrows='false' itemname='Pet' width='17.6250' resizable='true'\r\n separatemultiplevalues='false' sortnoaccent='false' sortnocase='true' showaslinks='false'>\r\n            <columnheader\r\n title='Pet'>\r\n                <font size='9pt' style='bold'/>\r\n            </columnheader>\r\n        </column>\r\n    </view>\r\n    <form name='Entry' alias='Entry' xmlns='http://www.lotus.com/dxl' version='12.0'\r\n maintenanceversion='1.0' replicaid='48258435003E8283' hide='web mobile' publicaccess='false'\r\n comment='Generated by KEEP '>\r\n        <noteinfo noteid='21e' unid='A4A6F587429C6D584825881D000C68B5' sequence='7'>\r\n            <created>\r\n                <datetime>20220407T101532,37+08</datetime>\r\n            </created>\r\n            <modified>\r\n                <datetime>20220408T102519,86+08</datetime>\r\n            </modified>\r\n            <revised>\r\n                <datetime>20220408T102519,85+08</datetime>\r\n            </revised>\r\n            <lastaccessed>\r\n                <datetime>20220408T102519,85+08</datetime>\r\n            </lastaccessed>\r\n            <addedtofile>\r\n                <datetime>20220407T101532,38+08</datetime>\r\n            </addedtofile>\r\n        </noteinfo>\r\n        <updatedby>\r\n            <name>CN=John Doe/O=ProjectKeep</name>\r\n        </updatedby>\r\n        <code event='windowtitle'>\r\n            <formula\r\n>@If(@IsNewDoc;\"New Entry\";\"Entry \"+@Text(@Created))</formula>\r\n        </code>\r\n        <body>\r\n            <richtext>\r\n                <pardef id='1' leftmargin='1.1000in'/>\r\n                <par def='1'>\r\n                    <run>\r\n                        <font size='24pt' color='#000066'/>Entry\r\n                    </run>\r\n                </par>\r\n                <par def='1'/>\r\n                <table widthtype='fitmargins' leftmargin='1.1000in' refwidth='10.4063in'>\r\n                    <tablecolumn\r\n width='2in'/>\r\n                    <tablecolumn width='100%'/>\r\n                    <tablerow>\r\n                        <tablecell bgcolor='white'>\r\n                            <pardef id='3' align='right' rightmargin='1.8000in'/>\r\n                            <par def='3'>\r\n                                <run>\r\n                                    <font size='12pt' color='#000066'/>name\r\n                                </run>\r\n                            </par>\r\n                        </tablecell>\r\n                        <tablecell bgcolor='#f2f2f2'>\r\n                            <pardef id='4' leftmargin='0.2000in'/>\r\n                            <par def='4'>\r\n                                <run>\r\n                                    <font size='12pt'/>\r\n                                </run>\r\n                                <run>\r\n                                    <font size='12pt'/>\r\n                                    <field\r\n showdelimiters='false' type='text' kind='editable' name='name'/>\r\n                                </run>\r\n                                <run\r\n>\r\n                                    <font size='12pt'/>\r\n                                </run>\r\n                            </par>\r\n                        </tablecell>\r\n                    </tablerow>\r\n                    <tablerow>\r\n                        <tablecell bgcolor='white'>\r\n                            <pardef id='5' align='right' rightmargin='1.8000in'/>\r\n                            <par def='5'>\r\n                                <run>\r\n                                    <font size='12pt' color='#000066'/>email\r\n                                </run>\r\n                            </par>\r\n                        </tablecell>\r\n                        <tablecell bgcolor='#f2f2f2'>\r\n                            <pardef id='6' leftmargin='0.2000in'/>\r\n                            <par def='6'>\r\n                                <run>\r\n                                    <font size='12pt'/>\r\n                                </run>\r\n                                <run>\r\n                                    <font size='12pt'/>\r\n                                    <field\r\n showdelimiters='false' type='text' kind='editable' name='email'/>\r\n                                </run>\r\n                                <run\r\n>\r\n                                    <font size='12pt'/>\r\n                                </run>\r\n                            </par>\r\n                        </tablecell>\r\n                    </tablerow>\r\n                </table>\r\n                <par def='1'/>\r\n            </richtext>\r\n        </body>\r\n    </form>\r\n    <view name='entriesView' xmlns='http://www.lotus.com/dxl' version='12.0' maintenanceversion='1.0'\r\n replicaid='48258435003E8283' showinmenu='false' publicaccess='false' designerversion='8.5.3'\r\n unreadmarks='none' onopengoto='lastopened' onrefresh='refresh' headers='beveled'\r\n opencollapsed='false' showresponsehierarchy='false' showmargin='false' shrinkrows='false'\r\n extendlastcolumn='false' showhierarchies='false' unreadcolor='black' rowlinecount='1'\r\n headerlinecount='1' rowspacing='1' bgcolor='white' totalscolor='black' headerbgcolor='white'\r\n boldunreadrows='false' evaluateactions='false' allownewdocuments='false'\r\n allowcustomizations='false' hidemarginborder='false' marginwidth='0px' marginbgcolor='white'\r\n uniquekeys='false'>\r\n        <noteinfo noteid='222' unid='7D8825821129AE964825881D000C6A85' sequence='4'>\r\n            <created>\r\n                <datetime>20220407T101537,01+08</datetime>\r\n            </created>\r\n            <modified>\r\n                <datetime>20220408T102424,75+08</datetime>\r\n            </modified>\r\n            <revised>\r\n                <datetime>20220408T102424,74+08</datetime>\r\n            </revised>\r\n            <lastaccessed>\r\n                <datetime>20220408T102424,74+08</datetime>\r\n            </lastaccessed>\r\n            <addedtofile>\r\n                <datetime>20220407T101537,00+08</datetime>\r\n            </addedtofile>\r\n        </noteinfo>\r\n        <updatedby>\r\n            <name>CN=LP2-AP-51723551/O=HCLPNP</name>\r\n            <name>CN=John Doe/O=ProjectKeep</name>\r\n        </updatedby>\r\n        <code\r\n event='selection'>\r\n            <formula>SELECT Form = \"Entry\"</formula>\r\n        </code>\r\n        <column sort='ascending' hidedetailrows='false' itemname='name' width='10'\r\n resizable='true' separatemultiplevalues='false' sortnoaccent='true' sortnocase='true'\r\n showaslinks='false'>\r\n            <columnheader title='name'>\r\n                <font size='9pt' style='bold'/>\r\n            </columnheader>\r\n        </column>\r\n        <column sort='ascending' hidedetailrows='false' itemname='email' width='10'\r\n resizable='true' separatemultiplevalues='false' sortnoaccent='true' sortnocase='true'\r\n showaslinks='false'>\r\n            <columnheader title='email'>\r\n                <font size='9pt' style='bold'/>\r\n            </columnheader>\r\n        </column>\r\n    </view>\r\n    <form name='TestForm' alias='TestForm' xmlns='http://www.lotus.com/dxl' version='12.0'\r\n maintenanceversion='1.0' replicaid='48258435003E8283' hide='web mobile' publicaccess='false'\r\n comment='Generated by KEEP '>\r\n        <noteinfo noteid='22e' unid='08161D1BBEFBEA024825881D000C7A69' sequence='7'>\r\n            <created>\r\n                <datetime>20220407T101617,69+08</datetime>\r\n            </created>\r\n            <modified>\r\n                <datetime>20220408T102557,04+08</datetime>\r\n            </modified>\r\n            <revised>\r\n                <datetime>20220408T102557,03+08</datetime>\r\n            </revised>\r\n            <lastaccessed>\r\n                <datetime>20220408T102557,03+08</datetime>\r\n            </lastaccessed>\r\n            <addedtofile>\r\n                <datetime>20220407T101617,70+08</datetime>\r\n            </addedtofile>\r\n        </noteinfo>\r\n        <updatedby>\r\n            <name>CN=John Doe/O=ProjectKeep</name>\r\n        </updatedby>\r\n        <code event='windowtitle'>\r\n            <formula\r\n>@If(@IsNewDoc;\"New TestForm\";\"TestForm \"+@Text(@Created))</formula>\r\n        </code>\r\n        <body>\r\n            <richtext>\r\n                <pardef id='1' leftmargin='1.1000in'/>\r\n                <par def='1'>\r\n                    <run>\r\n                        <font size='24pt' color='#000066'/>TestForm\r\n                    </run>\r\n                </par>\r\n                <par def='1'/>\r\n                <table widthtype='fitmargins' leftmargin='1.1000in' refwidth='10.4063in'>\r\n                    <tablecolumn\r\n width='2in'/>\r\n                    <tablecolumn width='100%'/>\r\n                    <tablerow>\r\n                        <tablecell bgcolor='white'>\r\n                            <pardef id='3' align='right' rightmargin='1.8000in'/>\r\n                            <par def='3'>\r\n                                <run>\r\n                                    <font size='12pt' color='#000066'/>first_name\r\n                                </run>\r\n                            </par>\r\n                        </tablecell>\r\n                        <tablecell bgcolor='#f2f2f2'>\r\n                            <pardef id='4' leftmargin='0.2000in'/>\r\n                            <par def='4'>\r\n                                <run>\r\n                                    <font size='12pt'/>\r\n                                </run>\r\n                                <run>\r\n                                    <font size='12pt'/>\r\n                                    <field\r\n showdelimiters='false' type='text' kind='editable' name='first_name'/>\r\n                                </run>\r\n                                <run\r\n>\r\n                                    <font size='12pt'/>\r\n                                </run>\r\n                            </par>\r\n                        </tablecell>\r\n                    </tablerow>\r\n                    <tablerow>\r\n                        <tablecell bgcolor='white'>\r\n                            <pardef id='5' align='right' rightmargin='1.8000in'/>\r\n                            <par def='5'>\r\n                                <run>\r\n                                    <font size='12pt' color='#000066'/>last_name\r\n                                </run>\r\n                            </par>\r\n                        </tablecell>\r\n                        <tablecell bgcolor='#f2f2f2'>\r\n                            <pardef id='6' leftmargin='0.2000in'/>\r\n                            <par def='6'>\r\n                                <run>\r\n                                    <font size='12pt'/>\r\n                                </run>\r\n                                <run>\r\n                                    <font size='12pt'/>\r\n                                    <field\r\n showdelimiters='false' type='text' kind='editable' name='last_name'/>\r\n                                </run>\r\n                                <run\r\n>\r\n                                    <font size='12pt'/>\r\n                                </run>\r\n                            </par>\r\n                        </tablecell>\r\n                    </tablerow>\r\n                    <tablerow>\r\n                        <tablecell bgcolor='white'>\r\n                            <pardef id='7' align='right' rightmargin='1.8000in'/>\r\n                            <par def='7'>\r\n                                <run>\r\n                                    <font size='12pt' color='#000066'/>email\r\n                                </run>\r\n                            </par>\r\n                        </tablecell>\r\n                        <tablecell bgcolor='#f2f2f2'>\r\n                            <pardef id='8' leftmargin='0.2000in'/>\r\n                            <par def='8'>\r\n                                <run>\r\n                                    <font size='12pt'/>\r\n                                </run>\r\n                                <run>\r\n                                    <font size='12pt'/>\r\n                                    <field\r\n showdelimiters='false' type='text' kind='editable' name='email'/>\r\n                                </run>\r\n                                <run\r\n>\r\n                                    <font size='12pt'/>\r\n                                </run>\r\n                            </par>\r\n                        </tablecell>\r\n                    </tablerow>\r\n                    <tablerow>\r\n                        <tablecell bgcolor='white'>\r\n                            <pardef id='9' align='right' rightmargin='1.8000in'/>\r\n                            <par def='9'>\r\n                                <run>\r\n                                    <font size='12pt' color='#000066'/>gender\r\n                                </run>\r\n                            </par>\r\n                        </tablecell>\r\n                        <tablecell bgcolor='#f2f2f2'>\r\n                            <pardef id='10' leftmargin='0.2000in'/>\r\n                            <par def='10'>\r\n                                <run>\r\n                                    <font size='12pt'/>\r\n                                </run>\r\n                                <run>\r\n                                    <font size='12pt'/>\r\n                                    <field\r\n showdelimiters='false' type='text' kind='editable' name='gender'/>\r\n                                </run>\r\n                                <run\r\n>\r\n                                    <font size='12pt'/>\r\n                                </run>\r\n                            </par>\r\n                        </tablecell>\r\n                    </tablerow>\r\n                    <tablerow>\r\n                        <tablecell bgcolor='white'>\r\n                            <pardef id='11' align='right' rightmargin='1.8000in'/>\r\n                            <par def='11'>\r\n                                <run>\r\n                                    <font size='12pt' color='#000066'/>ip_address\r\n                                </run>\r\n                            </par>\r\n                        </tablecell>\r\n                        <tablecell bgcolor='#f2f2f2'>\r\n                            <pardef id='12' leftmargin='0.2000in'/>\r\n                            <par def='12'>\r\n                                <run>\r\n                                    <font size='12pt'/>\r\n                                </run>\r\n                                <run>\r\n                                    <font size='12pt'/>\r\n                                    <field\r\n showdelimiters='false' type='text' kind='editable' name='ip_address'/>\r\n                                </run>\r\n                                <run\r\n>\r\n                                    <font size='12pt'/>\r\n                                </run>\r\n                            </par>\r\n                        </tablecell>\r\n                    </tablerow>\r\n                    <tablerow>\r\n                        <tablecell bgcolor='white'>\r\n                            <pardef id='13' align='right' rightmargin='1.8000in'/>\r\n                            <par def='13'>\r\n                                <run>\r\n                                    <font size='12pt' color='#000066'/>Color\r\n                                </run>\r\n                            </par>\r\n                        </tablecell>\r\n                        <tablecell bgcolor='#f2f2f2'>\r\n                            <pardef id='14' leftmargin='0.2000in'/>\r\n                            <par def='14'>\r\n                                <run>\r\n                                    <font size='12pt'/>\r\n                                </run>\r\n                                <run>\r\n                                    <font size='12pt'/>\r\n                                    <field\r\n showdelimiters='false' type='text' kind='editable' name='Color'/>\r\n                                </run>\r\n                                <run\r\n>\r\n                                    <font size='12pt'/>\r\n                                </run>\r\n                            </par>\r\n                        </tablecell>\r\n                    </tablerow>\r\n                    <tablerow>\r\n                        <tablecell bgcolor='white'>\r\n                            <pardef id='15' align='right' rightmargin='1.8000in'/>\r\n                            <par def='15'>\r\n                                <run>\r\n                                    <font size='12pt' color='#000066'/>Pet\r\n                                </run>\r\n                            </par>\r\n                        </tablecell>\r\n                        <tablecell bgcolor='#f2f2f2'>\r\n                            <pardef id='16' leftmargin='0.2000in'/>\r\n                            <par def='16'>\r\n                                <run>\r\n                                    <font size='12pt'/>\r\n                                </run>\r\n                                <run>\r\n                                    <font size='12pt'/>\r\n                                    <field\r\n showdelimiters='false' type='text' kind='editable' name='Pet'/>\r\n                                </run>\r\n                                <run\r\n>\r\n                                    <font size='12pt'/>\r\n                                </run>\r\n                            </par>\r\n                        </tablecell>\r\n                    </tablerow>\r\n                    <tablerow>\r\n                        <tablecell bgcolor='white'>\r\n                            <pardef id='17' align='right' rightmargin='1.8000in'/>\r\n                            <par def='17'>\r\n                                <run>\r\n                                    <font size='12pt' color='#000066'/>@created\r\n                                </run>\r\n                            </par>\r\n                        </tablecell>\r\n                        <tablecell bgcolor='#f2f2f2'>\r\n                            <pardef id='18' leftmargin='0.2000in'/>\r\n                            <par def='18'>\r\n                                <run>\r\n                                    <font size='12pt'/>\r\n                                </run>\r\n                                <run>\r\n                                    <font size='12pt'/>\r\n                                    <field\r\n showdelimiters='false' type='datetime' kind='editable' name='@created'>\r\n                                        <datetimeformat\r\n show='date' date='yearmonthday' time='hourminutesecond' zone='never'/>\r\n                                    </field>\r\n                                </run>\r\n                                <run\r\n>\r\n                                    <font size='12pt'/>\r\n                                </run>\r\n                            </par>\r\n                        </tablecell>\r\n                    </tablerow>\r\n                </table>\r\n                <par def='1'/>\r\n            </richtext>\r\n        </body>\r\n    </form>\r\n    <form name='OdataSampleForm' alias='OdataSampleForm' xmlns='http://www.lotus.com/dxl'\r\n version='12.0' maintenanceversion='1.0' replicaid='48258435003E8283' hide='web mobile'\r\n publicaccess='false' comment='Generated by KEEP '>\r\n        <noteinfo noteid='23a' unid='A2D799CA72ED1E1E4825881D000C8ACB' sequence='4'>\r\n            <created>\r\n                <datetime>20220407T101659,63+08</datetime>\r\n            </created>\r\n            <modified>\r\n                <datetime>20220408T102525,76+08</datetime>\r\n            </modified>\r\n            <revised>\r\n                <datetime>20220408T102525,75+08</datetime>\r\n            </revised>\r\n            <lastaccessed>\r\n                <datetime>20220408T102525,75+08</datetime>\r\n            </lastaccessed>\r\n            <addedtofile>\r\n                <datetime>20220407T101659,62+08</datetime>\r\n            </addedtofile>\r\n        </noteinfo>\r\n        <updatedby>\r\n            <name>CN=John Doe/O=ProjectKeep</name>\r\n        </updatedby>\r\n        <code event='windowtitle'>\r\n            <formula\r\n>@If(@IsNewDoc;\"New OdataSampleForm\";\"OdataSampleForm \"+@Text(@Created))</formula>\r\n        </code>\r\n        <body>\r\n            <richtext>\r\n                <pardef id='1' leftmargin='1.1000in'/>\r\n                <par def='1'>\r\n                    <run>\r\n                        <font size='24pt' color='#000066'/>OdataSampleForm\r\n                    </run>\r\n                </par>\r\n                <par def='1'/>\r\n                <table widthtype='fitmargins' leftmargin='1.1000in' refwidth='10.4063in'>\r\n                    <tablecolumn\r\n width='2in'/>\r\n                    <tablecolumn width='100%'/>\r\n                    <tablerow>\r\n                        <tablecell bgcolor='white'>\r\n                            <pardef id='3' align='right' rightmargin='1.8000in'/>\r\n                            <par def='3'>\r\n                                <run>\r\n                                    <font size='12pt' color='#000066'/>name\r\n                                </run>\r\n                            </par>\r\n                        </tablecell>\r\n                        <tablecell bgcolor='#f2f2f2'>\r\n                            <pardef id='4' leftmargin='0.2000in'/>\r\n                            <par def='4'>\r\n                                <run>\r\n                                    <font size='12pt'/>\r\n                                </run>\r\n                                <run>\r\n                                    <font size='12pt'/>\r\n                                    <field\r\n showdelimiters='false' type='text' kind='editable' name='name'/>\r\n                                </run>\r\n                                <run\r\n>\r\n                                    <font size='12pt'/>\r\n                                </run>\r\n                            </par>\r\n                        </tablecell>\r\n                    </tablerow>\r\n                    <tablerow>\r\n                        <tablecell bgcolor='white'>\r\n                            <pardef id='5' align='right' rightmargin='1.8000in'/>\r\n                            <par def='5'>\r\n                                <run>\r\n                                    <font size='12pt' color='#000066'/>email\r\n                                </run>\r\n                            </par>\r\n                        </tablecell>\r\n                        <tablecell bgcolor='#f2f2f2'>\r\n                            <pardef id='6' leftmargin='0.2000in'/>\r\n                            <par def='6'>\r\n                                <run>\r\n                                    <font size='12pt'/>\r\n                                </run>\r\n                                <run>\r\n                                    <font size='12pt'/>\r\n                                    <field\r\n showdelimiters='false' type='text' kind='editable' name='email'/>\r\n                                </run>\r\n                                <run\r\n>\r\n                                    <font size='12pt'/>\r\n                                </run>\r\n                            </par>\r\n                        </tablecell>\r\n                    </tablerow>\r\n                </table>\r\n                <par def='1'/>\r\n            </richtext>\r\n        </body>\r\n    </form>\r\n    <form name='NewForm' alias='NewForm' xmlns='http://www.lotus.com/dxl' version='12.0'\r\n maintenanceversion='1.0' replicaid='48258435003E8283' hide='web mobile' publicaccess='false'\r\n comment='Generated by KEEP '>\r\n        <noteinfo noteid='23e' unid='B02B73CC72F538AB4825881D000C8B81' sequence='4'>\r\n            <created>\r\n                <datetime>20220407T101701,45+08</datetime>\r\n            </created>\r\n            <modified>\r\n                <datetime>20220408T102527,90+08</datetime>\r\n            </modified>\r\n            <revised>\r\n                <datetime>20220408T102527,89+08</datetime>\r\n            </revised>\r\n            <lastaccessed>\r\n                <datetime>20220408T102527,89+08</datetime>\r\n            </lastaccessed>\r\n            <addedtofile>\r\n                <datetime>20220407T101701,45+08</datetime>\r\n            </addedtofile>\r\n        </noteinfo>\r\n        <updatedby>\r\n            <name>CN=John Doe/O=ProjectKeep</name>\r\n        </updatedby>\r\n        <code event='windowtitle'>\r\n            <formula\r\n>@If(@IsNewDoc;\"New NewForm\";\"NewForm \"+@Text(@Created))</formula>\r\n        </code>\r\n        <body>\r\n            <richtext>\r\n                <pardef id='1' leftmargin='1.1000in'/>\r\n                <par def='1'>\r\n                    <run>\r\n                        <font size='24pt' color='#000066'/>NewForm\r\n                    </run>\r\n                </par>\r\n                <par def='1'/>\r\n                <table widthtype='fitmargins' leftmargin='1.1000in' refwidth='10.4063in'>\r\n                    <tablecolumn\r\n width='2in'/>\r\n                    <tablecolumn width='100%'/>\r\n                    <tablerow>\r\n                        <tablecell bgcolor='white'>\r\n                            <pardef id='3' align='right' rightmargin='1.8000in'/>\r\n                            <par def='3'>\r\n                                <run>\r\n                                    <font size='12pt' color='#000066'/>Model\r\n                                </run>\r\n                            </par>\r\n                        </tablecell>\r\n                        <tablecell bgcolor='#f2f2f2'>\r\n                            <pardef id='4' leftmargin='0.2000in'/>\r\n                            <par def='4'>\r\n                                <run>\r\n                                    <font size='12pt'/>\r\n                                </run>\r\n                                <run>\r\n                                    <font size='12pt'/>\r\n                                    <field\r\n showdelimiters='false' type='text' kind='editable' name='Model'/>\r\n                                </run>\r\n                                <run\r\n>\r\n                                    <font size='12pt'/>\r\n                                </run>\r\n                            </par>\r\n                        </tablecell>\r\n                    </tablerow>\r\n                    <tablerow>\r\n                        <tablecell bgcolor='white'>\r\n                            <pardef id='5' align='right' rightmargin='1.8000in'/>\r\n                            <par def='5'>\r\n                                <run>\r\n                                    <font size='12pt' color='#000066'/>View\r\n                                </run>\r\n                            </par>\r\n                        </tablecell>\r\n                        <tablecell bgcolor='#f2f2f2'>\r\n                            <pardef id='6' leftmargin='0.2000in'/>\r\n                            <par def='6'>\r\n                                <run>\r\n                                    <font size='12pt'/>\r\n                                </run>\r\n                                <run>\r\n                                    <font size='12pt'/>\r\n                                    <field\r\n showdelimiters='false' type='text' kind='editable' name='View'/>\r\n                                </run>\r\n                                <run\r\n>\r\n                                    <font size='12pt'/>\r\n                                </run>\r\n                            </par>\r\n                        </tablecell>\r\n                    </tablerow>\r\n                    <tablerow>\r\n                        <tablecell bgcolor='white'>\r\n                            <pardef id='7' align='right' rightmargin='1.8000in'/>\r\n                            <par def='7'>\r\n                                <run>\r\n                                    <font size='12pt' color='#000066'/>Controller\r\n                                </run>\r\n                            </par>\r\n                        </tablecell>\r\n                        <tablecell bgcolor='#f2f2f2'>\r\n                            <pardef id='8' leftmargin='0.2000in'/>\r\n                            <par def='8'>\r\n                                <run>\r\n                                    <font size='12pt'/>\r\n                                </run>\r\n                                <run>\r\n                                    <font size='12pt'/>\r\n                                    <field\r\n showdelimiters='false' type='text' kind='editable' name='Controller'/>\r\n                                </run>\r\n                                <run\r\n>\r\n                                    <font size='12pt'/>\r\n                                </run>\r\n                            </par>\r\n                        </tablecell>\r\n                    </tablerow>\r\n                </table>\r\n                <par def='1'/>\r\n            </richtext>\r\n        </body>\r\n    </form>\r\n    <form name='SampleEntry' alias='SampleEntry' xmlns='http://www.lotus.com/dxl'\r\n version='12.0' maintenanceversion='1.0' replicaid='48258435003E8283' hide='web mobile'\r\n publicaccess='false' comment='Generated by KEEP '>\r\n        <noteinfo noteid='242' unid='420601BF7E637D4A4825881D000C8FAA' sequence='4'>\r\n            <created>\r\n                <datetime>20220407T101712,10+08</datetime>\r\n            </created>\r\n            <modified>\r\n                <datetime>20220408T102537,86+08</datetime>\r\n            </modified>\r\n            <revised>\r\n                <datetime>20220408T102537,85+08</datetime>\r\n            </revised>\r\n            <lastaccessed>\r\n                <datetime>20220408T102537,85+08</datetime>\r\n            </lastaccessed>\r\n            <addedtofile>\r\n                <datetime>20220407T101712,11+08</datetime>\r\n            </addedtofile>\r\n        </noteinfo>\r\n        <updatedby>\r\n            <name>CN=John Doe/O=ProjectKeep</name>\r\n        </updatedby>\r\n        <code event='windowtitle'>\r\n            <formula\r\n>@If(@IsNewDoc;\"New SampleEntry\";\"SampleEntry \"+@Text(@Created))</formula>\r\n        </code>\r\n        <body>\r\n            <richtext>\r\n                <pardef id='1' leftmargin='1.1000in'/>\r\n                <par def='1'>\r\n                    <run>\r\n                        <font size='24pt' color='#000066'/>SampleEntry\r\n                    </run>\r\n                </par>\r\n                <par def='1'/>\r\n                <table widthtype='fitmargins' leftmargin='1.1000in' refwidth='10.4063in'>\r\n                    <tablecolumn\r\n width='2in'/>\r\n                    <tablecolumn width='100%'/>\r\n                    <tablerow>\r\n                        <tablecell bgcolor='white'>\r\n                            <pardef id='3' align='right' rightmargin='1.8000in'/>\r\n                            <par def='3'>\r\n                                <run>\r\n                                    <font size='12pt' color='#000066'/>name\r\n                                </run>\r\n                            </par>\r\n                        </tablecell>\r\n                        <tablecell bgcolor='#f2f2f2'>\r\n                            <pardef id='4' leftmargin='0.2000in'/>\r\n                            <par def='4'>\r\n                                <run>\r\n                                    <font size='12pt'/>\r\n                                </run>\r\n                                <run>\r\n                                    <font size='12pt'/>\r\n                                    <field\r\n showdelimiters='false' type='text' kind='editable' name='name'/>\r\n                                </run>\r\n                                <run\r\n>\r\n                                    <font size='12pt'/>\r\n                                </run>\r\n                            </par>\r\n                        </tablecell>\r\n                    </tablerow>\r\n                    <tablerow>\r\n                        <tablecell bgcolor='white'>\r\n                            <pardef id='5' align='right' rightmargin='1.8000in'/>\r\n                            <par def='5'>\r\n                                <run>\r\n                                    <font size='12pt' color='#000066'/>email\r\n                                </run>\r\n                            </par>\r\n                        </tablecell>\r\n                        <tablecell bgcolor='#f2f2f2'>\r\n                            <pardef id='6' leftmargin='0.2000in'/>\r\n                            <par def='6'>\r\n                                <run>\r\n                                    <font size='12pt'/>\r\n                                </run>\r\n                                <run>\r\n                                    <font size='12pt'/>\r\n                                    <field\r\n showdelimiters='false' type='text' kind='editable' name='email'/>\r\n                                </run>\r\n                                <run\r\n>\r\n                                    <font size='12pt'/>\r\n                                </run>\r\n                            </par>\r\n                        </tablecell>\r\n                    </tablerow>\r\n                </table>\r\n                <par def='1'/>\r\n            </richtext>\r\n        </body>\r\n    </form>\r\n    <view name='entries' xmlns='http://www.lotus.com/dxl' version='12.0' maintenanceversion='1.0'\r\n replicaid='48258435003E8283' showinmenu='false' publicaccess='false' designerversion='8.5.3'\r\n unreadmarks='none' onopengoto='lastopened' onrefresh='refresh' headers='beveled'\r\n opencollapsed='false' showresponsehierarchy='false' showmargin='false' shrinkrows='false'\r\n extendlastcolumn='false' showhierarchies='false' unreadcolor='black' rowlinecount='1'\r\n headerlinecount='1' rowspacing='1' bgcolor='white' totalscolor='black' headerbgcolor='white'\r\n boldunreadrows='false' evaluateactions='false' allownewdocuments='false'\r\n allowcustomizations='false' hidemarginborder='false' marginwidth='0px' marginbgcolor='white'\r\n uniquekeys='false'>\r\n        <noteinfo noteid='246' unid='F8615B5062C3CCA14825881D000C9007' sequence='4'>\r\n            <created>\r\n                <datetime>20220407T101713,03+08</datetime>\r\n            </created>\r\n            <modified>\r\n                <datetime>20220408T102538,75+08</datetime>\r\n            </modified>\r\n            <revised>\r\n                <datetime>20220408T102538,74+08</datetime>\r\n            </revised>\r\n            <lastaccessed>\r\n                <datetime>20220408T102538,74+08</datetime>\r\n            </lastaccessed>\r\n            <addedtofile>\r\n                <datetime>20220407T101713,03+08</datetime>\r\n            </addedtofile>\r\n        </noteinfo>\r\n        <updatedby>\r\n            <name>CN=LP2-AP-51723551/O=HCLPNP</name>\r\n            <name>CN=John Doe/O=ProjectKeep</name>\r\n        </updatedby>\r\n        <code\r\n event='selection'>\r\n            <formula>SELECT Form = \"SampleEntry\"</formula>\r\n        </code>\r\n        <column sort='ascending' hidedetailrows='false' itemname='name' width='10'\r\n resizable='true' separatemultiplevalues='false' sortnoaccent='true' sortnocase='true'\r\n showaslinks='false'>\r\n            <columnheader title='name'>\r\n                <font size='9pt' style='bold'/>\r\n            </columnheader>\r\n        </column>\r\n        <column sort='ascending' hidedetailrows='false' itemname='email' width='10'\r\n resizable='true' separatemultiplevalues='false' sortnoaccent='true' sortnocase='true'\r\n showaslinks='false'>\r\n            <columnheader title='email'>\r\n                <font size='9pt' style='bold'/>\r\n            </columnheader>\r\n        </column>\r\n    </view>\r\n</database>"
                                    }
                                }
                            }
                        },
                        "description": "Get full DXL"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "jwt": [
                        ]
                    }
                ],
                "operationId": "getDxl",
                "summary": "Get all DXL",
                "description": "Raw DXL of a given database",
                "x-keep-version": 5
            },
            "put": {
                "requestBody": {
                    "description": "XML in DXL format. If not compliant server will fail",
                    "content": {
                        "text/xml": {
                            "schema": {
                                "type": "string"
                            },
                            "examples": {
                                "dxlSimple": {
                                    "value": "<database xmlns='http://www.lotus.com/dxl' replicaid='48258435003E8283' path='Demo.nsf' title='Demo'>\r\n    <view name='($All)' xmlns='http://www.lotus.com/dxl' version='12.0' maintenanceversion='1.0'\r\n replicaid='48258435003E8283' showinmenu='false' publicaccess='false' designerversion='8.5.3'\r\n default='true' unreadmarks='none' onopengoto='lastopened' onrefresh='displayindicator'\r\n headers='beveled' opencollapsed='false' showresponsehierarchy='true' showmargin='true'\r\n shrinkrows='false' extendlastcolumn='false' showhierarchies='false' unreadcolor='black'\r\n rowlinecount='1' headerlinecount='1' rowspacing='1' bgcolor='white' totalscolor='black'\r\n headerbgcolor='white' boldunreadrows='false' evaluateactions='false' allownewdocuments='false'\r\n allowcustomizations='false' hidemarginborder='false' marginwidth='0px' marginbgcolor='white'\r\n uniquekeys='false'>\r\n        <noteinfo noteid='11a' unid='0E35D520A1EBBB5B48258435003E8284' sequence='3'>\r\n            <created>\r\n                <datetime>20190712T192246,44+08</datetime>\r\n            </created>\r\n            <modified>\r\n                <datetime>20220407T151018,22+08</datetime>\r\n            </modified>\r\n            <revised>\r\n                <datetime>20220407T151018,21+08</datetime>\r\n            </revised>\r\n            <lastaccessed>\r\n                <datetime>20220407T151018,21+08</datetime>\r\n            </lastaccessed>\r\n            <addedtofile>\r\n                <datetime>20190712T192246,45+08</datetime>\r\n            </addedtofile>\r\n        </noteinfo>\r\n        <updatedby>\r\n            <name>CN=LP2-AP-51723551/O=HCLPNP</name>\r\n            <name>CN=YING FENG/O=HCLPNP</name>\r\n        </updatedby>\r\n        <code\r\n event='selection'>\r\n            <formula>SELECT @All</formula>\r\n        </code>\r\n        <actionbar bgcolor='#f0f0f0' bordercolor='black'>\r\n            <actionbuttonstyle bgcolor='#f0f0f0'/>\r\n            <font size='9pt' color='system'/>\r\n            <border\r\n style='solid' width='0px 0px 1px'/>\r\n            <action title='Categori_ze' showinbar='false' systemcommand='categorize'/>\r\n            <action title='_Edit Document' showinbar='false' systemcommand='edit'/>\r\n            <action title='_Send Document' showinbar='false' systemcommand='send'/>\r\n            <action title='_Forward' showinbar='false' systemcommand='forward'/>\r\n            <action title='_Move To Folder...' showinbar='false' systemcommand='movetofolder'/>\r\n            <action title='_Remove From Folder' showinbar='false' systemcommand='removefromfolder'/>\r\n            <action title='_Read' showinbar='false' systemcommand='markread'/>\r\n            <action title='_Unread' showinbar='false' systemcommand='markunread'/>\r\n            <action title='_Open in New Window' showinbar='false' systemcommand='openinnewwindow'/>\r\n            <action title='_Print...' showinbar='false' systemcommand='print'/>\r\n            <action title='_Delete' showinbar='false' systemcommand='delete'/>\r\n            <action title='_Document Properties' showinbar='false' systemcommand='properties'/>\r\n            <action title='C_ut' showinbar='false' systemcommand='cut'/>\r\n            <action title='_Copy' showinbar='false' systemcommand='copy'/>\r\n            <action title='Copy as Document _Link' showinbar='false' systemcommand='copyasdoclink'/>\r\n            <action title='Copy as _Table' showinbar='false' systemcommand='copyastable'/>\r\n            <action title='P_aste' showinbar='false' systemcommand='paste'/>\r\n            <action title='_Open' showinbar='false' systemcommand='open'/>\r\n            <action title='Bookmark' showinbar='false' systemcommand='bookmark'/>\r\n        </actionbar>\r\n        <column hidedetailrows='false' itemname='$0' width='3.7500' resizable='true'\r\n separatemultiplevalues='false' sortnoaccent='true' sortnocase='true' showaslinks='false'>\r\n            <columnheader\r\n title='#'>\r\n                <font size='9pt' style='bold'/>\r\n            </columnheader>\r\n            <code event='value'>\r\n                <formula\r\n>@DocNumber</formula>\r\n            </code>\r\n        </column>\r\n        <column hidedetailrows='false' itemname='Form' width='10' resizable='true'\r\n separatemultiplevalues='false' sortnoaccent='false' sortnocase='true' showaslinks='false'>\r\n            <columnheader\r\n title='Form'>\r\n                <font size='9pt' style='bold'/>\r\n            </columnheader>\r\n        </column>\r\n        <column hidedetailrows='false' itemname='$2' width='10' resizable='true' separatemultiplevalues='false'\r\n sortnoaccent='false' sortnocase='true' showaslinks='false'>\r\n            <columnheader\r\n title='Created'>\r\n                <font size='9pt' style='bold'/>\r\n            </columnheader>\r\n            <code event='value'>\r\n                <formula\r\n>@Created</formula>\r\n            </code>\r\n        </column>\r\n    </view>\r\n    <note class='form' xmlns='http://www.lotus.com/dxl' version='12.0' maintenanceversion='1.0'\r\n replicaid='48258435003E8283'>\r\n        <noteinfo noteid='156' unid='A552C92D7F1DCFB14825843500404086' sequence='3'>\r\n            <created>\r\n                <datetime>20190712T194148,22+08</datetime>\r\n            </created>\r\n            <modified>\r\n                <datetime>20220407T151018,03+08</datetime>\r\n            </modified>\r\n            <revised>\r\n                <datetime>20220407T151018,02+08</datetime>\r\n            </revised>\r\n            <lastaccessed>\r\n                <datetime>20220407T151018,02+08</datetime>\r\n            </lastaccessed>\r\n            <addedtofile>\r\n                <datetime>20190712T194148,22+08</datetime>\r\n            </addedtofile>\r\n        </noteinfo>\r\n        <updatedby>\r\n            <name>CN=YING FENG/O=HCLPNP</name>\r\n        </updatedby>\r\n        <item name='$TITLE'>\r\n            <text>.settings/org.eclipse.wst.validation.prefs</text>\r\n        </item>\r\n        <item name='$Flags'>\r\n            <text>~C4g</text>\r\n        </item>\r\n        <item name='$DesignerVersion'>\r\n            <text>8.5.3</text>\r\n        </item>\r\n        <item name='$FileSize' sign='true'>\r\n            <number>39</number>\r\n        </item>\r\n        <item name='$FileData' sign='true'>\r\n            <rawitemdata type='1'>\r\nYQAYAAAAAAAnAAAAAQAAAAAAAAAAAAAAYAA5AAAAJwAoAAAAAAAAAAAAb3ZlcnJpZGU9dHJ1ZQpz\r\ndXNwZW5kPXRydWUKdmYudmVyc2lvbj0zAA==\r\n</rawitemdata>\r\n        </item>\r\n        <item name='$FileNames' sign='true'>\r\n            <text>.settings/org.eclipse.wst.validation.prefs</text>\r\n        </item>\r\n    </note>\r\n    <note class='form' xmlns='http://www.lotus.com/dxl' version='12.0' maintenanceversion='1.0'\r\n replicaid='48258435003E8283'>\r\n        <noteinfo noteid='15a' unid='AD725606B63481A34825843500404297' sequence='4'>\r\n            <created>\r\n                <datetime>20190712T194153,51+08</datetime>\r\n            </created>\r\n            <modified>\r\n                <datetime>20220407T151018,04+08</datetime>\r\n            </modified>\r\n            <revised>\r\n                <datetime>20220407T151018,03+08</datetime>\r\n            </revised>\r\n            <lastaccessed>\r\n                <datetime>20220407T151018,03+08</datetime>\r\n            </lastaccessed>\r\n            <addedtofile>\r\n                <datetime>20190712T194153,51+08</datetime>\r\n            </addedtofile>\r\n        </noteinfo>\r\n        <updatedby>\r\n            <name>CN=YING FENG/O=HCLPNP</name>\r\n        </updatedby>\r\n        <item name='$Flags'>\r\n            <text>~C4g</text>\r\n        </item>\r\n        <item name='$FlagsExt'>\r\n            <text>w</text>\r\n        </item>\r\n        <item name='$TITLE'>\r\n            <text>WEB-INF/xsp.properties</text>\r\n        </item>\r\n        <item name='$DesignerVersion'>\r\n            <text>8.5.3</text>\r\n        </item>\r\n        <item name='$FileSize' sign='true'>\r\n            <number>211</number>\r\n        </item>\r\n        <item name='$FileData' sign='true'>\r\n            <rawitemdata type='1'>\r\nYQAYAAAAAADTAAAAAQAAAAAAAAAAAAAAYADlAAAA0wDUAAAAAAAAAAAAeHNwLmFqYXgucmVuZGVy\r\nd2hvbGV0cmVlPWZhbHNlDQp4c3AuY2xpZW50LnNjcmlwdC5yYWRpb0NoZWNrYm94LmllLm9uY2hh\r\nbmdlLnRyaWdnZXI9ZWFybHktb25jbGljaw0KeHNwLmNzcmYucHJvdGVjdGlvbj10cnVlDQp4c3Au\r\ncGVyc2lzdGVuY2UubW9kZT1maWxlDQp4c3AucmVzb3VyY2VzLmFnZ3JlZ2F0ZT10cnVlDQp4c3Au\r\nZXJyb3IucGFnZS5kZWZhdWx0PXRydWUNCmU=\r\n</rawitemdata>\r\n        </item>\r\n        <item name='$FileNames' sign='true'>\r\n            <text>WEB-INF/xsp.properties</text>\r\n        </item>\r\n    </note>\r\n    <note class='form' xmlns='http://www.lotus.com/dxl' version='12.0' maintenanceversion='1.0'\r\n replicaid='48258435003E8283'>\r\n        <noteinfo noteid='15e' unid='9DD894B23E3B5D7F4825843500405580' sequence='3'>\r\n            <created>\r\n                <datetime>20190712T194241,92+08</datetime>\r\n            </created>\r\n            <modified>\r\n                <datetime>20220407T151018,05+08</datetime>\r\n            </modified>\r\n            <revised>\r\n                <datetime>20220407T151018,04+08</datetime>\r\n            </revised>\r\n            <lastaccessed>\r\n                <datetime>20220407T151018,04+08</datetime>\r\n            </lastaccessed>\r\n            <addedtofile>\r\n                <datetime>20190712T194241,92+08</datetime>\r\n            </addedtofile>\r\n        </noteinfo>\r\n        <updatedby>\r\n            <name>CN=YING FENG/O=HCLPNP</name>\r\n        </updatedby>\r\n        <item name='$Flags'>\r\n            <text>~C4g</text>\r\n        </item>\r\n        <item name='$TITLE'>\r\n            <text>.classpath</text>\r\n        </item>\r\n        <item name='$DesignerVersion'>\r\n            <text>8.5.3</text>\r\n        </item>\r\n        <item name='$FileSize' sign='true'>\r\n            <number>329</number>\r\n        </item>\r\n        <item name='$FileData' sign='true'>\r\n            <rawitemdata type='1'>\r\nYQAYAAAAAABJAQAAAQAAAAAAAAAAAAAAYABbAQAASQFKAQAAAAAAAAAAPD94bWwgdmVyc2lvbj0i\r\nMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGNsYXNzcGF0aD4KICA8Y2xhc3NwYXRoZW50cnkga2lu\r\nZD0ic3JjIiBwYXRoPSJMb2NhbCIvPgogIDxjbGFzc3BhdGhlbnRyeSBraW5kPSJjb24iIHBhdGg9\r\nIm9yZy5lY2xpcHNlLmpkdC5sYXVuY2hpbmcuSlJFX0NPTlRBSU5FUiIvPgogIDxjbGFzc3BhdGhl\r\nbnRyeSBraW5kPSJjb24iIHBhdGg9Im9yZy5lY2xpcHNlLnBkZS5jb3JlLnJlcXVpcmVkUGx1Z2lu\r\ncyIvPgogIDxjbGFzc3BhdGhlbnRyeSBraW5kPSJvdXRwdXQiIHBhdGg9IldlYkNvbnRlbnQvV0VC\r\nLUlORi9jbGFzc2VzIi8+CjwvY2xhc3NwYXRoPgoA\r\n</rawitemdata>\r\n        </item>\r\n        <item name='$FileNames' sign='true'>\r\n            <text>.classpath</text>\r\n        </item>\r\n    </note>\r\n    <note class='form' xmlns='http://www.lotus.com/dxl' version='12.0' maintenanceversion='1.0'\r\n replicaid='48258435003E8283'>\r\n        <noteinfo noteid='162' unid='D507734FB95BFD664825843500405584' sequence='3'>\r\n            <created>\r\n                <datetime>20190712T194241,96+08</datetime>\r\n            </created>\r\n            <modified>\r\n                <datetime>20220407T151018,06+08</datetime>\r\n            </modified>\r\n            <revised>\r\n                <datetime>20220407T151018,05+08</datetime>\r\n            </revised>\r\n            <lastaccessed>\r\n                <datetime>20220407T151018,05+08</datetime>\r\n            </lastaccessed>\r\n            <addedtofile>\r\n                <datetime>20190712T194241,97+08</datetime>\r\n            </addedtofile>\r\n        </noteinfo>\r\n        <updatedby>\r\n            <name>CN=YING FENG/O=HCLPNP</name>\r\n        </updatedby>\r\n        <item name='$Flags'>\r\n            <text>~C4g</text>\r\n        </item>\r\n        <item name='$TITLE'>\r\n            <text>.settings/org.eclipse.wst.jsdt.ui.superType.name</text>\r\n        </item>\r\n        <item name='$DesignerVersion'>\r\n            <text>8.5.3</text>\r\n        </item>\r\n        <item name='$FileSize' sign='true'>\r\n            <number>6</number>\r\n        </item>\r\n        <item name='$FileData' sign='true'>\r\n            <rawitemdata type='1'>\r\nYQAYAAAAAAAGAAAAAQAAAAAAAAAAAAAAYAAYAAAABgAGAAAAAAAAAAAAV2luZG93\r\n</rawitemdata>\r\n        </item>\r\n        <item name='$FileNames' sign='true'>\r\n            <text>.settings/org.eclipse.wst.jsdt.ui.superType.name</text>\r\n        </item>\r\n    </note>\r\n    <note class='form' xmlns='http://www.lotus.com/dxl' version='12.0' maintenanceversion='1.0'\r\n replicaid='48258435003E8283'>\r\n        <noteinfo noteid='166' unid='EF45DC59295FB9D74825843500405587' sequence='3'>\r\n            <created>\r\n                <datetime>20190712T194241,99+08</datetime>\r\n            </created>\r\n            <modified>\r\n                <datetime>20220407T151018,07+08</datetime>\r\n            </modified>\r\n            <revised>\r\n                <datetime>20220407T151018,06+08</datetime>\r\n            </revised>\r\n            <lastaccessed>\r\n                <datetime>20220407T151018,06+08</datetime>\r\n            </lastaccessed>\r\n            <addedtofile>\r\n                <datetime>20190712T194242,02+08</datetime>\r\n            </addedtofile>\r\n        </noteinfo>\r\n        <updatedby>\r\n            <name>CN=YING FENG/O=HCLPNP</name>\r\n        </updatedby>\r\n        <item name='$Flags'>\r\n            <text>~C4g</text>\r\n        </item>\r\n        <item name='$TITLE'>\r\n            <text>.settings/org.eclipse.wst.jsdt.ui.superType.container</text>\r\n        </item>\r\n        <item name='$DesignerVersion'>\r\n            <text>8.5.3</text>\r\n        </item>\r\n        <item name='$FileSize' sign='true'>\r\n            <number>49</number>\r\n        </item>\r\n        <item name='$FileData' sign='true'>\r\n            <rawitemdata type='1'>\r\nYQAYAAAAAAAxAAAAAQAAAAAAAAAAAAAAYABDAAAAMQAyAAAAAAAAAAAAb3JnLmVjbGlwc2Uud3N0\r\nLmpzZHQubGF1bmNoaW5nLmJhc2VCcm93c2VyTGlicmFyeQA=\r\n</rawitemdata>\r\n        </item>\r\n        <item name='$FileNames' sign='true'>\r\n            <text>.settings/org.eclipse.wst.jsdt.ui.superType.container</text>\r\n        </item>\r\n    </note>\r\n    <note class='form' xmlns='http://www.lotus.com/dxl' version='12.0' maintenanceversion='1.0'\r\n replicaid='48258435003E8283'>\r\n        <noteinfo noteid='16a' unid='8FBFB909E349AAB4482584350040558E' sequence='3'>\r\n            <created>\r\n                <datetime>20190712T194242,06+08</datetime>\r\n            </created>\r\n            <modified>\r\n                <datetime>20220407T151018,08+08</datetime>\r\n            </modified>\r\n            <revised>\r\n                <datetime>20220407T151018,07+08</datetime>\r\n            </revised>\r\n            <lastaccessed>\r\n                <datetime>20220407T151018,07+08</datetime>\r\n            </lastaccessed>\r\n            <addedtofile>\r\n                <datetime>20190712T194242,07+08</datetime>\r\n            </addedtofile>\r\n        </noteinfo>\r\n        <updatedby>\r\n            <name>CN=YING FENG/O=HCLPNP</name>\r\n        </updatedby>\r\n        <item name='$Flags'>\r\n            <text>~C4g</text>\r\n        </item>\r\n        <item name='$TITLE'>\r\n            <text>.settings/.jsdtscope</text>\r\n        </item>\r\n        <item name='$DesignerVersion'>\r\n            <text>8.5.3</text>\r\n        </item>\r\n        <item name='$FileSize' sign='true'>\r\n            <number>339</number>\r\n        </item>\r\n        <item name='$FileData' sign='true'>\r\n            <rawitemdata type='1'>\r\nYQAYAAAAAABTAQAAAQAAAAAAAAAAAAAAYABlAQAAUwFUAQAAAAAAAAAAPD94bWwgdmVyc2lvbj0i\r\nMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjxjbGFzc3BhdGg+DQoJPGNsYXNzcGF0aGVudHJ5IGtp\r\nbmQ9InNyYyIgcGF0aD0iQ29kZS9TY3JpcHRMaWJyYXJpZXMiLz4NCgk8Y2xhc3NwYXRoZW50cnkg\r\na2luZD0iY29uIiBwYXRoPSJvcmcuZWNsaXBzZS53c3QuanNkdC5sYXVuY2hpbmcuSlJFX0NPTlRB\r\nSU5FUiIvPg0KCTxjbGFzc3BhdGhlbnRyeSBraW5kPSJjb24iIHBhdGg9Im9yZy5lY2xpcHNlLndz\r\ndC5qc2R0LmxhdW5jaGluZy5iYXNlQnJvd3NlckxpYnJhcnkiLz4NCgk8Y2xhc3NwYXRoZW50cnkg\r\na2luZD0ib3V0cHV0IiBwYXRoPSIiLz4NCjwvY2xhc3NwYXRoPg0KAA==\r\n</rawitemdata>\r\n        </item>\r\n        <item name='$FileNames' sign='true'>\r\n            <text>.settings/.jsdtscope</text>\r\n        </item>\r\n    </note>\r\n    <note class='form' xmlns='http://www.lotus.com/dxl' version='12.0' maintenanceversion='1.0'\r\n replicaid='48258435003E8283'>\r\n        <noteinfo noteid='16e' unid='896B129819071BF248258435004055A0' sequence='4'>\r\n            <created>\r\n                <datetime>20190712T194242,24+08</datetime>\r\n            </created>\r\n            <modified>\r\n                <datetime>20220407T151018,09+08</datetime>\r\n            </modified>\r\n            <revised>\r\n                <datetime>20220407T151018,08+08</datetime>\r\n            </revised>\r\n            <lastaccessed>\r\n                <datetime>20220407T151018,08+08</datetime>\r\n            </lastaccessed>\r\n            <addedtofile>\r\n                <datetime>20190712T194242,25+08</datetime>\r\n            </addedtofile>\r\n        </noteinfo>\r\n        <updatedby>\r\n            <name>CN=YING FENG/O=HCLPNP</name>\r\n        </updatedby>\r\n        <item name='$Flags'>\r\n            <text>~C4g</text>\r\n        </item>\r\n        <item name='$FlagsExt'>\r\n            <text>w</text>\r\n        </item>\r\n        <item name='$TITLE'>\r\n            <text>WEB-INF/faces-config.xml</text>\r\n        </item>\r\n        <item name='$DesignerVersion'>\r\n            <text>8.5.3</text>\r\n        </item>\r\n        <item name='$FileSize' sign='true'>\r\n            <number>234</number>\r\n        </item>\r\n        <item name='$FileData' sign='true'>\r\n            <rawitemdata type='1'>\r\nYQAYAAAAAADqAAAAAQAAAAAAAAAAAAAAYAD8AAAA6gDqAAAAAAAAAAAAPD94bWwgdmVyc2lvbj0i\r\nMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGZhY2VzLWNvbmZpZz4KICA8IS0tQVVUT0dFTi1TVEFS\r\nVC1CVUlMREVSOiBBdXRvbWF0aWNhbGx5IGdlbmVyYXRlZCBieSBJQk0gRG9taW5vIERlc2lnbmVy\r\nLiBEbyBub3QgbW9kaWZ5Li0tPgogIDwhLS1BVVRPR0VOLUVORC1CVUlMREVSOiBFbmQgb2YgYXV0\r\nb21hdGljYWxseSBnZW5lcmF0ZWQgc2VjdGlvbi0tPgo8L2ZhY2VzLWNvbmZpZz4K\r\n</rawitemdata>\r\n        </item>\r\n        <item name='$FileNames' sign='true'>\r\n            <text>WEB-INF/faces-config.xml</text>\r\n        </item>\r\n    </note>\r\n    <note class='form' xmlns='http://www.lotus.com/dxl' version='12.0' maintenanceversion='1.0'\r\n replicaid='48258435003E8283'>\r\n        <noteinfo noteid='172' unid='CE0D62D623B5AD3148258435004055A5' sequence='3'>\r\n            <created>\r\n                <datetime>20190712T194242,29+08</datetime>\r\n            </created>\r\n            <modified>\r\n                <datetime>20220407T151018,10+08</datetime>\r\n            </modified>\r\n            <revised>\r\n                <datetime>20220407T151018,09+08</datetime>\r\n            </revised>\r\n            <lastaccessed>\r\n                <datetime>20220407T151018,09+08</datetime>\r\n            </lastaccessed>\r\n            <addedtofile>\r\n                <datetime>20190712T194242,30+08</datetime>\r\n            </addedtofile>\r\n        </noteinfo>\r\n        <updatedby>\r\n            <name>CN=YING FENG/O=HCLPNP</name>\r\n        </updatedby>\r\n        <item name='$Flags'>\r\n            <text>~C4gP</text>\r\n        </item>\r\n        <item name='$TITLE'>\r\n            <text>build.properties</text>\r\n        </item>\r\n        <item name='$DesignerVersion'>\r\n            <text>8.5.3</text>\r\n        </item>\r\n        <item name='$FileSize' sign='true'>\r\n            <number>84</number>\r\n        </item>\r\n        <item name='$FileData' sign='true'>\r\n            <rawitemdata type='1'>\r\nYQAYAAAAAABUAAAAAQAAAAAAAAAAAAAAYABmAAAAVABUAAAAAAAAAAAAc291cmNlLi4gPSBMb2Nh\r\nbC8sXA0KICAgICAgICAgICBDb2RlL0phdmEvDQpvdXRwdXQuLiA9IFdlYkNvbnRlbnQvV0VCLUlO\r\nRi9jbGFzc2VzLw0K\r\n</rawitemdata>\r\n        </item>\r\n        <item name='$FileNames' sign='true'>\r\n            <text>build.properties</text>\r\n        </item>\r\n    </note>\r\n    <note class='form' xmlns='http://www.lotus.com/dxl' version='12.0' maintenanceversion='1.0'\r\n replicaid='48258435003E8283'>\r\n        <noteinfo noteid='176' unid='01CC7F90109F934F48258435004055B3' sequence='5'>\r\n            <created>\r\n                <datetime>20190712T194242,43+08</datetime>\r\n            </created>\r\n            <modified>\r\n                <datetime>20220407T151018,11+08</datetime>\r\n            </modified>\r\n            <revised>\r\n                <datetime>20220407T151018,10+08</datetime>\r\n            </revised>\r\n            <lastaccessed>\r\n                <datetime>20220407T151018,10+08</datetime>\r\n            </lastaccessed>\r\n            <addedtofile>\r\n                <datetime>20190712T194242,44+08</datetime>\r\n            </addedtofile>\r\n        </noteinfo>\r\n        <updatedby>\r\n            <name>CN=YING FENG/O=HCLPNP</name>\r\n        </updatedby>\r\n        <item name='$Flags'>\r\n            <text>~C4gP</text>\r\n        </item>\r\n        <item name='$TITLE'>\r\n            <text>plugin.xml</text>\r\n        </item>\r\n        <item name='$DesignerVersion'>\r\n            <text>8.5.3</text>\r\n        </item>\r\n        <item name='$FileSize' sign='true'>\r\n            <number>1189</number>\r\n        </item>\r\n        <item name='$FileData' sign='true'>\r\n            <rawitemdata type='1'>\r\nYQAYAAAAAAClBAAAAQAAAAAAAAAAAAAAYAC3BAAApQSmBAAAAAAAAAAAPD94bWwgdmVyc2lvbj0i\r\nMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPHBsdWdpbiBjbGFzcz0icGx1Z2luLkFjdGl2YXRvciIK\r\nICBpZD0iTFAyMmRBUDJkNTE3MjM1NTFfMmZIQ0xQTlBfRGVtb19uc2YiIG5hbWU9IkRvbWlubyBE\r\nZXNpZ25lciIKICBwcm92aWRlcj0iVE9ETyIgdmVyc2lvbj0iMS4wLjAiPgogIDxyZXF1aXJlcz4K\r\nICAgIDwhLS1BVVRPR0VOLVNUQVJULUJVSUxERVI6IEF1dG9tYXRpY2FsbHkgZ2VuZXJhdGVkIGJ5\r\nIG51bGwuIERvIG5vdCBtb2RpZnkuLS0+CiAgICA8aW1wb3J0IHBsdWdpbj0ib3JnLmVjbGlwc2Uu\r\ndWkiLz4KICAgIDxpbXBvcnQgcGx1Z2luPSJvcmcuZWNsaXBzZS5jb3JlLnJ1bnRpbWUiLz4KICAg\r\nIDxpbXBvcnQgb3B0aW9uYWw9InRydWUiIHBsdWdpbj0iY29tLmlibS5jb21tb25zIi8+CiAgICA8\r\naW1wb3J0IG9wdGlvbmFsPSJ0cnVlIiBwbHVnaW49ImNvbS5pYm0uY29tbW9ucy54bWwiLz4KICAg\r\nIDxpbXBvcnQgb3B0aW9uYWw9InRydWUiIHBsdWdpbj0iY29tLmlibS5jb21tb25zLnZmcyIvPgog\r\nICAgPGltcG9ydCBvcHRpb25hbD0idHJ1ZSIgcGx1Z2luPSJjb20uaWJtLmpzY3JpcHQiLz4KICAg\r\nIDxpbXBvcnQgb3B0aW9uYWw9InRydWUiIHBsdWdpbj0iY29tLmlibS5kZXNpZ25lci5ydW50aW1l\r\nLmRpcmVjdG9yeSIvPgogICAgPGltcG9ydCBvcHRpb25hbD0idHJ1ZSIgcGx1Z2luPSJjb20uaWJt\r\nLmRlc2lnbmVyLnJ1bnRpbWUiLz4KICAgIDxpbXBvcnQgb3B0aW9uYWw9InRydWUiIHBsdWdpbj0i\r\nY29tLmlibS54c3AuY29yZSIvPgogICAgPGltcG9ydCBvcHRpb25hbD0idHJ1ZSIgcGx1Z2luPSJj\r\nb20uaWJtLnhzcC5leHRzbiIvPgogICAgPGltcG9ydCBvcHRpb25hbD0idHJ1ZSIgcGx1Z2luPSJj\r\nb20uaWJtLnhzcC5kZXNpZ25lciIvPgogICAgPGltcG9ydCBvcHRpb25hbD0idHJ1ZSIgcGx1Z2lu\r\nPSJjb20uaWJtLnhzcC5kb21pbm8iLz4KICAgIDxpbXBvcnQgb3B0aW9uYWw9InRydWUiIHBsdWdp\r\nbj0iY29tLmlibS5ub3Rlcy5qYXZhLmFwaSIvPgogICAgPGltcG9ydCBvcHRpb25hbD0idHJ1ZSIg\r\ncGx1Z2luPSJjb20uaWJtLnhzcC5yY3AiLz4KICAgIDwhLS1BVVRPR0VOLUVORC1CVUlMREVSOiBF\r\nbmQgb2YgYXV0b21hdGljYWxseSBnZW5lcmF0ZWQgc2VjdGlvbi0tPgogIDwvcmVxdWlyZXM+Cjwv\r\ncGx1Z2luPgo8P2VjbGlwc2UgdmVyc2lvbj0iMy4wIj8+CmU=\r\n</rawitemdata>\r\n        </item>\r\n        <item name='$FileNames' sign='true'>\r\n            <text>plugin.xml</text>\r\n        </item>\r\n    </note>\r\n    <note class='form' xmlns='http://www.lotus.com/dxl' version='12.0' maintenanceversion='1.0'\r\n replicaid='48258435003E8283'>\r\n        <noteinfo noteid='17a' unid='645430FA02D40E73482584350040577F' sequence='3'>\r\n            <created>\r\n                <datetime>20190712T194247,03+08</datetime>\r\n            </created>\r\n            <modified>\r\n                <datetime>20220407T151018,12+08</datetime>\r\n            </modified>\r\n            <revised>\r\n                <datetime>20220407T151018,11+08</datetime>\r\n            </revised>\r\n            <lastaccessed>\r\n                <datetime>20220407T151018,11+08</datetime>\r\n            </lastaccessed>\r\n            <addedtofile>\r\n                <datetime>20190712T194247,03+08</datetime>\r\n            </addedtofile>\r\n        </noteinfo>\r\n        <updatedby>\r\n            <name>CN=YING FENG/O=HCLPNP</name>\r\n        </updatedby>\r\n        <item name='$TITLE'>\r\n            <text>.project</text>\r\n        </item>\r\n        <item name='$Flags'>\r\n            <text>~C4gP</text>\r\n        </item>\r\n        <item name='$DesignerVersion'>\r\n            <text>8.5.3</text>\r\n        </item>\r\n        <item name='$FileSize' sign='true'>\r\n            <number>1771</number>\r\n        </item>\r\n        <item name='$FileData' sign='true'>\r\n            <rawitemdata type='1'>\r\nYQAYAAAAAADrBgAAAQAAAAAAAAAAAAAAYAD9BgAA6wbsBgAAAAAAAAAAPD94bWwgdmVyc2lvbj0i\r\nMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPHByb2plY3REZXNjcmlwdGlvbj4KICA8bmFtZT5EZW1v\r\nLm5zZjwvbmFtZT4KICA8Y29tbWVudC8+CiAgPHByb2plY3RzLz4KICA8YnVpbGRTcGVjPgogICAg\r\nPGJ1aWxkQ29tbWFuZD4KICAgICAgPG5hbWU+Y29tLmlibS5kZXNpZ25lci5kb21pbm8uamF2YWxp\r\nYi5qYXZhbGlibWFya2VyYnVpbGRlcjwvbmFtZT4KICAgICAgPGFyZ3VtZW50cy8+CiAgICA8L2J1\r\naWxkQ29tbWFuZD4KICAgIDxidWlsZENvbW1hbmQ+CiAgICAgIDxuYW1lPmNvbS5pYm0uZGVzaWdu\r\nZXIuZG9taW5vLmRlc2lnbi5qc3ZhbGlkYXRpb25idWlsZGVyPC9uYW1lPgogICAgICA8YXJndW1l\r\nbnRzLz4KICAgIDwvYnVpbGRDb21tYW5kPgogICAgPGJ1aWxkQ29tbWFuZD4KICAgICAgPG5hbWU+\r\nY29tLmlibS5kZXNpZ25lci5kb21pbm8uaWRlLnJlc291cmNlcy5mYWNlc0NvbmZpZ2J1aWxkZXI8\r\nL25hbWU+CiAgICAgIDxhcmd1bWVudHMvPgogICAgPC9idWlsZENvbW1hbmQ+CiAgICA8YnVpbGRD\r\nb21tYW5kPgogICAgICA8bmFtZT5jb20uaWJtLmRlc2lnbmVyLmRvbWluby5pZGUucmVzb3VyY2Vz\r\nLkJ1aWxkUHJvcGVydGllc0J1aWxkZXI8L25hbWU+CiAgICAgIDxhcmd1bWVudHMvPgogICAgPC9i\r\ndWlsZENvbW1hbmQ+CiAgICA8YnVpbGRDb21tYW5kPgogICAgICA8bmFtZT5jb20uaWJtLmRlc2ln\r\nbmVyLmRvbWluby5pZGUucmVzb3VyY2VzLnBsdWdpblhNTGJ1aWxkZXI8L25hbWU+CiAgICAgIDxh\r\ncmd1bWVudHMvPgogICAgPC9idWlsZENvbW1hbmQ+CiAgICA8YnVpbGRDb21tYW5kPgogICAgICA8\r\nbmFtZT5jb20uaWJtLmRlc2lnbmVyLmRvbWluby54c3AuZWRpdG9yLnhwYWdlc2J1aWxkZXI8L25h\r\nbWU+CiAgICAgIDxhcmd1bWVudHMvPgogICAgPC9idWlsZENvbW1hbmQ+CiAgICA8YnVpbGRDb21t\r\nYW5kPgogICAgICA8bmFtZT5vcmcuZWNsaXBzZS5qZHQuY29yZS5qYXZhYnVpbGRlcjwvbmFtZT4K\r\nICAgICAgPGFyZ3VtZW50cy8+CiAgICA8L2J1aWxkQ29tbWFuZD4KICAgIDxidWlsZENvbW1hbmQ+\r\nCiAgICAgIDxuYW1lPmNvbS5pYm0uZGVzaWduZXIuZG9taW5vLmlkZS5yZXNvdXJjZXMuTFdQREJ1\r\naWxkZXI8L25hbWU+CiAgICAgIDxhcmd1bWVudHMvPgogICAgPC9idWlsZENvbW1hbmQ+CiAgICA8\r\nYnVpbGRDb21tYW5kPgogICAgICA8bmFtZT5jb20uaWJtLmRlc2lnbmVyLmRvbWluby5sc2NyaXB0\r\nLkxTQnVpbGRlcjwvbmFtZT4KICAgICAgPGFyZ3VtZW50cy8+CiAgICA8L2J1aWxkQ29tbWFuZD4K\r\nICAgIDxidWlsZENvbW1hbmQ+CiAgICAgIDxuYW1lPm9yZy5lY2xpcHNlLnBkZS5NYW5pZmVzdEJ1\r\naWxkZXI8L25hbWU+CiAgICAgIDxhcmd1bWVudHMvPgogICAgPC9idWlsZENvbW1hbmQ+CiAgICA8\r\nYnVpbGRDb21tYW5kPgogICAgICA8bmFtZT5vcmcuZWNsaXBzZS5wZGUuU2NoZW1hQnVpbGRlcjwv\r\nbmFtZT4KICAgICAgPGFyZ3VtZW50cy8+CiAgICA8L2J1aWxkQ29tbWFuZD4KICA8L2J1aWxkU3Bl\r\nYz4KICA8bmF0dXJlcz4KICAgIDxuYXR1cmU+Y29tLmlibS53b3JrcGxhY2Uubm90ZXMuZmlsZXN5\r\nc3RlbS5ERE5hdHVyZTwvbmF0dXJlPgogICAgPG5hdHVyZT5vcmcuZWNsaXBzZS5qZHQuY29yZS5q\r\nYXZhbmF0dXJlPC9uYXR1cmU+CiAgICA8bmF0dXJlPm9yZy5lY2xpcHNlLnBkZS5QbHVnaW5OYXR1\r\ncmU8L25hdHVyZT4KICAgIDxuYXR1cmU+b3JnLmVjbGlwc2Uud3N0LmpzZHQuY29yZS5qc05hdHVy\r\nZTwvbmF0dXJlPgogIDwvbmF0dXJlcz4KPC9wcm9qZWN0RGVzY3JpcHRpb24+CgA=\r\n</rawitemdata>\r\n        </item>\r\n        <item name='$FileNames' sign='true'>\r\n            <text>.project</text>\r\n        </item>\r\n    </note>\r\n    <note class='form' xmlns='http://www.lotus.com/dxl' version='12.0' maintenanceversion='1.0'\r\n replicaid='48258435003E8283'>\r\n        <noteinfo noteid='17e' unid='509240913F3403A048258435004057EA' sequence='6'>\r\n            <created>\r\n                <datetime>20190712T194248,10+08</datetime>\r\n            </created>\r\n            <modified>\r\n                <datetime>20220407T151048,02+08</datetime>\r\n            </modified>\r\n            <revised>\r\n                <datetime>20220407T151048,01+08</datetime>\r\n            </revised>\r\n            <lastaccessed>\r\n                <datetime>20220407T151048,01+08</datetime>\r\n            </lastaccessed>\r\n            <addedtofile>\r\n                <datetime>20190712T194248,09+08</datetime>\r\n            </addedtofile>\r\n        </noteinfo>\r\n        <updatedby>\r\n            <name>CN=YING FENG/O=HCLPNP</name>\r\n        </updatedby>\r\n        <wassignedby>\r\n            <name>CN=YING FENG/O=HCLPNP</name>\r\n        </wassignedby>\r\n        <item name='$Flags'>\r\n            <text>~C4g</text>\r\n        </item>\r\n        <item name='$FlagsExt'>\r\n            <text>w</text>\r\n        </item>\r\n        <item name='$TITLE'>\r\n            <text>WEB-INF/classes/plugin/Activator.class</text>\r\n        </item>\r\n        <item name='$DesignerVersion'>\r\n            <text>8.5.3</text>\r\n        </item>\r\n        <item name='$FileSize' sign='true'>\r\n            <number>1069</number>\r\n        </item>\r\n        <item name='$FileData' sign='true'>\r\n            <rawitemdata type='1'>\r\nYQAYAAAAAAAtBAAAAQAAAAAAAAAAAAAAYAA/BAAALQQuBAAAAAAAAAAAyv66vgAAADQAKwcAAgEA\r\nEHBsdWdpbi9BY3RpdmF0b3IHAAQBACZvcmcvZWNsaXBzZS91aS9wbHVnaW4vQWJzdHJhY3RVSVBs\r\ndWdpbgEABnBsdWdpbgEAEkxwbHVnaW4vQWN0aXZhdG9yOwEABjxpbml0PgEAAygpVgEABENvZGUK\r\nAAMACwwABwAICQABAA0MAAUABgEAD0xpbmVOdW1iZXJUYWJsZQEAEkxvY2FsVmFyaWFibGVUYWJs\r\nZQEABHRoaXMBAAVzdGFydAEAJShMb3JnL29zZ2kvZnJhbWV3b3JrL0J1bmRsZUNvbnRleHQ7KVYB\r\nAApFeGNlcHRpb25zBwAVAQATamF2YS9sYW5nL0V4Y2VwdGlvbgoAAwAXDAARABIBAAdjb250ZXh0\r\nAQAiTG9yZy9vc2dpL2ZyYW1ld29yay9CdW5kbGVDb250ZXh0OwEABHN0b3AKAAMAHAwAGgASAQAK\r\nZ2V0RGVmYXVsdAEAFCgpTHBsdWdpbi9BY3RpdmF0b3I7AQASZ2V0SW1hZ2VEZXNjcmlwdG9yAQBA\r\nKExqYXZhL2xhbmcvU3RyaW5nOylMb3JnL2VjbGlwc2UvamZhY2UvcmVzb3VyY2UvSW1hZ2VEZXNj\r\ncmlwdG9yOwgAIgEACERlbW8ubnNmCgADACQMACUAJgEAGWltYWdlRGVzY3JpcHRvckZyb21QbHVn\r\naW4BAFIoTGphdmEvbGFuZy9TdHJpbmc7TGphdmEvbGFuZy9TdHJpbmc7KUxvcmcvZWNsaXBzZS9q\r\nZmFjZS9yZXNvdXJjZS9JbWFnZURlc2NyaXB0b3I7AQAEcGF0aAEAEkxqYXZhL2xhbmcvU3RyaW5n\r\nOwEAClNvdXJjZUZpbGUBAA5BY3RpdmF0b3IuamF2YQAhAAEAAwAAAAEACgAFAAYAAAAFAAEABwAI\r\nAAEACQAAADsAAQABAAAACSq3AAoqswAMsQAAAAIADgAAAA4AAwAAABgABAAZAAgAGgAPAAAADAAB\r\nAAAACQAQAAYAAAABABEAEgACABMAAAAEAAEAFAAJAAAAPgACAAIAAAAGKiu3ABaxAAAAAgAOAAAA\r\nCgACAAAAIAAFACEADwAAABYAAgAAAAYAEAAGAAAAAAAGABgAGQABAAEAGgASAAIAEwAAAAQAAQAU\r\nAAkAAABGAAIAAgAAAAoqK7cAGwGzAAyxAAAAAgAOAAAADgADAAAAJwAFACgACQApAA8AAAAWAAIA\r\nAAAKABAABgAAAAAACgAYABkAAQAJAB0AHgABAAkAAAAkAAEAAAAAAASyAAywAAAAAgAOAAAABgAB\r\nAAAALwAPAAAAAgAAAAkAHwAgAAEACQAAADEAAgABAAAABxIhKrgAI7AAAAACAA4AAAAGAAEAAAA6\r\nAA8AAAAMAAEAAAAHACcAKAAAAAEAKQAAAAIAKlA=\r\n</rawitemdata>\r\n        </item>\r\n        <item name='$FileNames' sign='true'>\r\n            <text>WEB-INF/classes/plugin/Activator.class</text>\r\n        </item>\r\n    </note>\r\n    <form name='SampleForm' xmlns='http://www.lotus.com/dxl' version='12.0' maintenanceversion='1.0'\r\n replicaid='48258435003E8283' publicaccess='false' designerversion='8.5.3'\r\n default='true' comment='Shape Color Taste' renderpassthrough='true'>\r\n        <noteinfo noteid='182' unid='A0DC3840E8CC9615482584350041A8CF' sequence='4'>\r\n            <created>\r\n                <datetime>20190712T195710,55+08</datetime>\r\n            </created>\r\n            <modified>\r\n                <datetime>20220407T151018,15+08</datetime>\r\n            </modified>\r\n            <revised>\r\n                <datetime>20220407T151018,14+08</datetime>\r\n            </revised>\r\n            <lastaccessed>\r\n                <datetime>20220407T151018,14+08</datetime>\r\n            </lastaccessed>\r\n            <addedtofile>\r\n                <datetime>20190712T195710,86+08</datetime>\r\n            </addedtofile>\r\n        </noteinfo>\r\n        <updatedby>\r\n            <name>CN=YING FENG/O=HCLPNP</name>\r\n        </updatedby>\r\n        <body>\r\n            <richtext>\r\n                <pardef id='1'/>\r\n                <par def='1'/>\r\n                <table widthtype='fitmargins' refwidth='11.9271in'>\r\n                    <tablecolumn width='7.2847%'/>\r\n                    <tablecolumn\r\n width='92.7153%'/>\r\n                    <tablerow>\r\n                        <tablecell>\r\n                            <pardef id='3' keepwithnext='true' keeptogether='true'/>\r\n                            <par def='3'>Shape</par>\r\n                        </tablecell>\r\n                        <tablecell>\r\n                            <pardef id='4' keepwithnext='true' keeptogether='true'/>\r\n                            <par def='4'>\r\n                                <field type='text' kind='editable' name='Shape'>\r\n                                    <code event='inputvalidation'>\r\n                                        <formula\r\n>@If(@ThisValue=\"\";@Failure(@ThisName+\" is mandatory\");@Success)</formula>\r\n                                    </code>\r\n                                </field>\r\n                                <compositedata\r\n type='98' prevtype='65418' nexttype='222' afterparcount='7' containertype='65418'\r\n aftercontainercount='1' afterbegincount='3'>\r\nYg4BAIQAAAAAAAAAAAA=\r\n</compositedata>\r\n                            </par>\r\n                        </tablecell>\r\n                    </tablerow>\r\n                    <tablerow>\r\n                        <tablecell>\r\n                            <par def='3'>Color</par>\r\n                        </tablecell>\r\n                        <tablecell>\r\n                            <par def='4'>\r\n                                <field type='text' kind='editable' name='Color'/>\r\n                                <compositedata\r\n type='98' prevtype='65418' nexttype='222' afterparcount='6' containertype='65418'\r\n aftercontainercount='1' afterbegincount='3'>\r\nYg4BAIQAAAAAAAAAAAA=\r\n</compositedata>\r\n                            </par>\r\n                        </tablecell>\r\n                    </tablerow>\r\n                    <tablerow>\r\n                        <tablecell>\r\n                            <par def='3'>Taste</par>\r\n                        </tablecell>\r\n                        <tablecell>\r\n                            <par def='4'>\r\n                                <field type='text' kind='editable' name='Taste'/>\r\n                                <compositedata\r\n type='98' prevtype='65418' nexttype='222' afterparcount='6' containertype='65418'\r\n aftercontainercount='1' afterbegincount='3'>\r\nYg4BAIQAAAAAAAAAAAA=\r\n</compositedata>\r\n                            </par>\r\n                        </tablecell>\r\n                    </tablerow>\r\n                    <tablerow>\r\n                        <tablecell>\r\n                            <par def='3'/>\r\n                        </tablecell>\r\n                        <tablecell>\r\n                            <par def='4'>\r\n                                <button width='2in' widthtype='maximum' maxlines='1' wraptext='true'\r\n bgcolor='system'>\r\n                                    <code event='click'>\r\n                                        <formula>@If(@Command([FileSave]);@Command([FileCloseWindow]);\"\")</formula>\r\n                                    </code>\r\n                                    Save\r\n                                </button>\r\n                            </par>\r\n                        </tablecell>\r\n                    </tablerow>\r\n                </table>\r\n                <par def='1'/>\r\n            </richtext>\r\n        </body>\r\n        <item name='$$ScriptName' summary='false' sign='true'>\r\n            <text>SampleForm</text>\r\n        </item>\r\n    </form>\r\n    <note class='form' xmlns='http://www.lotus.com/dxl' version='12.0' maintenanceversion='1.0'\r\n replicaid='48258435003E8283'>\r\n        <noteinfo noteid='186' unid='C5E492FDA6026C71482584350042689A' sequence='4'>\r\n            <created>\r\n                <datetime>20190712T200521,54+08</datetime>\r\n            </created>\r\n            <modified>\r\n                <datetime>20220407T151018,14+08</datetime>\r\n            </modified>\r\n            <revised>\r\n                <datetime>20220407T151018,13+08</datetime>\r\n            </revised>\r\n            <lastaccessed>\r\n                <datetime>20220407T151018,13+08</datetime>\r\n            </lastaccessed>\r\n            <addedtofile>\r\n                <datetime>20190712T200521,57+08</datetime>\r\n            </addedtofile>\r\n        </noteinfo>\r\n        <updatedby>\r\n            <name>CN=YING FENG/O=HCLPNP</name>\r\n        </updatedby>\r\n        <item name='$Flags'>\r\n            <text>~C4g</text>\r\n        </item>\r\n        <item name='$TITLE'>\r\n            <text>AppProperties/xspdesign.properties</text>\r\n        </item>\r\n        <item name='$DesignerVersion'>\r\n            <text>8.5.3</text>\r\n        </item>\r\n        <item name='$FileSize' sign='true'>\r\n            <number>31</number>\r\n        </item>\r\n        <item name='$FileData' sign='true'>\r\n            <rawitemdata type='1'>\r\nYQAYAAAAAAAfAAAAAQAAAAAAAAAAAAAAYAAxAAAAHwAgAAAAAAAAAAAAI0ZyaSBKdWwgMTIgMjA6\r\nMTA6NDcgU0dUIDIwMTkNCgo=\r\n</rawitemdata>\r\n        </item>\r\n        <item name='$FileNames' sign='true'>\r\n            <text>xspdesign.properties</text>\r\n        </item>\r\n    </note>\r\n    <form name='fromSalesforce' xmlns='http://www.lotus.com/dxl' version='12.0'\r\n maintenanceversion='1.0' replicaid='48258435003E8283' publicaccess='false'\r\n designerversion='8.5.3' comment='Collection form' renderpassthrough='true'>\r\n        <noteinfo noteid='196' unid='639C1AE5A68680C2482584350046F7C3' sequence='5'>\r\n            <created>\r\n                <datetime>20190712T205509,47+08</datetime>\r\n            </created>\r\n            <modified>\r\n                <datetime>20220407T151018,16+08</datetime>\r\n            </modified>\r\n            <revised>\r\n                <datetime>20220407T151018,15+08</datetime>\r\n            </revised>\r\n            <lastaccessed>\r\n                <datetime>20220407T151018,15+08</datetime>\r\n            </lastaccessed>\r\n            <addedtofile>\r\n                <datetime>20190712T205509,78+08</datetime>\r\n            </addedtofile>\r\n        </noteinfo>\r\n        <updatedby>\r\n            <name>CN=YING FENG/O=HCLPNP</name>\r\n        </updatedby>\r\n        <body>\r\n            <richtext>\r\n                <pardef id='1'/>\r\n                <par def='1'>\r\n                    <run>\r\n                        <font size='14pt' style='bold' color='#c200ff'/>Stuff from Salesforce\r\n                    </run>\r\n                </par>\r\n                <par def='1'/>\r\n                <par def='1'>\r\n                    <field type='richtext' kind='computedwhencomposed' name='Body'\r\n storageformat='htmlmime'>\r\n                        <code event='defaultvalue'>\r\n                            <formula>Body</formula>\r\n                        </code>\r\n                    </field>\r\n                    <compositedata\r\n type='98' prevtype='65418' nexttype='222' afterparcount='6' containertype='65418'\r\n aftercontainercount='1' afterbegincount='3'>\r\nYg4BAIQAAAAAAAEAAAA=\r\n</compositedata>\r\n                </par>\r\n            </richtext>\r\n        </body>\r\n        <item name='$$ScriptName' summary='false' sign='true'>\r\n            <text>fromSalesforce</text>\r\n        </item>\r\n    </form>\r\n    <agent name='SalesforceProcessing' xmlns='http://www.lotus.com/dxl' version='12.0'\r\n maintenanceversion='1.0' replicaid='48258435003E8283' hide='v3' publicaccess='false'\r\n designerversion='8.5.3' comment='Move Salesforce data to RichText' activatable='false'>\r\n        <noteinfo noteid='19e' unid='56D541DC5BCAF1384825843500477872' sequence='4'>\r\n            <created>\r\n                <datetime>20190712T210038,90+08</datetime>\r\n            </created>\r\n            <modified>\r\n                <datetime>20220407T151018,23+08</datetime>\r\n            </modified>\r\n            <revised>\r\n                <datetime>20220407T151018,22+08</datetime>\r\n            </revised>\r\n            <lastaccessed>\r\n                <datetime>20220407T151018,22+08</datetime>\r\n            </lastaccessed>\r\n            <addedtofile>\r\n                <datetime>20190712T210038,94+08</datetime>\r\n            </addedtofile>\r\n        </noteinfo>\r\n        <updatedby>\r\n            <name>CN=YING FENG/O=HCLPNP</name>\r\n        </updatedby>\r\n        <designchange>\r\n            <datetime>20220407T151018,11+08</datetime>\r\n        </designchange>\r\n        <trigger type='docupdate'>\r\n            <schedule type='automatic' runlocation='specific' runserver='CN=Wolfpack/O=SenseiDemo'/>\r\n        </trigger>\r\n        <documentset type='implicit'>\r\n            <search type='byformnames'>\r\n                <formchoice\r\n name='fromSalesforce'/>\r\n            </search>\r\n        </documentset>\r\n        <code event='options'>\r\n            <lotusscript\r\n>%REM\r\n\tAgent SalesforceProcessing\r\n\tCreated Jul 12, 2019 by Stephan Wissel/Singapore/PNPHCL\r\n\tDescription: Comments for Agent\r\n%END REM\r\nOption Public\r\nOption Declare\r\n\r\n\r\n</lotusscript>\r\n        </code>\r\n        <code event='initialize'>\r\n            <lotusscript>Sub Initialize\r\n\tDim s As New NotesSession\r\n\tDim db As NotesDatabase\r\n\tDim dcol As NotesDocumentCollection\r\n\tDim doc As NotesDocument\r\n\tDim nextDoc As NotesDocument\r\n\tSet db = s.Currentdatabase\r\n\tSet dcol = db.Unprocesseddocuments\r\n\tSet doc = dcol.Getfirstdocument()\r\n\tWhile Not doc Is Nothing\r\n\t\tSet nextDoc = dcol.Getnextdocument(doc)\r\n\t\tCall handleOneDoc(doc)\r\n\t\tCall s.Updateprocesseddoc(doc)\r\n\t\tSet doc = nextDoc\r\n\tWend\r\nEnd Sub\r\n\r\n\r\n\r\n</lotusscript>\r\n        </code>\r\n        <code event='handleOneDoc'>\r\n            <lotusscript>%REM\r\n\tSub handleOneDoc\r\n\tDescription: Creates a RichTextItem for all Fields\r\n%END REM\r\nSub handleOneDoc(doc As NotesDocument)\r\n\tDim rt As NotesRichTextItem\r\n\tDim item As NotesItem\r\n\tSet rt = doc.Createrichtextitem(\"Body\")\r\n\tForall i In doc.Items\r\n\t\tSet item = i\r\n\t\tIf item.name &lt;&gt; \"Body\" Then\r\n\t\t\trt.Appendtext(item.Name)\r\n\t\t\trt.Appendtext(\": \")\r\n\t\t\trt.Appendtext(item.Text)\r\n\t\t\trt.Addnewline(1)\r\n\t\tEnd If\r\n\tEnd Forall\t\r\n\r\n\tCall doc.save(True,True)\r\nEnd Sub</lotusscript>\r\n        </code>\r\n    </agent>\r\n    <agent name='Fix Body' xmlns='http://www.lotus.com/dxl' version='12.0' maintenanceversion='1.0'\r\n replicaid='48258435003E8283' hide='v3' publicaccess='false' designerversion='8.5.3'\r\n comment='Move Salesforce data to RichText'>\r\n        <noteinfo noteid='1aa' unid='3F8E64B529DA6CF848258435004A37CC' sequence='5'>\r\n            <created>\r\n                <datetime>20190712T213039,48+08</datetime>\r\n            </created>\r\n            <modified>\r\n                <datetime>20220407T151018,24+08</datetime>\r\n            </modified>\r\n            <revised>\r\n                <datetime>20220407T151018,23+08</datetime>\r\n            </revised>\r\n            <lastaccessed>\r\n                <datetime>20220407T151018,23+08</datetime>\r\n            </lastaccessed>\r\n            <addedtofile>\r\n                <datetime>20190712T213039,53+08</datetime>\r\n            </addedtofile>\r\n        </noteinfo>\r\n        <updatedby>\r\n            <name>CN=YING FENG/O=HCLPNP</name>\r\n        </updatedby>\r\n        <designchange>\r\n            <datetime>20220407T151018,14+08</datetime>\r\n        </designchange>\r\n        <trigger type='actionsmenu'/>\r\n        <documentset type='selected'>\r\n            <search type='byformnames'>\r\n                <formchoice\r\n name='fromSalesforce'/>\r\n            </search>\r\n        </documentset>\r\n        <code event='options'>\r\n            <lotusscript\r\n>%REM\r\n\tAgent SalesforceProcessing\r\n\tCreated Jul 12, 2019 by Stephan Wissel/Singapore/PNPHCL\r\n\tDescription: Comments for Agent\r\n%END REM\r\nOption Public\r\nOption Declare\r\n\r\n\r\n</lotusscript>\r\n        </code>\r\n        <code event='initialize'>\r\n            <lotusscript>Sub Initialize\r\n\tDim s As New NotesSession\r\n\tDim db As NotesDatabase\r\n\tDim dcol As NotesDocumentCollection\r\n\tDim doc As NotesDocument\r\n\tDim nextDoc As NotesDocument\r\n\tSet db = s.Currentdatabase\r\n\tSet dcol = db.Unprocesseddocuments\r\n\tSet doc = dcol.Getfirstdocument()\r\n\tWhile Not doc Is Nothing\r\n\t\tSet nextDoc = dcol.Getnextdocument(doc)\r\n\t\tCall handleOneDoc(doc)\r\n\t\tCall s.Updateprocesseddoc(doc)\r\n\t\tSet doc = nextDoc\r\n\tWend\r\nEnd Sub\r\n\r\n\r\n\r\n</lotusscript>\r\n        </code>\r\n        <code event='handleOneDoc'>\r\n            <lotusscript>%REM\r\n\tSub handleOneDoc\r\n\tDescription: Creates a RichTextItem for all Fields\r\n%END REM\r\nSub handleOneDoc(doc As NotesDocument)\r\n\tDim rt As NotesRichTextItem\r\n\tDim item As NotesItem\r\n\tSet rt = doc.Createrichtextitem(\"Body\")\r\n\tForall i In doc.Items\r\n\t\tSet item = i\r\n\t\tIf item.name &lt;&gt; \"Body\" Then\r\n\t\t\trt.Appendtext(item.Name)\r\n\t\t\trt.Appendtext(\": \")\r\n\t\t\trt.Appendtext(item.Text)\r\n\t\t\trt.Addnewline(1)\r\n\t\tEnd If\r\n\tEnd Forall\t\r\n\r\n\tCall doc.save(True,True)\r\nEnd Sub</lotusscript>\r\n        </code>\r\n    </agent>\r\n    <view name='Customers' xmlns='http://www.lotus.com/dxl' version='12.0' maintenanceversion='1.0'\r\n replicaid='48258435003E8283' showinmenu='false' noreplace='true' publicaccess='false'\r\n designerversion='8.5.3' unreadmarks='none' onopengoto='lastopened' onrefresh='displayindicator'\r\n headers='beveled' opencollapsed='false' showresponsehierarchy='true' showmargin='true'\r\n shrinkrows='false' extendlastcolumn='false' showhierarchies='false' unreadcolor='black'\r\n rowlinecount='1' headerlinecount='1' rowspacing='1' bgcolor='white' altrowcolor='#f7f7f7'\r\n totalscolor='black' headerbgcolor='white' boldunreadrows='false' evaluateactions='false'\r\n allownewdocuments='false' allowcustomizations='true' hidemarginborder='false'\r\n marginwidth='0px' marginbgcolor='white' gridstyle='solid' gridcolor='silver'\r\n uniquekeys='false'>\r\n        <noteinfo noteid='1be' unid='86C72C1BF64B6DF04825847100373215' sequence='4'>\r\n            <created>\r\n                <datetime>20190910T180253,01+08</datetime>\r\n            </created>\r\n            <modified>\r\n                <datetime>20220407T151018,25+08</datetime>\r\n            </modified>\r\n            <revised>\r\n                <datetime>20220407T151018,24+08</datetime>\r\n            </revised>\r\n            <lastaccessed>\r\n                <datetime>20220407T151018,24+08</datetime>\r\n            </lastaccessed>\r\n            <addedtofile>\r\n                <datetime>20190910T180253,07+08</datetime>\r\n            </addedtofile>\r\n        </noteinfo>\r\n        <updatedby>\r\n            <name>CN=LP2-AP-51723551/O=HCLPNP</name>\r\n            <name>CN=YING FENG/O=HCLPNP</name>\r\n        </updatedby>\r\n        <code\r\n event='selection'>\r\n            <formula>SELECT (Form = \"Customer\")</formula>\r\n        </code>\r\n        <column hidedetailrows='false' itemname='$0' width='6.6250' resizable='true'\r\n separatemultiplevalues='false' sortnoaccent='true' sortnocase='true' showaslinks='false'>\r\n            <columnheader\r\n title='#'>\r\n                <font size='9pt' style='bold'/>\r\n            </columnheader>\r\n            <code event='value'>\r\n                <formula\r\n>@DocNumber</formula>\r\n            </code>\r\n        </column>\r\n        <column hidedetailrows='false' itemname='$1' width='13.5000' resizable='true'\r\n separatemultiplevalues='false' sortnoaccent='false' sortnocase='true' showaslinks='false'>\r\n            <columnheader\r\n title='Created'>\r\n                <font size='9pt' style='bold'/>\r\n            </columnheader>\r\n            <code event='value'>\r\n                <formula\r\n>@Created</formula>\r\n            </code>\r\n        </column>\r\n        <column sort='ascending' hidedetailrows='false' itemname='last_name' width='10'\r\n resizable='true' separatemultiplevalues='false' sortnoaccent='false' sortnocase='true'\r\n showaslinks='false'>\r\n            <columnheader title='LastName'>\r\n                <font size='9pt' style='bold'/>\r\n            </columnheader>\r\n        </column>\r\n        <column hidedetailrows='false' itemname='first_name' width='10' resizable='true'\r\n separatemultiplevalues='false' sortnoaccent='false' sortnocase='true' showaslinks='false'>\r\n            <columnheader\r\n title='FirstName'>\r\n                <font size='9pt' style='bold'/>\r\n            </columnheader>\r\n        </column>\r\n        <column hidedetailrows='false' itemname='email' width='16.8750' resizable='true'\r\n separatemultiplevalues='false' sortnoaccent='false' sortnocase='true' showaslinks='false'>\r\n            <columnheader\r\n title='eMail'>\r\n                <font size='9pt' style='bold'/>\r\n            </columnheader>\r\n        </column>\r\n        <column hidedetailrows='false' itemname='Color' width='10' resizable='true'\r\n separatemultiplevalues='false' sortnoaccent='false' sortnocase='true' showaslinks='false'>\r\n            <columnheader\r\n title='Color'>\r\n                <font size='9pt' style='bold'/>\r\n            </columnheader>\r\n        </column>\r\n        <column hidedetailrows='false' itemname='Pet' width='17.6250' resizable='true'\r\n separatemultiplevalues='false' sortnoaccent='false' sortnocase='true' showaslinks='false'>\r\n            <columnheader\r\n title='Pet'>\r\n                <font size='9pt' style='bold'/>\r\n            </columnheader>\r\n        </column>\r\n    </view>\r\n    <form name='Entry' alias='Entry' xmlns='http://www.lotus.com/dxl' version='12.0'\r\n maintenanceversion='1.0' replicaid='48258435003E8283' hide='web mobile' publicaccess='false'\r\n comment='Generated by KEEP '>\r\n        <noteinfo noteid='21e' unid='A4A6F587429C6D584825881D000C68B5' sequence='7'>\r\n            <created>\r\n                <datetime>20220407T101532,37+08</datetime>\r\n            </created>\r\n            <modified>\r\n                <datetime>20220408T102519,86+08</datetime>\r\n            </modified>\r\n            <revised>\r\n                <datetime>20220408T102519,85+08</datetime>\r\n            </revised>\r\n            <lastaccessed>\r\n                <datetime>20220408T102519,85+08</datetime>\r\n            </lastaccessed>\r\n            <addedtofile>\r\n                <datetime>20220407T101532,38+08</datetime>\r\n            </addedtofile>\r\n        </noteinfo>\r\n        <updatedby>\r\n            <name>CN=John Doe/O=ProjectKeep</name>\r\n        </updatedby>\r\n        <code event='windowtitle'>\r\n            <formula\r\n>@If(@IsNewDoc;\"New Entry\";\"Entry \"+@Text(@Created))</formula>\r\n        </code>\r\n        <body>\r\n            <richtext>\r\n                <pardef id='1' leftmargin='1.1000in'/>\r\n                <par def='1'>\r\n                    <run>\r\n                        <font size='24pt' color='#000066'/>Entry\r\n                    </run>\r\n                </par>\r\n                <par def='1'/>\r\n                <table widthtype='fitmargins' leftmargin='1.1000in' refwidth='10.4063in'>\r\n                    <tablecolumn\r\n width='2in'/>\r\n                    <tablecolumn width='100%'/>\r\n                    <tablerow>\r\n                        <tablecell bgcolor='white'>\r\n                            <pardef id='3' align='right' rightmargin='1.8000in'/>\r\n                            <par def='3'>\r\n                                <run>\r\n                                    <font size='12pt' color='#000066'/>name\r\n                                </run>\r\n                            </par>\r\n                        </tablecell>\r\n                        <tablecell bgcolor='#f2f2f2'>\r\n                            <pardef id='4' leftmargin='0.2000in'/>\r\n                            <par def='4'>\r\n                                <run>\r\n                                    <font size='12pt'/>\r\n                                </run>\r\n                                <run>\r\n                                    <font size='12pt'/>\r\n                                    <field\r\n showdelimiters='false' type='text' kind='editable' name='name'/>\r\n                                </run>\r\n                                <run\r\n>\r\n                                    <font size='12pt'/>\r\n                                </run>\r\n                            </par>\r\n                        </tablecell>\r\n                    </tablerow>\r\n                    <tablerow>\r\n                        <tablecell bgcolor='white'>\r\n                            <pardef id='5' align='right' rightmargin='1.8000in'/>\r\n                            <par def='5'>\r\n                                <run>\r\n                                    <font size='12pt' color='#000066'/>email\r\n                                </run>\r\n                            </par>\r\n                        </tablecell>\r\n                        <tablecell bgcolor='#f2f2f2'>\r\n                            <pardef id='6' leftmargin='0.2000in'/>\r\n                            <par def='6'>\r\n                                <run>\r\n                                    <font size='12pt'/>\r\n                                </run>\r\n                                <run>\r\n                                    <font size='12pt'/>\r\n                                    <field\r\n showdelimiters='false' type='text' kind='editable' name='email'/>\r\n                                </run>\r\n                                <run\r\n>\r\n                                    <font size='12pt'/>\r\n                                </run>\r\n                            </par>\r\n                        </tablecell>\r\n                    </tablerow>\r\n                </table>\r\n                <par def='1'/>\r\n            </richtext>\r\n        </body>\r\n    </form>\r\n    <view name='entriesView' xmlns='http://www.lotus.com/dxl' version='12.0' maintenanceversion='1.0'\r\n replicaid='48258435003E8283' showinmenu='false' publicaccess='false' designerversion='8.5.3'\r\n unreadmarks='none' onopengoto='lastopened' onrefresh='refresh' headers='beveled'\r\n opencollapsed='false' showresponsehierarchy='false' showmargin='false' shrinkrows='false'\r\n extendlastcolumn='false' showhierarchies='false' unreadcolor='black' rowlinecount='1'\r\n headerlinecount='1' rowspacing='1' bgcolor='white' totalscolor='black' headerbgcolor='white'\r\n boldunreadrows='false' evaluateactions='false' allownewdocuments='false'\r\n allowcustomizations='false' hidemarginborder='false' marginwidth='0px' marginbgcolor='white'\r\n uniquekeys='false'>\r\n        <noteinfo noteid='222' unid='7D8825821129AE964825881D000C6A85' sequence='4'>\r\n            <created>\r\n                <datetime>20220407T101537,01+08</datetime>\r\n            </created>\r\n            <modified>\r\n                <datetime>20220408T102424,75+08</datetime>\r\n            </modified>\r\n            <revised>\r\n                <datetime>20220408T102424,74+08</datetime>\r\n            </revised>\r\n            <lastaccessed>\r\n                <datetime>20220408T102424,74+08</datetime>\r\n            </lastaccessed>\r\n            <addedtofile>\r\n                <datetime>20220407T101537,00+08</datetime>\r\n            </addedtofile>\r\n        </noteinfo>\r\n        <updatedby>\r\n            <name>CN=LP2-AP-51723551/O=HCLPNP</name>\r\n            <name>CN=John Doe/O=ProjectKeep</name>\r\n        </updatedby>\r\n        <code\r\n event='selection'>\r\n            <formula>SELECT Form = \"Entry\"</formula>\r\n        </code>\r\n        <column sort='ascending' hidedetailrows='false' itemname='name' width='10'\r\n resizable='true' separatemultiplevalues='false' sortnoaccent='true' sortnocase='true'\r\n showaslinks='false'>\r\n            <columnheader title='name'>\r\n                <font size='9pt' style='bold'/>\r\n            </columnheader>\r\n        </column>\r\n        <column sort='ascending' hidedetailrows='false' itemname='email' width='10'\r\n resizable='true' separatemultiplevalues='false' sortnoaccent='true' sortnocase='true'\r\n showaslinks='false'>\r\n            <columnheader title='email'>\r\n                <font size='9pt' style='bold'/>\r\n            </columnheader>\r\n        </column>\r\n    </view>\r\n    <form name='TestForm' alias='TestForm' xmlns='http://www.lotus.com/dxl' version='12.0'\r\n maintenanceversion='1.0' replicaid='48258435003E8283' hide='web mobile' publicaccess='false'\r\n comment='Generated by KEEP '>\r\n        <noteinfo noteid='22e' unid='08161D1BBEFBEA024825881D000C7A69' sequence='7'>\r\n            <created>\r\n                <datetime>20220407T101617,69+08</datetime>\r\n            </created>\r\n            <modified>\r\n                <datetime>20220408T102557,04+08</datetime>\r\n            </modified>\r\n            <revised>\r\n                <datetime>20220408T102557,03+08</datetime>\r\n            </revised>\r\n            <lastaccessed>\r\n                <datetime>20220408T102557,03+08</datetime>\r\n            </lastaccessed>\r\n            <addedtofile>\r\n                <datetime>20220407T101617,70+08</datetime>\r\n            </addedtofile>\r\n        </noteinfo>\r\n        <updatedby>\r\n            <name>CN=John Doe/O=ProjectKeep</name>\r\n        </updatedby>\r\n        <code event='windowtitle'>\r\n            <formula\r\n>@If(@IsNewDoc;\"New TestForm\";\"TestForm \"+@Text(@Created))</formula>\r\n        </code>\r\n        <body>\r\n            <richtext>\r\n                <pardef id='1' leftmargin='1.1000in'/>\r\n                <par def='1'>\r\n                    <run>\r\n                        <font size='24pt' color='#000066'/>TestForm\r\n                    </run>\r\n                </par>\r\n                <par def='1'/>\r\n                <table widthtype='fitmargins' leftmargin='1.1000in' refwidth='10.4063in'>\r\n                    <tablecolumn\r\n width='2in'/>\r\n                    <tablecolumn width='100%'/>\r\n                    <tablerow>\r\n                        <tablecell bgcolor='white'>\r\n                            <pardef id='3' align='right' rightmargin='1.8000in'/>\r\n                            <par def='3'>\r\n                                <run>\r\n                                    <font size='12pt' color='#000066'/>first_name\r\n                                </run>\r\n                            </par>\r\n                        </tablecell>\r\n                        <tablecell bgcolor='#f2f2f2'>\r\n                            <pardef id='4' leftmargin='0.2000in'/>\r\n                            <par def='4'>\r\n                                <run>\r\n                                    <font size='12pt'/>\r\n                                </run>\r\n                                <run>\r\n                                    <font size='12pt'/>\r\n                                    <field\r\n showdelimiters='false' type='text' kind='editable' name='first_name'/>\r\n                                </run>\r\n                                <run\r\n>\r\n                                    <font size='12pt'/>\r\n                                </run>\r\n                            </par>\r\n                        </tablecell>\r\n                    </tablerow>\r\n                    <tablerow>\r\n                        <tablecell bgcolor='white'>\r\n                            <pardef id='5' align='right' rightmargin='1.8000in'/>\r\n                            <par def='5'>\r\n                                <run>\r\n                                    <font size='12pt' color='#000066'/>last_name\r\n                                </run>\r\n                            </par>\r\n                        </tablecell>\r\n                        <tablecell bgcolor='#f2f2f2'>\r\n                            <pardef id='6' leftmargin='0.2000in'/>\r\n                            <par def='6'>\r\n                                <run>\r\n                                    <font size='12pt'/>\r\n                                </run>\r\n                                <run>\r\n                                    <font size='12pt'/>\r\n                                    <field\r\n showdelimiters='false' type='text' kind='editable' name='last_name'/>\r\n                                </run>\r\n                                <run\r\n>\r\n                                    <font size='12pt'/>\r\n                                </run>\r\n                            </par>\r\n                        </tablecell>\r\n                    </tablerow>\r\n                    <tablerow>\r\n                        <tablecell bgcolor='white'>\r\n                            <pardef id='7' align='right' rightmargin='1.8000in'/>\r\n                            <par def='7'>\r\n                                <run>\r\n                                    <font size='12pt' color='#000066'/>email\r\n                                </run>\r\n                            </par>\r\n                        </tablecell>\r\n                        <tablecell bgcolor='#f2f2f2'>\r\n                            <pardef id='8' leftmargin='0.2000in'/>\r\n                            <par def='8'>\r\n                                <run>\r\n                                    <font size='12pt'/>\r\n                                </run>\r\n                                <run>\r\n                                    <font size='12pt'/>\r\n                                    <field\r\n showdelimiters='false' type='text' kind='editable' name='email'/>\r\n                                </run>\r\n                                <run\r\n>\r\n                                    <font size='12pt'/>\r\n                                </run>\r\n                            </par>\r\n                        </tablecell>\r\n                    </tablerow>\r\n                    <tablerow>\r\n                        <tablecell bgcolor='white'>\r\n                            <pardef id='9' align='right' rightmargin='1.8000in'/>\r\n                            <par def='9'>\r\n                                <run>\r\n                                    <font size='12pt' color='#000066'/>gender\r\n                                </run>\r\n                            </par>\r\n                        </tablecell>\r\n                        <tablecell bgcolor='#f2f2f2'>\r\n                            <pardef id='10' leftmargin='0.2000in'/>\r\n                            <par def='10'>\r\n                                <run>\r\n                                    <font size='12pt'/>\r\n                                </run>\r\n                                <run>\r\n                                    <font size='12pt'/>\r\n                                    <field\r\n showdelimiters='false' type='text' kind='editable' name='gender'/>\r\n                                </run>\r\n                                <run\r\n>\r\n                                    <font size='12pt'/>\r\n                                </run>\r\n                            </par>\r\n                        </tablecell>\r\n                    </tablerow>\r\n                    <tablerow>\r\n                        <tablecell bgcolor='white'>\r\n                            <pardef id='11' align='right' rightmargin='1.8000in'/>\r\n                            <par def='11'>\r\n                                <run>\r\n                                    <font size='12pt' color='#000066'/>ip_address\r\n                                </run>\r\n                            </par>\r\n                        </tablecell>\r\n                        <tablecell bgcolor='#f2f2f2'>\r\n                            <pardef id='12' leftmargin='0.2000in'/>\r\n                            <par def='12'>\r\n                                <run>\r\n                                    <font size='12pt'/>\r\n                                </run>\r\n                                <run>\r\n                                    <font size='12pt'/>\r\n                                    <field\r\n showdelimiters='false' type='text' kind='editable' name='ip_address'/>\r\n                                </run>\r\n                                <run\r\n>\r\n                                    <font size='12pt'/>\r\n                                </run>\r\n                            </par>\r\n                        </tablecell>\r\n                    </tablerow>\r\n                    <tablerow>\r\n                        <tablecell bgcolor='white'>\r\n                            <pardef id='13' align='right' rightmargin='1.8000in'/>\r\n                            <par def='13'>\r\n                                <run>\r\n                                    <font size='12pt' color='#000066'/>Color\r\n                                </run>\r\n                            </par>\r\n                        </tablecell>\r\n                        <tablecell bgcolor='#f2f2f2'>\r\n                            <pardef id='14' leftmargin='0.2000in'/>\r\n                            <par def='14'>\r\n                                <run>\r\n                                    <font size='12pt'/>\r\n                                </run>\r\n                                <run>\r\n                                    <font size='12pt'/>\r\n                                    <field\r\n showdelimiters='false' type='text' kind='editable' name='Color'/>\r\n                                </run>\r\n                                <run\r\n>\r\n                                    <font size='12pt'/>\r\n                                </run>\r\n                            </par>\r\n                        </tablecell>\r\n                    </tablerow>\r\n                    <tablerow>\r\n                        <tablecell bgcolor='white'>\r\n                            <pardef id='15' align='right' rightmargin='1.8000in'/>\r\n                            <par def='15'>\r\n                                <run>\r\n                                    <font size='12pt' color='#000066'/>Pet\r\n                                </run>\r\n                            </par>\r\n                        </tablecell>\r\n                        <tablecell bgcolor='#f2f2f2'>\r\n                            <pardef id='16' leftmargin='0.2000in'/>\r\n                            <par def='16'>\r\n                                <run>\r\n                                    <font size='12pt'/>\r\n                                </run>\r\n                                <run>\r\n                                    <font size='12pt'/>\r\n                                    <field\r\n showdelimiters='false' type='text' kind='editable' name='Pet'/>\r\n                                </run>\r\n                                <run\r\n>\r\n                                    <font size='12pt'/>\r\n                                </run>\r\n                            </par>\r\n                        </tablecell>\r\n                    </tablerow>\r\n                    <tablerow>\r\n                        <tablecell bgcolor='white'>\r\n                            <pardef id='17' align='right' rightmargin='1.8000in'/>\r\n                            <par def='17'>\r\n                                <run>\r\n                                    <font size='12pt' color='#000066'/>@created\r\n                                </run>\r\n                            </par>\r\n                        </tablecell>\r\n                        <tablecell bgcolor='#f2f2f2'>\r\n                            <pardef id='18' leftmargin='0.2000in'/>\r\n                            <par def='18'>\r\n                                <run>\r\n                                    <font size='12pt'/>\r\n                                </run>\r\n                                <run>\r\n                                    <font size='12pt'/>\r\n                                    <field\r\n showdelimiters='false' type='datetime' kind='editable' name='@created'>\r\n                                        <datetimeformat\r\n show='date' date='yearmonthday' time='hourminutesecond' zone='never'/>\r\n                                    </field>\r\n                                </run>\r\n                                <run\r\n>\r\n                                    <font size='12pt'/>\r\n                                </run>\r\n                            </par>\r\n                        </tablecell>\r\n                    </tablerow>\r\n                </table>\r\n                <par def='1'/>\r\n            </richtext>\r\n        </body>\r\n    </form>\r\n    <form name='OdataSampleForm' alias='OdataSampleForm' xmlns='http://www.lotus.com/dxl'\r\n version='12.0' maintenanceversion='1.0' replicaid='48258435003E8283' hide='web mobile'\r\n publicaccess='false' comment='Generated by KEEP '>\r\n        <noteinfo noteid='23a' unid='A2D799CA72ED1E1E4825881D000C8ACB' sequence='4'>\r\n            <created>\r\n                <datetime>20220407T101659,63+08</datetime>\r\n            </created>\r\n            <modified>\r\n                <datetime>20220408T102525,76+08</datetime>\r\n            </modified>\r\n            <revised>\r\n                <datetime>20220408T102525,75+08</datetime>\r\n            </revised>\r\n            <lastaccessed>\r\n                <datetime>20220408T102525,75+08</datetime>\r\n            </lastaccessed>\r\n            <addedtofile>\r\n                <datetime>20220407T101659,62+08</datetime>\r\n            </addedtofile>\r\n        </noteinfo>\r\n        <updatedby>\r\n            <name>CN=John Doe/O=ProjectKeep</name>\r\n        </updatedby>\r\n        <code event='windowtitle'>\r\n            <formula\r\n>@If(@IsNewDoc;\"New OdataSampleForm\";\"OdataSampleForm \"+@Text(@Created))</formula>\r\n        </code>\r\n        <body>\r\n            <richtext>\r\n                <pardef id='1' leftmargin='1.1000in'/>\r\n                <par def='1'>\r\n                    <run>\r\n                        <font size='24pt' color='#000066'/>OdataSampleForm\r\n                    </run>\r\n                </par>\r\n                <par def='1'/>\r\n                <table widthtype='fitmargins' leftmargin='1.1000in' refwidth='10.4063in'>\r\n                    <tablecolumn\r\n width='2in'/>\r\n                    <tablecolumn width='100%'/>\r\n                    <tablerow>\r\n                        <tablecell bgcolor='white'>\r\n                            <pardef id='3' align='right' rightmargin='1.8000in'/>\r\n                            <par def='3'>\r\n                                <run>\r\n                                    <font size='12pt' color='#000066'/>name\r\n                                </run>\r\n                            </par>\r\n                        </tablecell>\r\n                        <tablecell bgcolor='#f2f2f2'>\r\n                            <pardef id='4' leftmargin='0.2000in'/>\r\n                            <par def='4'>\r\n                                <run>\r\n                                    <font size='12pt'/>\r\n                                </run>\r\n                                <run>\r\n                                    <font size='12pt'/>\r\n                                    <field\r\n showdelimiters='false' type='text' kind='editable' name='name'/>\r\n                                </run>\r\n                                <run\r\n>\r\n                                    <font size='12pt'/>\r\n                                </run>\r\n                            </par>\r\n                        </tablecell>\r\n                    </tablerow>\r\n                    <tablerow>\r\n                        <tablecell bgcolor='white'>\r\n                            <pardef id='5' align='right' rightmargin='1.8000in'/>\r\n                            <par def='5'>\r\n                                <run>\r\n                                    <font size='12pt' color='#000066'/>email\r\n                                </run>\r\n                            </par>\r\n                        </tablecell>\r\n                        <tablecell bgcolor='#f2f2f2'>\r\n                            <pardef id='6' leftmargin='0.2000in'/>\r\n                            <par def='6'>\r\n                                <run>\r\n                                    <font size='12pt'/>\r\n                                </run>\r\n                                <run>\r\n                                    <font size='12pt'/>\r\n                                    <field\r\n showdelimiters='false' type='text' kind='editable' name='email'/>\r\n                                </run>\r\n                                <run\r\n>\r\n                                    <font size='12pt'/>\r\n                                </run>\r\n                            </par>\r\n                        </tablecell>\r\n                    </tablerow>\r\n                </table>\r\n                <par def='1'/>\r\n            </richtext>\r\n        </body>\r\n    </form>\r\n    <form name='NewForm' alias='NewForm' xmlns='http://www.lotus.com/dxl' version='12.0'\r\n maintenanceversion='1.0' replicaid='48258435003E8283' hide='web mobile' publicaccess='false'\r\n comment='Generated by KEEP '>\r\n        <noteinfo noteid='23e' unid='B02B73CC72F538AB4825881D000C8B81' sequence='4'>\r\n            <created>\r\n                <datetime>20220407T101701,45+08</datetime>\r\n            </created>\r\n            <modified>\r\n                <datetime>20220408T102527,90+08</datetime>\r\n            </modified>\r\n            <revised>\r\n                <datetime>20220408T102527,89+08</datetime>\r\n            </revised>\r\n            <lastaccessed>\r\n                <datetime>20220408T102527,89+08</datetime>\r\n            </lastaccessed>\r\n            <addedtofile>\r\n                <datetime>20220407T101701,45+08</datetime>\r\n            </addedtofile>\r\n        </noteinfo>\r\n        <updatedby>\r\n            <name>CN=John Doe/O=ProjectKeep</name>\r\n        </updatedby>\r\n        <code event='windowtitle'>\r\n            <formula\r\n>@If(@IsNewDoc;\"New NewForm\";\"NewForm \"+@Text(@Created))</formula>\r\n        </code>\r\n        <body>\r\n            <richtext>\r\n                <pardef id='1' leftmargin='1.1000in'/>\r\n                <par def='1'>\r\n                    <run>\r\n                        <font size='24pt' color='#000066'/>NewForm\r\n                    </run>\r\n                </par>\r\n                <par def='1'/>\r\n                <table widthtype='fitmargins' leftmargin='1.1000in' refwidth='10.4063in'>\r\n                    <tablecolumn\r\n width='2in'/>\r\n                    <tablecolumn width='100%'/>\r\n                    <tablerow>\r\n                        <tablecell bgcolor='white'>\r\n                            <pardef id='3' align='right' rightmargin='1.8000in'/>\r\n                            <par def='3'>\r\n                                <run>\r\n                                    <font size='12pt' color='#000066'/>Model\r\n                                </run>\r\n                            </par>\r\n                        </tablecell>\r\n                        <tablecell bgcolor='#f2f2f2'>\r\n                            <pardef id='4' leftmargin='0.2000in'/>\r\n                            <par def='4'>\r\n                                <run>\r\n                                    <font size='12pt'/>\r\n                                </run>\r\n                                <run>\r\n                                    <font size='12pt'/>\r\n                                    <field\r\n showdelimiters='false' type='text' kind='editable' name='Model'/>\r\n                                </run>\r\n                                <run\r\n>\r\n                                    <font size='12pt'/>\r\n                                </run>\r\n                            </par>\r\n                        </tablecell>\r\n                    </tablerow>\r\n                    <tablerow>\r\n                        <tablecell bgcolor='white'>\r\n                            <pardef id='5' align='right' rightmargin='1.8000in'/>\r\n                            <par def='5'>\r\n                                <run>\r\n                                    <font size='12pt' color='#000066'/>View\r\n                                </run>\r\n                            </par>\r\n                        </tablecell>\r\n                        <tablecell bgcolor='#f2f2f2'>\r\n                            <pardef id='6' leftmargin='0.2000in'/>\r\n                            <par def='6'>\r\n                                <run>\r\n                                    <font size='12pt'/>\r\n                                </run>\r\n                                <run>\r\n                                    <font size='12pt'/>\r\n                                    <field\r\n showdelimiters='false' type='text' kind='editable' name='View'/>\r\n                                </run>\r\n                                <run\r\n>\r\n                                    <font size='12pt'/>\r\n                                </run>\r\n                            </par>\r\n                        </tablecell>\r\n                    </tablerow>\r\n                    <tablerow>\r\n                        <tablecell bgcolor='white'>\r\n                            <pardef id='7' align='right' rightmargin='1.8000in'/>\r\n                            <par def='7'>\r\n                                <run>\r\n                                    <font size='12pt' color='#000066'/>Controller\r\n                                </run>\r\n                            </par>\r\n                        </tablecell>\r\n                        <tablecell bgcolor='#f2f2f2'>\r\n                            <pardef id='8' leftmargin='0.2000in'/>\r\n                            <par def='8'>\r\n                                <run>\r\n                                    <font size='12pt'/>\r\n                                </run>\r\n                                <run>\r\n                                    <font size='12pt'/>\r\n                                    <field\r\n showdelimiters='false' type='text' kind='editable' name='Controller'/>\r\n                                </run>\r\n                                <run\r\n>\r\n                                    <font size='12pt'/>\r\n                                </run>\r\n                            </par>\r\n                        </tablecell>\r\n                    </tablerow>\r\n                </table>\r\n                <par def='1'/>\r\n            </richtext>\r\n        </body>\r\n    </form>\r\n    <form name='SampleEntry' alias='SampleEntry' xmlns='http://www.lotus.com/dxl'\r\n version='12.0' maintenanceversion='1.0' replicaid='48258435003E8283' hide='web mobile'\r\n publicaccess='false' comment='Generated by KEEP '>\r\n        <noteinfo noteid='242' unid='420601BF7E637D4A4825881D000C8FAA' sequence='4'>\r\n            <created>\r\n                <datetime>20220407T101712,10+08</datetime>\r\n            </created>\r\n            <modified>\r\n                <datetime>20220408T102537,86+08</datetime>\r\n            </modified>\r\n            <revised>\r\n                <datetime>20220408T102537,85+08</datetime>\r\n            </revised>\r\n            <lastaccessed>\r\n                <datetime>20220408T102537,85+08</datetime>\r\n            </lastaccessed>\r\n            <addedtofile>\r\n                <datetime>20220407T101712,11+08</datetime>\r\n            </addedtofile>\r\n        </noteinfo>\r\n        <updatedby>\r\n            <name>CN=John Doe/O=ProjectKeep</name>\r\n        </updatedby>\r\n        <code event='windowtitle'>\r\n            <formula\r\n>@If(@IsNewDoc;\"New SampleEntry\";\"SampleEntry \"+@Text(@Created))</formula>\r\n        </code>\r\n        <body>\r\n            <richtext>\r\n                <pardef id='1' leftmargin='1.1000in'/>\r\n                <par def='1'>\r\n                    <run>\r\n                        <font size='24pt' color='#000066'/>SampleEntry\r\n                    </run>\r\n                </par>\r\n                <par def='1'/>\r\n                <table widthtype='fitmargins' leftmargin='1.1000in' refwidth='10.4063in'>\r\n                    <tablecolumn\r\n width='2in'/>\r\n                    <tablecolumn width='100%'/>\r\n                    <tablerow>\r\n                        <tablecell bgcolor='white'>\r\n                            <pardef id='3' align='right' rightmargin='1.8000in'/>\r\n                            <par def='3'>\r\n                                <run>\r\n                                    <font size='12pt' color='#000066'/>name\r\n                                </run>\r\n                            </par>\r\n                        </tablecell>\r\n                        <tablecell bgcolor='#f2f2f2'>\r\n                            <pardef id='4' leftmargin='0.2000in'/>\r\n                            <par def='4'>\r\n                                <run>\r\n                                    <font size='12pt'/>\r\n                                </run>\r\n                                <run>\r\n                                    <font size='12pt'/>\r\n                                    <field\r\n showdelimiters='false' type='text' kind='editable' name='name'/>\r\n                                </run>\r\n                                <run\r\n>\r\n                                    <font size='12pt'/>\r\n                                </run>\r\n                            </par>\r\n                        </tablecell>\r\n                    </tablerow>\r\n                    <tablerow>\r\n                        <tablecell bgcolor='white'>\r\n                            <pardef id='5' align='right' rightmargin='1.8000in'/>\r\n                            <par def='5'>\r\n                                <run>\r\n                                    <font size='12pt' color='#000066'/>email\r\n                                </run>\r\n                            </par>\r\n                        </tablecell>\r\n                        <tablecell bgcolor='#f2f2f2'>\r\n                            <pardef id='6' leftmargin='0.2000in'/>\r\n                            <par def='6'>\r\n                                <run>\r\n                                    <font size='12pt'/>\r\n                                </run>\r\n                                <run>\r\n                                    <font size='12pt'/>\r\n                                    <field\r\n showdelimiters='false' type='text' kind='editable' name='email'/>\r\n                                </run>\r\n                                <run\r\n>\r\n                                    <font size='12pt'/>\r\n                                </run>\r\n                            </par>\r\n                        </tablecell>\r\n                    </tablerow>\r\n                </table>\r\n                <par def='1'/>\r\n            </richtext>\r\n        </body>\r\n    </form>\r\n    <view name='entries' xmlns='http://www.lotus.com/dxl' version='12.0' maintenanceversion='1.0'\r\n replicaid='48258435003E8283' showinmenu='false' publicaccess='false' designerversion='8.5.3'\r\n unreadmarks='none' onopengoto='lastopened' onrefresh='refresh' headers='beveled'\r\n opencollapsed='false' showresponsehierarchy='false' showmargin='false' shrinkrows='false'\r\n extendlastcolumn='false' showhierarchies='false' unreadcolor='black' rowlinecount='1'\r\n headerlinecount='1' rowspacing='1' bgcolor='white' totalscolor='black' headerbgcolor='white'\r\n boldunreadrows='false' evaluateactions='false' allownewdocuments='false'\r\n allowcustomizations='false' hidemarginborder='false' marginwidth='0px' marginbgcolor='white'\r\n uniquekeys='false'>\r\n        <noteinfo noteid='246' unid='F8615B5062C3CCA14825881D000C9007' sequence='4'>\r\n            <created>\r\n                <datetime>20220407T101713,03+08</datetime>\r\n            </created>\r\n            <modified>\r\n                <datetime>20220408T102538,75+08</datetime>\r\n            </modified>\r\n            <revised>\r\n                <datetime>20220408T102538,74+08</datetime>\r\n            </revised>\r\n            <lastaccessed>\r\n                <datetime>20220408T102538,74+08</datetime>\r\n            </lastaccessed>\r\n            <addedtofile>\r\n                <datetime>20220407T101713,03+08</datetime>\r\n            </addedtofile>\r\n        </noteinfo>\r\n        <updatedby>\r\n            <name>CN=LP2-AP-51723551/O=HCLPNP</name>\r\n            <name>CN=John Doe/O=ProjectKeep</name>\r\n        </updatedby>\r\n        <code\r\n event='selection'>\r\n            <formula>SELECT Form = \"SampleEntry\"</formula>\r\n        </code>\r\n        <column sort='ascending' hidedetailrows='false' itemname='name' width='10'\r\n resizable='true' separatemultiplevalues='false' sortnoaccent='true' sortnocase='true'\r\n showaslinks='false'>\r\n            <columnheader title='name'>\r\n                <font size='9pt' style='bold'/>\r\n            </columnheader>\r\n        </column>\r\n        <column sort='ascending' hidedetailrows='false' itemname='email' width='10'\r\n resizable='true' separatemultiplevalues='false' sortnoaccent='true' sortnocase='true'\r\n showaslinks='false'>\r\n            <columnheader title='email'>\r\n                <font size='9pt' style='bold'/>\r\n            </columnheader>\r\n        </column>\r\n    </view>\r\n</database>"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "design"
                ],
                "parameters": [
                    {
                        "examples": {
                            "CustomApp": {
                                "value": "demo"
                            },
                            "Directory": {
                                "value": "dominodirectory"
                            }
                        },
                        "name": "dataSource",
                        "description": "Keep alias for the database to be queried",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                },
                                "examples": {
                                    "dxlUpdateResponseSimple": {
                                        "value": {
                                            "apiName": "testdb",
                                            "log": "<?xml version='1.0'?>\n<DXLImporterLog>\n</DXLImporterLog>"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Successful patch of Design"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "jwt": [
                        ]
                    }
                ],
                "operationId": "updateDxl",
                "summary": "Update database with DXL",
                "description": "Upload DXL to alter design elements",
                "x-keep-version": 5
            },
            "delete": {
                "tags": [
                    "design"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StatusMessage"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "status": "OK",
                                            "statusCode": 200,
                                            "message": "DXL nuked, you are welcome"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Successful removal"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    }
                },
                "security": [
                    {
                        "jwt": [
                        ]
                    }
                ],
                "operationId": "deleteDxl",
                "summary": "remove DXL from cache",
                "description": "Does not touch anything inside a database, only removes the cache",
                "x-keep-version": 5
            },
            "parameters": [
                {
                    "examples": {
                        "CustomApp": {
                            "value": "demo"
                        },
                        "Directory": {
                            "value": "dominodirectory"
                        }
                    },
                    "name": "dataSource",
                    "description": "Keep alias for the database to be queried",
                    "schema": {
                        "type": "string"
                    },
                    "in": "query",
                    "required": true
                }
            ]
        },
        "/design": {
            "summary": "Retrieve JSON formatted design elements info about a database.",
            "description": "- forms\n- views / folders\n- agents\n- libraries\n- itemdefinitions\n- pages\n- subforms\n- outlines\n- navigators\n- actions\n- columns\n- fields",
            "get": {
                "tags": [
                    "design"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                },
                                "examples": {
                                    "DesignSample": {
                                        "value": {
                                            "forms": {
                                                "fromSalesforce": {
                                                    "@hide": "",
                                                    "@conflictation": "createconflicts",
                                                    "@unid": "639C1AE5A68680C2482584350046F7C3",
                                                    "@alias": [
                                                    ],
                                                    "@noteid": "196",
                                                    "@name": "fromSalesforce",
                                                    "Body": {
                                                        "allowmultivalues": false,
                                                        "kind": "",
                                                        "type": "text"
                                                    }
                                                },
                                                "SampleForm": {
                                                    "@hide": "",
                                                    "@conflictation": "createconflicts",
                                                    "@unid": "A0DC3840E8CC9615482584350041A8CF",
                                                    "@alias": [
                                                    ],
                                                    "@noteid": "182",
                                                    "@name": "SampleForm",
                                                    "Shape": {
                                                        "allowmultivalues": false,
                                                        "kind": "editable",
                                                        "type": "text"
                                                    },
                                                    "Color": {
                                                        "allowmultivalues": false,
                                                        "kind": "editable",
                                                        "type": "text"
                                                    },
                                                    "Taste": {
                                                        "allowmultivalues": false,
                                                        "kind": "editable",
                                                        "type": "text"
                                                    },
                                                    "Name": {
                                                        "allowmultivalues": true,
                                                        "kind": "editable",
                                                        "type": "text"
                                                    },
                                                    "Age": {
                                                        "allowmultivalues": true,
                                                        "kind": "editable",
                                                        "type": "number"
                                                    }
                                                }
                                            },
                                            "subforms": {

                                            },
                                            "pages": {

                                            },
                                            "views": {
                                                "Customers": {
                                                    "@alias": [
                                                    ],
                                                    "@unid": "86C72C1BF64B6DF04825847100373215",
                                                    "@selectionFormula": "SELECT (Form = \"Customer\")",
                                                    "@name": "Customers",
                                                    "@noteid": "1be",
                                                    "$0": {
                                                        "title": "#",
                                                        "formula": "@DocNumber"
                                                    },
                                                    "$1": {
                                                        "title": "Created",
                                                        "formula": "@Created"
                                                    },
                                                    "last_name": {
                                                        "title": "LastName",
                                                        "formula": ""
                                                    },
                                                    "first_name": {
                                                        "title": "FirstName",
                                                        "formula": ""
                                                    },
                                                    "email": {
                                                        "title": "eMail",
                                                        "formula": ""
                                                    },
                                                    "Color": {
                                                        "title": "Color",
                                                        "formula": ""
                                                    },
                                                    "Pet": {
                                                        "title": "Pet",
                                                        "formula": ""
                                                    }
                                                },
                                                "($All)": {
                                                    "@alias": [
                                                    ],
                                                    "@unid": "0E35D520A1EBBB5B48258435003E8284",
                                                    "@selectionFormula": "SELECT @All",
                                                    "@name": "($All)",
                                                    "@noteid": "11a",
                                                    "$0": {
                                                        "title": "#",
                                                        "formula": "@DocNumber"
                                                    },
                                                    "Form": {
                                                        "title": "Form",
                                                        "formula": ""
                                                    },
                                                    "$2": {
                                                        "title": "Created",
                                                        "formula": "@Created"
                                                    }
                                                }
                                            },
                                            "folders": {

                                            },
                                            "navigators": {

                                            },
                                            "outlines": {

                                            },
                                            "agents": {
                                                "Fix Body": {
                                                    "Options": "%REM\n\tAgent SalesforceProcessing\n\tCreated Jul 12, 2019 by Stephan Wissel/Singapore/PNPHCL\n\tDescription: Comments for Agent\n%END REM\nOption Public\nOption Declare\n\n\n",
                                                    "handleOneDoc": "%REM\n\tSub handleOneDoc\n\tDescription: Creates a RichTextItem for all Fields\n%END REM\nSub handleOneDoc(doc As NotesDocument)\n\tDim rt As NotesRichTextItem\n\tDim item As NotesItem\n\tSet rt = doc.Createrichtextitem(\"Body\")\n\tForAll i In doc.Items\n\t\tSet item = i\n\t\tIf item.name <> \"Body\" Then\n\t\t\trt.Appendtext(item.Name)\n\t\t\trt.Appendtext(\": \")\n\t\t\trt.Appendtext(item.Text)\n\t\t\trt.Addnewline(1)\n\t\tEnd If\n\tEnd ForAll\t\n\n\tCall doc.save(True,True)\nEnd Sub\r\n",
                                                    "Forward": "Declare Sub Initialize\nDeclare Sub handleOneDoc(doc As NotesDocument)\n\n",
                                                    "Declarations": "\n",
                                                    "Initialize": "Sub Initialize\n\tDim s As New NotesSession\n\tDim db As NotesDatabase\n\tDim dcol As NotesDocumentCollection\n\tDim doc As NotesDocument\n\tDim nextDoc As NotesDocument\n\tSet db = s.Currentdatabase\n\tSet dcol = db.Unprocesseddocuments\n\tSet doc = dcol.Getfirstdocument()\n\tWhile Not doc Is Nothing\n\t\tSet nextDoc = dcol.Getnextdocument(doc)\n\t\tCall handleOneDoc(doc)\n\t\tCall s.Updateprocesseddoc(doc)\n\t\tSet doc = nextDoc\n\tWend\nEnd Sub\n\n\n\n",
                                                    "@trigger": "manual",
                                                    "@noteid": "1aa",
                                                    "@validForKeep": false,
                                                    "@documentset": "selected",
                                                    "@unid": "3F8E64B529DA6CF848258435004A37CC",
                                                    "@type": "lotusscript",
                                                    "@name": "Fix Body"
                                                },
                                                "SalesforceProcessing": {
                                                    "Options": "%REM\n\tAgent SalesforceProcessing\n\tCreated Jul 12, 2019 by Stephan Wissel/Singapore/PNPHCL\n\tDescription: Comments for Agent\n%END REM\nOption Public\nOption Declare\n\n\n",
                                                    "handleOneDoc": "%REM\n\tSub handleOneDoc\n\tDescription: Creates a RichTextItem for all Fields\n%END REM\nSub handleOneDoc(doc As NotesDocument)\n\tDim rt As NotesRichTextItem\n\tDim item As NotesItem\n\tSet rt = doc.Createrichtextitem(\"Body\")\n\tForAll i In doc.Items\n\t\tSet item = i\n\t\tIf item.name <> \"Body\" Then\n\t\t\trt.Appendtext(item.Name)\n\t\t\trt.Appendtext(\": \")\n\t\t\trt.Appendtext(item.Text)\n\t\t\trt.Addnewline(1)\n\t\tEnd If\n\tEnd ForAll\t\n\n\tCall doc.save(True,True)\nEnd Sub\r\n",
                                                    "Forward": "Declare Sub Initialize\nDeclare Sub handleOneDoc(doc As NotesDocument)\n\n",
                                                    "Declarations": "\n",
                                                    "Initialize": "Sub Initialize\n\tDim s As New NotesSession\n\tDim db As NotesDatabase\n\tDim dcol As NotesDocumentCollection\n\tDim doc As NotesDocument\n\tDim nextDoc As NotesDocument\n\tSet db = s.Currentdatabase\n\tSet dcol = db.Unprocesseddocuments\n\tSet doc = dcol.Getfirstdocument()\n\tWhile Not doc Is Nothing\n\t\tSet nextDoc = dcol.Getnextdocument(doc)\n\t\tCall handleOneDoc(doc)\n\t\tCall s.Updateprocesseddoc(doc)\n\t\tSet doc = nextDoc\n\tWend\nEnd Sub\n\n\n\n",
                                                    "@trigger": "docupdate",
                                                    "@noteid": "19e",
                                                    "@validForKeep": true,
                                                    "@documentset": "none",
                                                    "@unid": "56D541DC5BCAF1384825843500477872",
                                                    "@type": "lotusscript",
                                                    "@name": "SalesforceProcessing"
                                                }
                                            },
                                            "libraries": {

                                            },
                                            "actions": {

                                            },
                                            "columns": {

                                            },
                                            "fields": {

                                            },
                                            "apiName": "",
                                            "filepath": "Demo.nsf",
                                            "cacheTimestamp": 1653544543527
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Successful design retrieval"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "jwt": [
                        ]
                    }
                ],
                "operationId": "fetchDesignAll",
                "summary": "Return list of design elements for a database",
                "description": "List design information in JSON format for all types of design elements in JSON format.",
                "x-keep-version": 1
            },
            "parameters": [
                {
                    "examples": {
                        "CustomApp": {
                            "value": "demo"
                        },
                        "Directory": {
                            "value": "dominodirectory"
                        }
                    },
                    "name": "dataSource",
                    "description": "Keep alias for the database",
                    "schema": {
                        "type": "string"
                    },
                    "in": "query",
                    "required": false
                },
                {
                    "name": "raw",
                    "description": "Boolean, when true design information is returned as JNX CDRecords in JSON format,\nwhen false the simplified KEEP format is returned",
                    "schema": {
                        "type": "boolean"
                    },
                    "in": "query"
                },
                {
                    "name": "nsfPath",
                    "description": "ALternate access to the design of an NSF to facilitate creation of schema definition",
                    "schema": {
                        "type": "string"
                    },
                    "in": "query"
                }
            ]
        },
        "/richtext/markdown/{unid}": {
            "summary": "Provides Read access to a RichText field as MIME",
            "description": "Legacy RichText fields (typically Body) returned as Markdown, subject to the limitations of the Flexmark markdown processor",
            "get": {
                "tags": [
                    "data"
                ],
                "parameters": [
                    {
                        "name": "item",
                        "description": "Name of the RichText item to retrieve. When omitted \"Body\" is used as item name",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "text/markdown": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Returns Markdown data converted from RichText"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "jwt": [
                        ]
                    }
                ],
                "operationId": "getRichTextMarkdown",
                "summary": "Return RichText as Markdown",
                "x-keep-version": 1
            },
            "parameters": [
                {
                    "examples": {
                        "CustomApp": {
                            "value": "customcontacts"
                        },
                        "Directory": {
                            "value": "dominodirectory"
                        }
                    },
                    "name": "dataSource",
                    "description": "Keep alias for the database to be queried",
                    "schema": {
                        "type": "string"
                    },
                    "in": "query",
                    "required": true
                },
                {
                    "examples": {
                        "sample": {
                            "value": "94CA3B3B5E035D6048258471003639C6"
                        }
                    },
                    "name": "unid",
                    "description": "Universal Id of the document to be acted upon",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                },
                {
                    "examples": {
                        "defaultValue": {
                            "value": "\"default\""
                        },
                        "ForApprover": {
                            "value": "\"approver\""
                        }
                    },
                    "name": "mode",
                    "description": "mode to perform the document access in. Defaults to 'default' if missing. All lowercase, no spaces, letters and numbers only",
                    "schema": {
                        "type": "string"
                    },
                    "in": "query"
                }
            ]
        },
        "/odata/{dataSource}/$metadata": {
            "summary": "Retrieve data in ODATA format",
            "description": "XML Metadata describing forms and views",
            "get": {
                "tags": [
                    "odata"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "type": "string"
                                },
                                "examples": {
                                    "ODataDbMetadataSample": {
                                        "value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<edmx:Edmx xmlns=\"http://docs.oasis-open.org/odata/ns/edm\"\r\n            xmlns:edmx=\"http://docs.oasis-open.org/odata/ns/edmx\"\r\n            Version=\"4.0\">\r\n    <edmx:DataServices>\r\n        <Schema Namespace=\"testdb\">\r\n            <EntityType HasStream=\"true\" Name=\"SampleForm\" OpenType=\"true\">\r\n                <Key>\r\n                    <PropertyRef Name=\"_x0040_unid\"/>\r\n                </Key>\r\n                <Property Name=\"_x0040_unid\" Nullable=\"false\" Type=\"Edm.String\"/>\r\n                <Property Name=\"Shape\" Type=\"Edm.String\"/>\r\n                <Property Name=\"Color\" Type=\"Edm.String\"/>\r\n                <Property Name=\"Taste\" Type=\"Edm.String\"/>\r\n                <Property Name=\"Form\" Nullable=\"false\" Type=\"Edm.String\"/>\r\n            </EntityType>\r\n            <EntityType HasStream=\"true\" Name=\"Entry\" OpenType=\"true\">\r\n                <Key>\r\n                    <PropertyRef Name=\"_x0040_unid\"/>\r\n                </Key>\r\n                <Property Name=\"_x0040_unid\" Nullable=\"false\" Type=\"Edm.String\"/>\r\n                <Property Name=\"name\" Type=\"Edm.String\"/>\r\n                <Property Name=\"email\" Type=\"Edm.String\"/>\r\n                <Property Name=\"Form\" Nullable=\"false\" Type=\"Edm.String\"/>\r\n            </EntityType>\r\n            <EntityType HasStream=\"true\" Name=\"TestForm\" OpenType=\"true\">\r\n                <Key>\r\n                    <PropertyRef Name=\"_x0040_unid\"/>\r\n                </Key>\r\n                <Property Name=\"_x0040_unid\" Nullable=\"false\" Type=\"Edm.String\"/>\r\n                <Property Name=\"first_name\" Type=\"Edm.String\"/>\r\n                <Property Name=\"last_name\" Type=\"Edm.String\"/>\r\n                <Property Name=\"email\" Type=\"Edm.String\"/>\r\n                <Property Name=\"gender\" Type=\"Edm.String\"/>\r\n                <Property Name=\"ip_address\" Type=\"Edm.String\"/>\r\n                <Property Name=\"Color\" Type=\"Edm.String\"/>\r\n                <Property Name=\"Pet\" Type=\"Edm.String\"/>\r\n                <Property Name=\"Form\" Nullable=\"false\" Type=\"Edm.String\"/>\r\n            </EntityType>\r\n            <EntityContainer Name=\"DefaultContainer\">\r\n                <EntitySet EntityType=\"testdb.SampleForm\" Name=\"SampleForm\">\r\n                    <Annotation String=\"SampleForm\" Term=\"Org.OData.Core.V1.ResourcePath\"/>\r\n                </EntitySet>\r\n                <EntitySet EntityType=\"testdb.Entry\" Name=\"Entry\">\r\n                    <Annotation String=\"Entry\" Term=\"Org.OData.Core.V1.ResourcePath\"/>\r\n                </EntitySet>\r\n                <EntitySet EntityType=\"testdb.TestForm\" Name=\"TestForm\">\r\n                    <Annotation String=\"TestForm\" Term=\"Org.OData.Core.V1.ResourcePath\"/>\r\n                </EntitySet>\r\n            </EntityContainer>\r\n        </Schema>\r\n    </edmx:DataServices>\r\n</edmx:Edmx>"
                                    }
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "type": "string"
                                },
                                "examples": {
                                    "ODataDbMetadataSample": {
                                        "value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<edmx:Edmx xmlns=\"http://docs.oasis-open.org/odata/ns/edm\"\r\n            xmlns:edmx=\"http://docs.oasis-open.org/odata/ns/edmx\"\r\n            Version=\"4.0\">\r\n    <edmx:DataServices>\r\n        <Schema Namespace=\"testdb\">\r\n            <EntityType HasStream=\"true\" Name=\"SampleForm\" OpenType=\"true\">\r\n                <Key>\r\n                    <PropertyRef Name=\"_x0040_unid\"/>\r\n                </Key>\r\n                <Property Name=\"_x0040_unid\" Nullable=\"false\" Type=\"Edm.String\"/>\r\n                <Property Name=\"Shape\" Type=\"Edm.String\"/>\r\n                <Property Name=\"Color\" Type=\"Edm.String\"/>\r\n                <Property Name=\"Taste\" Type=\"Edm.String\"/>\r\n                <Property Name=\"Form\" Nullable=\"false\" Type=\"Edm.String\"/>\r\n            </EntityType>\r\n            <EntityType HasStream=\"true\" Name=\"Entry\" OpenType=\"true\">\r\n                <Key>\r\n                    <PropertyRef Name=\"_x0040_unid\"/>\r\n                </Key>\r\n                <Property Name=\"_x0040_unid\" Nullable=\"false\" Type=\"Edm.String\"/>\r\n                <Property Name=\"name\" Type=\"Edm.String\"/>\r\n                <Property Name=\"email\" Type=\"Edm.String\"/>\r\n                <Property Name=\"Form\" Nullable=\"false\" Type=\"Edm.String\"/>\r\n            </EntityType>\r\n            <EntityType HasStream=\"true\" Name=\"TestForm\" OpenType=\"true\">\r\n                <Key>\r\n                    <PropertyRef Name=\"_x0040_unid\"/>\r\n                </Key>\r\n                <Property Name=\"_x0040_unid\" Nullable=\"false\" Type=\"Edm.String\"/>\r\n                <Property Name=\"first_name\" Type=\"Edm.String\"/>\r\n                <Property Name=\"last_name\" Type=\"Edm.String\"/>\r\n                <Property Name=\"email\" Type=\"Edm.String\"/>\r\n                <Property Name=\"gender\" Type=\"Edm.String\"/>\r\n                <Property Name=\"ip_address\" Type=\"Edm.String\"/>\r\n                <Property Name=\"Color\" Type=\"Edm.String\"/>\r\n                <Property Name=\"Pet\" Type=\"Edm.String\"/>\r\n                <Property Name=\"Form\" Nullable=\"false\" Type=\"Edm.String\"/>\r\n            </EntityType>\r\n            <EntityContainer Name=\"DefaultContainer\">\r\n                <EntitySet EntityType=\"testdb.SampleForm\" Name=\"SampleForm\">\r\n                    <Annotation String=\"SampleForm\" Term=\"Org.OData.Core.V1.ResourcePath\"/>\r\n                </EntitySet>\r\n                <EntitySet EntityType=\"testdb.Entry\" Name=\"Entry\">\r\n                    <Annotation String=\"Entry\" Term=\"Org.OData.Core.V1.ResourcePath\"/>\r\n                </EntitySet>\r\n                <EntitySet EntityType=\"testdb.TestForm\" Name=\"TestForm\">\r\n                    <Annotation String=\"TestForm\" Term=\"Org.OData.Core.V1.ResourcePath\"/>\r\n                </EntitySet>\r\n            </EntityContainer>\r\n        </Schema>\r\n    </edmx:DataServices>\r\n</edmx:Edmx>"
                                    }
                                }
                            }
                        },
                        "description": "Successful query"
                    }
                },
                "security": [
                    {
                        "basic": [
                        ]
                    },
                    {
                        "jwt": [
                        ]
                    }
                ],
                "operationId": "getOdataMetadata",
                "description": "ODATA Meta Data is XML",
                "x-keep-version": 1
            },
            "parameters": [
                {
                    "examples": {
                        "Demo": {
                            "value": "demo"
                        }
                    },
                    "name": "dataSource",
                    "description": "Alias name of the Keep database to query",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                },
                {
                    "examples": {
                        "Current": {
                            "value": "4.0"
                        }
                    },
                    "name": "OData-MaxVersion",
                    "description": "What do we support",
                    "schema": {
                        "type": "string"
                    },
                    "in": "header"
                },
                {
                    "examples": {
                        "Current": {
                            "value": "4.0"
                        }
                    },
                    "name": "OData-Version",
                    "description": "What version is requested",
                    "schema": {
                        "type": "string"
                    },
                    "in": "header"
                },
                {
                    "examples": {
                        "Current": {
                            "value": "3.0"
                        }
                    },
                    "name": "MaxDataServiceVersion",
                    "description": "What's the dataservice",
                    "schema": {
                        "type": "string"
                    },
                    "in": "header"
                }
            ]
        },
        "/odata/{dataSource}": {
            "summary": "Retrieve ODATA service Document",
            "description": "JSON Structure describing what a database can do",
            "get": {
                "tags": [
                    "odata"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataDbResponse"
                                },
                                "examples": {
                                    "ODataDbSample": {
                                        "value": {
                                            "@odata.context": "http://localhost:8880/api/v1/odata/testdb/$metadata",
                                            "value": [
                                                {
                                                    "name": "Entry",
                                                    "kind": "EntitySet",
                                                    "url": "Entry"
                                                },
                                                {
                                                    "name": "OdataSampleForm",
                                                    "kind": "EntitySet",
                                                    "url": "OdataSampleForm"
                                                },
                                                {
                                                    "name": "NewForm",
                                                    "kind": "EntitySet",
                                                    "url": "NewForm"
                                                },
                                                {
                                                    "name": "SampleEntry",
                                                    "kind": "EntitySet",
                                                    "url": "SampleEntry"
                                                },
                                                {
                                                    "name": "TestForm",
                                                    "kind": "EntitySet",
                                                    "url": "TestForm"
                                                }
                                            ]
                                        }
                                    }
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                },
                                "examples": {
                                    "ODataDbSimpleText": {
                                        "value": {
                                            "@odata.context": "http://localhost:8880/api/v1/odata/testdb/$metadata",
                                            "value": [
                                                {
                                                    "name": "Entry",
                                                    "kind": "EntitySet",
                                                    "url": "Entry"
                                                },
                                                {
                                                    "name": "OdataSampleForm",
                                                    "kind": "EntitySet",
                                                    "url": "OdataSampleForm"
                                                },
                                                {
                                                    "name": "NewForm",
                                                    "kind": "EntitySet",
                                                    "url": "NewForm"
                                                },
                                                {
                                                    "name": "SampleEntry",
                                                    "kind": "EntitySet",
                                                    "url": "SampleEntry"
                                                },
                                                {
                                                    "name": "TestForm",
                                                    "kind": "EntitySet",
                                                    "url": "TestForm"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Successful query"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "basic": [
                        ]
                    },
                    {
                        "jwt": [
                        ]
                    }
                ],
                "operationId": "getOdataServiceInfo",
                "description": "ODATA is JSON with defined Meta data",
                "x-keep-version": 1
            },
            "parameters": [
                {
                    "examples": {
                        "Demo": {
                            "value": "demo"
                        }
                    },
                    "name": "dataSource",
                    "description": "Alias name of the Keep database to query",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                },
                {
                    "examples": {
                        "Current": {
                            "value": "4.0"
                        }
                    },
                    "name": "OData-MaxVersion",
                    "description": "What do we support",
                    "schema": {
                        "type": "string"
                    },
                    "in": "header"
                },
                {
                    "examples": {
                        "Current": {
                            "value": "4.0"
                        }
                    },
                    "name": "OData-Version",
                    "description": "What version is requested",
                    "schema": {
                        "type": "string"
                    },
                    "in": "header"
                },
                {
                    "examples": {
                        "Current": {
                            "value": "3.0"
                        }
                    },
                    "name": "MaxDataServiceVersion",
                    "description": "What's the dataservice",
                    "schema": {
                        "type": "string"
                    },
                    "in": "header"
                }
            ]
        },
        "/richtext/mime/{unid}": {
            "summary": "Provides Read access to a RichText field as MIME",
            "description": "Legacy RichText fields (typically Body) returned as MIME including embedded images and links to attachmentd",
            "get": {
                "tags": [
                    "data"
                ],
                "parameters": [
                    {
                        "name": "item",
                        "description": "Name of the RichText item to retrieve. When omitted \"Body\" is used as item name",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/mime": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Returns MIME data converted from RichText"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "jwt": [
                        ]
                    }
                ],
                "operationId": "getRichTextMime",
                "summary": "Return RichText as MIME",
                "x-keep-version": 1
            },
            "parameters": [
                {
                    "examples": {
                        "CustomApp": {
                            "value": "customcontacts"
                        },
                        "Directory": {
                            "value": "dominodirectory"
                        }
                    },
                    "name": "dataSource",
                    "description": "Keep alias for the database to be queried",
                    "schema": {
                        "type": "string"
                    },
                    "in": "query",
                    "required": true
                },
                {
                    "examples": {
                        "sample": {
                            "value": "94CA3B3B5E035D6048258471003639C6"
                        }
                    },
                    "name": "unid",
                    "description": "Universal Id of the document to be acted upon",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                },
                {
                    "examples": {
                        "defaultValue": {
                            "value": "\"default\""
                        },
                        "ForApprover": {
                            "value": "\"approver\""
                        }
                    },
                    "name": "mode",
                    "description": "mode to perform the document access in. Defaults to 'default' if missing. All lowercase, no spaces, letters and numbers only",
                    "schema": {
                        "type": "string"
                    },
                    "in": "query"
                }
            ]
        },
        "/admin/scope": {
            "summary": "Connection of scope (public name) to a defined schema (a.k.a KeepDbConfig) in a NSF",
            "description": "scope names are unique to a Domino server, while schema definitions are unique only to the nsf they reside in.\nThis endpoint allows to CRUD on the mappings between scope and schema",
            "get": {
                "tags": [
                    "admin"
                ],
                "parameters": [
                    {
                        "name": "scopeName",
                        "description": "API Name of the mapping",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RestMapping"
                                }
                            }
                        },
                        "description": "List of configs"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    },
                    "501": {
                        "$ref": "#/components/responses/501"
                    }
                },
                "security": [
                    {
                        "jwt": [
                        ]
                    }
                ],
                "operationId": "getScopeMapping",
                "summary": "Retrieves rest configuration from the server",
                "description": "Maps a schema to a scope",
                "x-keep-version": 1
            },
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RestMapping"
                            },
                            "examples": {
                                "simpleScopeRequest": {
                                    "value": {
                                        "Subject": "The famous demo database",
                                        "apiName": "demoapi",
                                        "schemaName": "demoapi",
                                        "nsfPath": "Demo.nsf",
                                        "isActive": true,
                                        "ISiteNameFull": "REST Database Site: demo (active)",
                                        "ISiteOrg": "Domino REST access"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "admin"
                ],
                "parameters": [
                    {
                        "name": "createSchema",
                        "description": "If the database mentioned has no Schema of the given name, create an empty one.\nRequires designer access to the target database",
                        "schema": {
                            "type": "boolean"
                        },
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RestMapping"
                                },
                                "examples": {
                                    "scopeSimple": {
                                        "value": {
                                            "@unid": "22D5E55E8FA1389A48258844006681A7",
                                            "@noteid": 4718,
                                            "@created": "2022-05-16T18:39:38Z",
                                            "@lastmodified": "2022-05-17T08:51:54Z",
                                            "@revision": "ac8ca0d967c9a40b0c9c07aecf87377d",
                                            "@lastaccessed": "2022-05-17T08:51:54Z",
                                            "@size": 258,
                                            "@unread": true,
                                            "@etag": "W/\" 6283622a\"",
                                            "Subject": "The famous demo database",
                                            "apiName": "demo",
                                            "schemaName": "demo",
                                            "nsfPath": "Demo.nsf",
                                            "isActive": true,
                                            "ISiteNameFull": "REST Database Site: demo (active)",
                                            "ISiteOrg": "Domino REST access",
                                            "Form": "KeepDatabase",
                                            "Type": "KeepDatabase",
                                            "$UpdatedBy": [
                                                "CN=John Doe/O=Mauraders"
                                            ],
                                            "$Revisions": [
                                                "2022-05-17T02:39:38+08:00",
                                                "2022-05-17T09:35:05+08:00"
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": "successful creation"
                    }
                },
                "security": [
                    {
                        "jwt": [
                        ]
                    }
                ],
                "operationId": "createUpdateScopeMapping",
                "summary": "Create a rest configuration",
                "x-keep-version": 1
            },
            "delete": {
                "tags": [
                    "admin"
                ],
                "parameters": [
                    {
                        "name": "dataSource",
                        "description": "API Name of the mapping",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StatusMessage"
                                }
                            }
                        },
                        "description": "Successful delete"
                    }
                },
                "security": [
                    {
                        "jwt": [
                        ]
                    }
                ],
                "operationId": "deleteScopeMapping",
                "summary": "Delete a rest mapping from the directory",
                "x-keep-version": 1
            }
        },
        "/schemas": {
            "summary": "KeepDbConfig objects for one NSF",
            "description": "Checks for JSON resources following the naming scheme",
            "get": {
                "tags": [
                    "schema"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/RestConfigShort"
                                    }
                                },
                                "examples": {
                                    "simpleRestconfigsResponse": {
                                        "value": [
                                            {
                                                "apiName": "restcon2",
                                                "comment": "REST API configuration restcon2",
                                                "prohibitRefresh": false
                                            },
                                            {
                                                "apiName": "restcon",
                                                "comment": "REST API configuration restcon",
                                                "prohibitRefresh": false
                                            }
                                        ]
                                    }
                                }
                            }
                        },
                        "description": "List of configs"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    },
                    "501": {
                        "$ref": "#/components/responses/501"
                    }
                },
                "security": [
                    {
                        "jwt": [
                        ]
                    }
                ],
                "operationId": "fetchSchemas",
                "summary": "list of all REST configs in a given NSF",
                "description": "Used to pick the config to activate",
                "x-keep-version": 1
            },
            "parameters": [
                {
                    "name": "nsfPath",
                    "description": "Path in internet style relative to the Domino data directory.\ne.g. \"demo.nsf\" or \"sales/england/crm_gb.nsf\"",
                    "schema": {
                        "type": "string"
                    },
                    "in": "query",
                    "required": true
                }
            ]
        },
        "/schema": {
            "summary": "DBConfig objects for one NSF",
            "description": "Checks for JSON resources following the naming scheme. The json file should be stored in Resources->Files in the database. ",
            "get": {
                "tags": [
                    "schema"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/KeepDatabase"
                                },
                                "examples": {
                                    "schemaSimple": {
                                        "value": {
                                            "description": "test",
                                            "nsfPath": "Demo.nsf",
                                            "schemaName": "testschema",
                                            "icon": "Base64 stuff, preferably SVG",
                                            "iconName": "beach",
                                            "formulaEngine": "domino",
                                            "isActive": true,
                                            "agents": [
                                                {
                                                    "name": "SalesforceProcessing",
                                                    "alias": [
                                                    ],
                                                    "unid": "56D541DC5BCAF1384825843500477872"
                                                }
                                            ],
                                            "views": [
                                                {
                                                    "name": "Customers",
                                                    "alias": [
                                                        "Customers"
                                                    ],
                                                    "unid": "86C72C1BF64B6DF04825847100373215"
                                                },
                                                {
                                                    "name": "($All)",
                                                    "alias": [
                                                        "($All)"
                                                    ],
                                                    "unid": "0E35D520A1EBBB5B48258435003E8284"
                                                }
                                            ],
                                            "forms": [
                                                {
                                                    "formName": "SampleForm",
                                                    "formModes": [
                                                        {
                                                            "modeName": "default",
                                                            "computeWithForm": false,
                                                            "readAccessFormula": {
                                                                "formulaType": "domino",
                                                                "formula": "@True"
                                                            },
                                                            "writeAccessFormula": {
                                                                "formulaType": "domino",
                                                                "formula": "@True"
                                                            },
                                                            "deleteAccessFormula": {
                                                                "formulaType": "domino",
                                                                "formula": "@False"
                                                            },
                                                            "fields": [
                                                                {
                                                                    "name": "Age",
                                                                    "isMultiValue": true,
                                                                    "writeOnly": false,
                                                                    "readOnly": false,
                                                                    "format": "float",
                                                                    "type": "array"
                                                                },
                                                                {
                                                                    "name": "Name",
                                                                    "isMultiValue": true,
                                                                    "writeOnly": false,
                                                                    "readOnly": false,
                                                                    "format": "string",
                                                                    "type": "array"
                                                                },
                                                                {
                                                                    "name": "Shape",
                                                                    "isMultiValue": false,
                                                                    "writeOnly": false,
                                                                    "readOnly": false,
                                                                    "format": "string",
                                                                    "type": "string"
                                                                },
                                                                {
                                                                    "name": "Color",
                                                                    "isMultiValue": false,
                                                                    "writeOnly": false,
                                                                    "readOnly": false,
                                                                    "format": "string",
                                                                    "type": "string"
                                                                },
                                                                {
                                                                    "name": "Taste",
                                                                    "isMultiValue": false,
                                                                    "writeOnly": false,
                                                                    "readOnly": false,
                                                                    "format": "string",
                                                                    "type": "string"
                                                                }
                                                            ],
                                                            "strictInput": true
                                                        }
                                                    ]
                                                }
                                            ],
                                            "dqlAccess": true,
                                            "allowCode": true,
                                            "openAccess": true,
                                            "requireRevisionToUpdate": false,
                                            "allowDecryption": true,
                                            "owners": [
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": "List of configs"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    },
                    "501": {
                        "$ref": "#/components/responses/501"
                    }
                },
                "security": [
                    {
                        "jwt": [
                        ]
                    }
                ],
                "operationId": "getSchema",
                "summary": "Get a rest configuration from the database",
                "x-keep-version": 1
            },
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/KeepDatabase"
                            },
                            "examples": {
                                "restconfigSimpleRequest": {
                                    "value": {
                                        "schemaName": "demoapi",
                                        "description": "Demo database",
                                        "nsfPath": "Demo.nsf",
                                        "icon": "Base64 stuff, preferably SVG",
                                        "iconName": "mountain",
                                        "isActive": true,
                                        "requireRevisionToUpdate": false,
                                        "allowDecryption": true,
                                        "formulaEngine": "domino",
                                        "openAccess": true,
                                        "allowCode": true,
                                        "dqlAccess": true,
                                        "dqlFormula": {
                                            "formulaType": "domino",
                                            "formula": "@True"
                                        },
                                        "views": [
                                            {
                                                "name": "Customers",
                                                "alias": [
                                                    "Customers"
                                                ],
                                                "unid": "86C72C1BF64B6DF04825847100373215"
                                            },
                                            {
                                                "name": "MarketingInfo",
                                                "alias": [
                                                    "MarketingInfo"
                                                ],
                                                "unid": "10EA9EC66EA748BC4825851100420810"
                                            },
                                            {
                                                "name": "ChineseCustomers",
                                                "alias": [
                                                    "ChineseCustomers"
                                                ],
                                                "unid": "3FE5CD63E179F21600258680006DB25B"
                                            },
                                            {
                                                "name": "($All)",
                                                "alias": [
                                                    "($All)"
                                                ],
                                                "unid": "0E35D520A1EBBB5B48258435003E8284"
                                            },
                                            {
                                                "name": "Samples",
                                                "alias": [
                                                    "Samples"
                                                ],
                                                "unid": "5318911D496571410025860D00544B17"
                                            }
                                        ],
                                        "agents": [
                                        ],
                                        "forms": [
                                            {
                                                "formName": "Customer",
                                                "formModes": [
                                                    {
                                                        "modeName": "default",
                                                        "fields": [
                                                            {
                                                                "name": "Form",
                                                                "type": "string",
                                                                "readOnly": true
                                                            },
                                                            {
                                                                "name": "Pet",
                                                                "type": "string"
                                                            },
                                                            {
                                                                "name": "color",
                                                                "type": "string"
                                                            },
                                                            {
                                                                "name": "email",
                                                                "type": "string"
                                                            },
                                                            {
                                                                "name": "employee_count",
                                                                "type": "integer"
                                                            },
                                                            {
                                                                "name": "first_name",
                                                                "type": "string"
                                                            },
                                                            {
                                                                "name": "last_name",
                                                                "type": "string"
                                                            },
                                                            {
                                                                "name": "hobbies",
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            {
                                                                "name": "Owner",
                                                                "type": "string",
                                                                "format": "authors"
                                                            },
                                                            {
                                                                "name": "Body",
                                                                "type": "object",
                                                                "format": "richtext"
                                                            }
                                                        ],
                                                        "required": [
                                                            "Form",
                                                            "email",
                                                            "first_name"
                                                        ],
                                                        "readAccessFormula": {
                                                            "formulaType": "domino",
                                                            "formula": "@True"
                                                        },
                                                        "writeAccessFormula": {
                                                            "formulaType": "domino",
                                                            "formula": "@True"
                                                        },
                                                        "deleteAccessFormula": {
                                                            "formulaType": "domino",
                                                            "formula": "@False"
                                                        },
                                                        "computeWithForm": false
                                                    },
                                                    {
                                                        "modeName": "dql",
                                                        "fields": [
                                                            {
                                                                "name": "Form",
                                                                "type": "string",
                                                                "readOnly": true
                                                            },
                                                            {
                                                                "name": "Pet",
                                                                "type": "string"
                                                            },
                                                            {
                                                                "name": "color",
                                                                "type": "string"
                                                            },
                                                            {
                                                                "name": "email",
                                                                "type": "string"
                                                            },
                                                            {
                                                                "name": "first_name",
                                                                "type": "string"
                                                            },
                                                            {
                                                                "name": "last_name",
                                                                "type": "string"
                                                            },
                                                            {
                                                                "name": "hobbies",
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "string"
                                                                }
                                                            }
                                                        ],
                                                        "required": [
                                                            "Form",
                                                            "email",
                                                            "first_name"
                                                        ],
                                                        "readAccessFormula": {
                                                            "formulaType": "domino",
                                                            "formula": "@True"
                                                        },
                                                        "writeAccessFormula": {
                                                            "formulaType": "domino",
                                                            "formula": "@True"
                                                        },
                                                        "deleteAccessFormula": {
                                                            "formulaType": "domino",
                                                            "formula": "@False"
                                                        },
                                                        "computeWithForm": false
                                                    }
                                                ]
                                            },
                                            {
                                                "formName": "Marketing",
                                                "formModes": [
                                                    {
                                                        "modeName": "default",
                                                        "fields": [
                                                            {
                                                                "name": "Form",
                                                                "type": "string",
                                                                "readOnly": true
                                                            },
                                                            {
                                                                "name": "Assets",
                                                                "type": "string"
                                                            },
                                                            {
                                                                "name": "Country",
                                                                "type": "string"
                                                            },
                                                            {
                                                                "name": "FullName",
                                                                "type": "string"
                                                            },
                                                            {
                                                                "name": "Industry",
                                                                "type": "string"
                                                            },
                                                            {
                                                                "name": "Newsletter",
                                                                "type": "string"
                                                            },
                                                            {
                                                                "name": "email",
                                                                "type": "string"
                                                            },
                                                            {
                                                                "name": "gender",
                                                                "type": "string",
                                                                "writeOnly": true
                                                            }
                                                        ],
                                                        "readAccessFormula": {
                                                            "formulaType": "domino",
                                                            "formula": "@True"
                                                        },
                                                        "writeAccessFormula": {
                                                            "formulaType": "domino",
                                                            "formula": "@True"
                                                        },
                                                        "deleteAccessFormula": {
                                                            "formulaType": "domino",
                                                            "formula": "@False"
                                                        },
                                                        "computeWithForm": false
                                                    }
                                                ]
                                            },
                                            {
                                                "formName": "SampleForm",
                                                "formModes": [
                                                    {
                                                        "modeName": "default",
                                                        "fields": [
                                                            {
                                                                "name": "Color",
                                                                "type": "string"
                                                            },
                                                            {
                                                                "name": "Form",
                                                                "type": "string"
                                                            },
                                                            {
                                                                "name": "Shape",
                                                                "type": "string"
                                                            },
                                                            {
                                                                "name": "Taste",
                                                                "type": "string"
                                                            }
                                                        ],
                                                        "readAccessFormula": {
                                                            "formulaType": "domino",
                                                            "formula": "@True"
                                                        },
                                                        "writeAccessFormula": {
                                                            "formulaType": "domino",
                                                            "formula": "@True"
                                                        },
                                                        "deleteAccessFormula": {
                                                            "formulaType": "domino",
                                                            "formula": "@False"
                                                        },
                                                        "computeWithForm": false
                                                    },
                                                    {
                                                        "modeName": "odata",
                                                        "fields": [
                                                            {
                                                                "name": "Color",
                                                                "type": "string"
                                                            },
                                                            {
                                                                "name": "Form",
                                                                "type": "string"
                                                            },
                                                            {
                                                                "name": "Shape",
                                                                "type": "string"
                                                            },
                                                            {
                                                                "name": "Taste",
                                                                "type": "string"
                                                            }
                                                        ],
                                                        "readAccessFormula": {
                                                            "formulaType": "domino",
                                                            "formula": "@True"
                                                        },
                                                        "writeAccessFormula": {
                                                            "formulaType": "domino",
                                                            "formula": "@True"
                                                        },
                                                        "deleteAccessFormula": {
                                                            "formulaType": "domino",
                                                            "formula": "@False"
                                                        },
                                                        "computeWithForm": false
                                                    }
                                                ]
                                            },
                                            {
                                                "formName": "TestForm",
                                                "formModes": [
                                                    {
                                                        "modeName": "default",
                                                        "fields": [
                                                            {
                                                                "name": "colour",
                                                                "type": "string",
                                                                "readOnly": true
                                                            },
                                                            {
                                                                "name": "Form",
                                                                "type": "string",
                                                                "readOnly": true
                                                            },
                                                            {
                                                                "name": "name",
                                                                "type": "string"
                                                            }
                                                        ],
                                                        "readAccessFormula": {
                                                            "formulaType": "domino",
                                                            "formula": "@True"
                                                        },
                                                        "writeAccessFormula": {
                                                            "formulaType": "domino",
                                                            "formula": "@True"
                                                        },
                                                        "deleteAccessFormula": {
                                                            "formulaType": "domino",
                                                            "formula": "@False"
                                                        },
                                                        "computeWithForm": false
                                                    }
                                                ]
                                            }
                                        ],
                                        "formAliases": {
                                            "Entry": "Entry",
                                            "SampleEntry": "SampleEntry",
                                            "Customer": "Customer",
                                            "IdPConfig": "IdP Configuration",
                                            "OdataSampleForm": "OdataSampleForm",
                                            "TestForm": "TestForm"
                                        }
                                    }
                                },
                                "simpleRequestWithFieldGroup": {
                                    "value": {
                                        "schemaName": "demofieldGroup",
                                        "description": "Demo database",
                                        "nsfPath": "Demo.nsf",
                                        "icon": "Base64 stuff, preferably SVG",
                                        "iconName": "mountain",
                                        "isActive": true,
                                        "requireRevisionToUpdate": false,
                                        "allowDecryption": true,
                                        "formulaEngine": "domino",
                                        "owners": [
                                        ],
                                        "openAccess": true,
                                        "allowCode": true,
                                        "dqlAccess": true,
                                        "dqlFormula": {
                                            "formulaType": "domino",
                                            "formula": "@True"
                                        },
                                        "views": [
                                            {
                                                "name": "Customers",
                                                "alias": [
                                                    "Customers"
                                                ],
                                                "unid": "86C72C1BF64B6DF04825847100373215"
                                            },
                                            {
                                                "name": "($All)",
                                                "alias": [
                                                    "($All)"
                                                ],
                                                "unid": "0E35D520A1EBBB5B48258435003E8284"
                                            }
                                        ],
                                        "agents": [
                                        ],
                                        "forms": [
                                            {
                                                "formName": "SampleForm",
                                                "formModes": [
                                                    {
                                                        "modeName": "default",
                                                        "fields": [
                                                            {
                                                                "name": "Form",
                                                                "type": "string",
                                                                "readOnly": true
                                                            },
                                                            {
                                                                "name": "Pet",
                                                                "type": "string"
                                                            },
                                                            {
                                                                "name": "Color",
                                                                "type": "string"
                                                            },
                                                            {
                                                                "name": "Shape",
                                                                "type": "string"
                                                            },
                                                            {
                                                                "name": "Taste",
                                                                "type": "string"
                                                            },
                                                            {
                                                                "name": "Age",
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "integer"
                                                                },
                                                                "fieldGroup": "person"
                                                            },
                                                            {
                                                                "name": "Name",
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "fieldGroup": "person"
                                                            }
                                                        ],
                                                        "required": [
                                                            "Form"
                                                        ],
                                                        "readAccessFormula": {
                                                            "formulaType": "domino",
                                                            "formula": "@True"
                                                        },
                                                        "writeAccessFormula": {
                                                            "formulaType": "domino",
                                                            "formula": "@True"
                                                        },
                                                        "deleteAccessFormula": {
                                                            "formulaType": "domino",
                                                            "formula": "@False"
                                                        },
                                                        "computeWithForm": false
                                                    },
                                                    {
                                                        "modeName": "dql",
                                                        "fields": [
                                                            {
                                                                "name": "Form",
                                                                "type": "string",
                                                                "readOnly": true
                                                            },
                                                            {
                                                                "name": "Color",
                                                                "type": "string"
                                                            }
                                                        ],
                                                        "required": [
                                                            "Form"
                                                        ],
                                                        "readAccessFormula": {
                                                            "formulaType": "domino",
                                                            "formula": "@True"
                                                        },
                                                        "writeAccessFormula": {
                                                            "formulaType": "domino",
                                                            "formula": "@True"
                                                        },
                                                        "deleteAccessFormula": {
                                                            "formulaType": "domino",
                                                            "formula": "@False"
                                                        },
                                                        "computeWithForm": false
                                                    }
                                                ]
                                            }
                                        ],
                                        "formAliases": {
                                            "Entry": "Entry",
                                            "SampleEntry": "SampleEntry",
                                            "Customer": "Customer",
                                            "IdPConfig": "IdP Configuration",
                                            "OdataSampleForm": "OdataSampleForm",
                                            "TestForm": "TestForm"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "schema"
                ],
                "parameters": [
                    {
                        "name": "prohibitRefresh",
                        "description": "default = true,\nWhen set, schema written to the database design are flagged so the\nDomino design task won't replace/delete the schema",
                        "schema": {
                            "type": "boolean"
                        },
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/KeepDatabase"
                                },
                                "examples": {
                                    "restconfigSimpleResponse": {
                                        "value": {
                                            "schemaName": "demoapi",
                                            "description": "Demo database",
                                            "nsfPath": "Demo.nsf",
                                            "icon": "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjxzdmcgdmVyc2lvbj0iMS4xIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB4PSIwcHgiIHk9IjBweCIgdmlld0JveD0iMCAwIDUxMiA1MTIiIHN0eWxlPSJlbmFibGUtYmFja2dyb3VuZDpuZXcgMCAwIDUxMiA1MTI7IiB4bWw6c3BhY2U9InByZXNlcnZlIj4NCjxwb2x5Z29uIHN0eWxlPSJmaWxsOiNERTRDM0M7IiBwb2ludHM9IjMwOC45NjYsMjYuNDgzIDI1NiwwIDI1Niw1Mi45NjYgIi8+DQo8cmVjdCB4PSIyNDcuMTcyIiBzdHlsZT0iZmlsbDojQ0ZDRkNGOyIgd2lkdGg9IjE3LjY1NSIgaGVpZ2h0PSIxMzIuNDE0Ii8+DQo8cG9seWdvbiBzdHlsZT0iZmlsbDojODdDRUQ5OyIgcG9pbnRzPSI0MTQuODk3LDE5NC4yMDcgMzkzLjU4NywyMjQuMDM1IDM0NC4yNzYsMTUwLjA2OSAzMTcuNzkzLDE5NC4yMDcgMjU2LDk3LjEwMyAxOTQuNjc1LDE4NC43MTcgMTY3LjcyNCwxNTAuMDY5IDAsMzcwLjc1OSAwLDUxMiA1MTIsNTEyIDUxMiwzNzkuNTg2ICIvPg0KPHBhdGggc3R5bGU9ImZpbGw6IzcxQzREMTsiIGQ9Ik00NTIuNTM3LDI2Ni4wNjNDMzE3LjU4MSw0MDAuMTAyLDk3LjE0OCw0NjAuMTU2LDAsNDgyLjI0MlY1MTJoNTEyVjM3OS41ODZMNDUyLjUzNywyNjYuMDYzeiIvPg0KPHBvbHlnb24gc3R5bGU9ImZpbGw6IzcyOUUxQzsiIHBvaW50cz0iMjI5LjUxNyw1MTIgNDE0Ljg5NywzNTMuMTAzIDQ1OS4wMzQsMzg4LjQxNCA1MTIsMzM1LjQ0OCA1MTIsNTEyICIvPg0KPHBvbHlnb24gc3R5bGU9ImZpbGw6IzhCQjM0MDsiIHBvaW50cz0iMjU2LDQyMy43MjQgMjMxLjExNSw0NDguNjA5IDEzNi4yNzEsMzM0LjkwMSAxMTIuMDMxLDM2NS4yNTkgMjYuNDgzLDI2NC44MjggMCwzMDAuMTM4IDAsNTEyIDMyNi42MjEsNTEyICIvPg0KPHJlY3QgeD0iNTIuOTY2IiB5PSI0NDEuMzc5IiBzdHlsZT0iZmlsbDojNzU0NjJFOyIgd2lkdGg9IjE3LjY1NSIgaGVpZ2h0PSIzNS4zMSIgLz4NCjxwb2x5Z29uIHN0eWxlPSJmaWxsOiM3MjlFMUM7IiBwb2ludHM9IjM1LjMxLDQ0MS4zNzkgODguMjc2LDQ0MS4zNzkgNjEuNzkzLDM2MS45MzEgIiAvPg0KPHBvbHlnb24gc3R5bGU9ImZpbGw6IzcyOUUxQzsiIHBvaW50cz0iOTcuMTAzLDUxMiAxNTAuMDY5LDUxMiAxMjMuNTg2LDQzMi41NTIgIiAvPg0KPHJlY3QgeD0iNDUwLjIwNyIgeT0iNDU5LjAzNCIgc3R5bGU9ImZpbGw6Izc1NDYyRTsiIHdpZHRoPSIxNy42NTUiIGhlaWdodD0iNDQuMTM4Ii8+DQo8cGF0aCBzdHlsZT0iZmlsbDojNzFDNEQxOyIgZD0iTTI3OC44NzIsMjU0Ljg3bC0zMS43LTM4LjA0N2wtMzEuNywzOC4wNDdjLTMuMTE2LDMuNzQzLTguNjg2LDQuMjU1LTEyLjQyOSwxLjEzOSBDMjAzLjAzNCwyNTYsMjAzLjAzNCwyNTYsMjAzLjAzNCwyNTZsMCwwYy0zLjc0My0zLjExNi00LjI1NS04LjY4Ni0xLjEzOS0xMi40MjljMCwwLDAsMCwwLjAwOS0wLjAwOWwzOC40NzktNDYuMTc3IGMzLjExNi0zLjc1Miw4LjY4Ni00LjI2NCwxMi40MjktMS4xNDhjMC40MTUsMC4zNDQsMC44MDMsMC43MzMsMS4xNDgsMS4xNDhsMzguNDc5LDQ2LjE3N2MzLjEyNSwzLjc0MywyLjYyMiw5LjMxMy0xLjEyMSwxMi40MjkgQzI5MS4zMSwyNTYsMjkxLjMxLDI1NiwyOTEuMzEsMjU2bDAsMEMyODcuNTY3LDI1OS4xMjUsMjgxLjk5NywyNTguNjIyLDI3OC44NzIsMjU0Ljg3TDI3OC44NzIsMjU0Ljg3eiIvPg0KPHJlY3QgeD0iMTY3LjcyNCIgeT0iMzg4LjQxNCIgc3R5bGU9ImZpbGw6Izc1NDYyRTsiIHdpZHRoPSIxNy42NTUiIGhlaWdodD0iMzUuMzEiLz4NCjxwb2x5Z29uIHN0eWxlPSJmaWxsOiM3MjlFMUM7IiBwb2ludHM9IjE1MC4wNjksMzg4LjQxNCAyMDMuMDM0LDM4OC40MTQgMTc2LjU1MiwzMDguOTY2ICIvPg0KPHJlY3QgeD0iMzcwLjc1OSIgeT0iNDMyLjU1MiIgc3R5bGU9ImZpbGw6Izc1NDYyRTsiIHdpZHRoPSIxNy42NTUiIGhlaWdodD0iMzUuMzEiLz4NCjxwb2x5Z29uIHN0eWxlPSJmaWxsOiM4OEIzMzc7IiBwb2ludHM9IjM1My4xMDMsNDMyLjU1MiA0MDYuMDY5LDQzMi41NTIgMzc5LjU4NiwzNTMuMTAzICIgLz4NCjxwYXRoIHN0eWxlPSJmaWxsOiM3MUM0RDE7IiBkPSJNMjI2LjIxNiwyMzUuMDM0Yy0yLjcxOSwwLTUuMjg4LTEuMjQ1LTYuOTY1LTMuMzlsLTU1LjE3Mi03MC42MjEgYy0zLjAwMS0zLjg0LTIuMzIyLTkuMzkzLDEuNTE4LTEyLjM5NGMzLjg0LTMuMDAxLDkuMzkzLTIuMzIyLDEyLjM5NCwxLjUxOGw1NS4xNzIsNzAuNjIxYzMuMDAxLDMuODQsMi4zMjIsOS4zOTMtMS41MTgsMTIuMzk0IEMyMzAuMSwyMzQuMzcyLDIyOC4xODQsMjM1LjAzNCwyMjYuMjE2LDIzNS4wMzR6IiAvPg0KPHBhdGggc3R5bGU9ImZpbGw6IzcxQzREMTsiIGQ9Ik0zNzYuNjY0LDI1NS44NDFjLTQuODczLDAtOC44MjgtMy45NTUtOC44MTktOC44MzZjMC0xLjkzMywwLjYzNi0zLjgxNCwxLjgxLTUuMzVsMzYuMDE3LTQ4LjM5MyBjMi45NTctMy44NzUsOC41MDEtNC42MTcsMTIuMzc2LTEuNjZjMy44NzUsMi45NTcsNC42MTcsOC41MDEsMS42NiwxMi4zNzZsLTM2LjAxNyw0OC4zOTMgQzM4Mi4wMjMsMjU0LjU2MSwzNzkuNDE4LDI1NS44NDEsMzc2LjY2NCwyNTUuODQxeiIgLz4NCjxwb2x5Z29uIHN0eWxlPSJmaWxsOiM4OEIzMzc7IiBwb2ludHM9IjQzMi41NTIsNDY3Ljg2MiA0ODUuNTE3LDQ2Ny44NjIgNDU5LjAzNCwzODguNDE0ICIgLz4NCjxyZWN0IHg9IjUyLjk2NiIgeT0iNDQxLjM3OSIgc3R5bGU9ImZpbGw6IzVFMzgyNTsiIHdpZHRoPSIxNy42NTUiIGhlaWdodD0iOC44MjgiIC8+DQo8cmVjdCB4PSIxNjcuNzI0IiB5PSIzODguNDE0IiBzdHlsZT0iZmlsbDojNUUzODI1OyIgd2lkdGg9IjE3LjY1NSIgaGVpZ2h0PSI4LjgyOCIgLz4NCjxyZWN0IHg9IjM3MC43NTkiIHk9IjQzMi41NTIiIHN0eWxlPSJmaWxsOiM1RTM4MjU7IiB3aWR0aD0iMTcuNjU1IiBoZWlnaHQ9IjguODI4IiAvPg0KPHJlY3QgeD0iNDUwLjIwNyIgeT0iNDY3Ljg2MiIgc3R5bGU9ImZpbGw6IzVFMzgyNTsiIHdpZHRoPSIxNy42NTUiIGhlaWdodD0iOC44MjgiIC8+DQo8L3N2Zz4NCg==",
                                            "iconName": "mountain",
                                            "isActive": true,
                                            "requireRevisionToUpdate": false,
                                            "allowDecryption": true,
                                            "formulaEngine": "domino",
                                            "openAccess": true,
                                            "allowCode": true,
                                            "dqlAccess": true,
                                            "dqlFormula": {
                                                "formulaType": "domino",
                                                "formula": "@True"
                                            },
                                            "views": [
                                                {
                                                    "name": "Customers",
                                                    "alias": [
                                                        "Customers"
                                                    ],
                                                    "unid": "86C72C1BF64B6DF04825847100373215"
                                                },
                                                {
                                                    "name": "MarketingInfo",
                                                    "alias": [
                                                        "MarketingInfo"
                                                    ],
                                                    "unid": "10EA9EC66EA748BC4825851100420810"
                                                },
                                                {
                                                    "name": "ChineseCustomers",
                                                    "alias": [
                                                        "ChineseCustomers"
                                                    ],
                                                    "unid": "3FE5CD63E179F21600258680006DB25B"
                                                },
                                                {
                                                    "name": "($All)",
                                                    "alias": [
                                                        "($All)"
                                                    ],
                                                    "unid": "0E35D520A1EBBB5B48258435003E8284"
                                                },
                                                {
                                                    "name": "Samples",
                                                    "alias": [
                                                        "Samples"
                                                    ],
                                                    "unid": "5318911D496571410025860D00544B17"
                                                }
                                            ],
                                            "agents": [
                                            ],
                                            "forms": [
                                                {
                                                    "formName": "Customer",
                                                    "formModes": [
                                                        {
                                                            "modeName": "default",
                                                            "fields": [
                                                                {
                                                                    "name": "Form",
                                                                    "type": "string",
                                                                    "readOnly": true
                                                                },
                                                                {
                                                                    "name": "Pet",
                                                                    "type": "string"
                                                                },
                                                                {
                                                                    "name": "color",
                                                                    "type": "string"
                                                                },
                                                                {
                                                                    "name": "email",
                                                                    "type": "string"
                                                                },
                                                                {
                                                                    "name": "employee_count",
                                                                    "type": "integer"
                                                                },
                                                                {
                                                                    "name": "first_name",
                                                                    "type": "string"
                                                                },
                                                                {
                                                                    "name": "last_name",
                                                                    "type": "string"
                                                                },
                                                                {
                                                                    "name": "hobbies",
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                {
                                                                    "name": "Owner",
                                                                    "type": "string",
                                                                    "format": "authors"
                                                                },
                                                                {
                                                                    "name": "Body",
                                                                    "type": "object",
                                                                    "format": "richtext"
                                                                }
                                                            ],
                                                            "required": [
                                                                "Form",
                                                                "email",
                                                                "first_name"
                                                            ],
                                                            "readAccessFormula": {
                                                                "formulaType": "domino",
                                                                "formula": "@True"
                                                            },
                                                            "writeAccessFormula": {
                                                                "formulaType": "domino",
                                                                "formula": "@True"
                                                            },
                                                            "deleteAccessFormula": {
                                                                "formulaType": "domino",
                                                                "formula": "@False"
                                                            },
                                                            "computeWithForm": false
                                                        },
                                                        {
                                                            "modeName": "dql",
                                                            "fields": [
                                                                {
                                                                    "name": "Form",
                                                                    "type": "string",
                                                                    "readOnly": true
                                                                },
                                                                {
                                                                    "name": "Pet",
                                                                    "type": "string"
                                                                },
                                                                {
                                                                    "name": "color",
                                                                    "type": "string"
                                                                },
                                                                {
                                                                    "name": "email",
                                                                    "type": "string"
                                                                },
                                                                {
                                                                    "name": "first_name",
                                                                    "type": "string"
                                                                },
                                                                {
                                                                    "name": "last_name",
                                                                    "type": "string"
                                                                },
                                                                {
                                                                    "name": "hobbies",
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "string"
                                                                    }
                                                                }
                                                            ],
                                                            "required": [
                                                                "Form",
                                                                "email",
                                                                "first_name"
                                                            ],
                                                            "readAccessFormula": {
                                                                "formulaType": "domino",
                                                                "formula": "@True"
                                                            },
                                                            "writeAccessFormula": {
                                                                "formulaType": "domino",
                                                                "formula": "@True"
                                                            },
                                                            "deleteAccessFormula": {
                                                                "formulaType": "domino",
                                                                "formula": "@False"
                                                            },
                                                            "computeWithForm": false
                                                        }
                                                    ]
                                                },
                                                {
                                                    "formName": "Marketing",
                                                    "formModes": [
                                                        {
                                                            "modeName": "default",
                                                            "fields": [
                                                                {
                                                                    "name": "Form",
                                                                    "type": "string",
                                                                    "readOnly": true
                                                                },
                                                                {
                                                                    "name": "Assets",
                                                                    "type": "string"
                                                                },
                                                                {
                                                                    "name": "Country",
                                                                    "type": "string"
                                                                },
                                                                {
                                                                    "name": "FullName",
                                                                    "type": "string"
                                                                },
                                                                {
                                                                    "name": "Industry",
                                                                    "type": "string"
                                                                },
                                                                {
                                                                    "name": "Newsletter",
                                                                    "type": "string"
                                                                },
                                                                {
                                                                    "name": "email",
                                                                    "type": "string"
                                                                },
                                                                {
                                                                    "name": "gender",
                                                                    "type": "string",
                                                                    "writeOnly": true
                                                                }
                                                            ],
                                                            "readAccessFormula": {
                                                                "formulaType": "domino",
                                                                "formula": "@True"
                                                            },
                                                            "writeAccessFormula": {
                                                                "formulaType": "domino",
                                                                "formula": "@True"
                                                            },
                                                            "deleteAccessFormula": {
                                                                "formulaType": "domino",
                                                                "formula": "@False"
                                                            },
                                                            "computeWithForm": false
                                                        }
                                                    ]
                                                },
                                                {
                                                    "formName": "SampleForm",
                                                    "formModes": [
                                                        {
                                                            "modeName": "default",
                                                            "fields": [
                                                                {
                                                                    "name": "Color",
                                                                    "type": "string"
                                                                },
                                                                {
                                                                    "name": "Form",
                                                                    "type": "string"
                                                                },
                                                                {
                                                                    "name": "Shape",
                                                                    "type": "string"
                                                                },
                                                                {
                                                                    "name": "Taste",
                                                                    "type": "string"
                                                                }
                                                            ],
                                                            "readAccessFormula": {
                                                                "formulaType": "domino",
                                                                "formula": "@True"
                                                            },
                                                            "writeAccessFormula": {
                                                                "formulaType": "domino",
                                                                "formula": "@True"
                                                            },
                                                            "deleteAccessFormula": {
                                                                "formulaType": "domino",
                                                                "formula": "@False"
                                                            },
                                                            "computeWithForm": false
                                                        },
                                                        {
                                                            "modeName": "odata",
                                                            "fields": [
                                                                {
                                                                    "name": "Color",
                                                                    "type": "string"
                                                                },
                                                                {
                                                                    "name": "Form",
                                                                    "type": "string"
                                                                },
                                                                {
                                                                    "name": "Shape",
                                                                    "type": "string"
                                                                },
                                                                {
                                                                    "name": "Taste",
                                                                    "type": "string"
                                                                }
                                                            ],
                                                            "readAccessFormula": {
                                                                "formulaType": "domino",
                                                                "formula": "@True"
                                                            },
                                                            "writeAccessFormula": {
                                                                "formulaType": "domino",
                                                                "formula": "@True"
                                                            },
                                                            "deleteAccessFormula": {
                                                                "formulaType": "domino",
                                                                "formula": "@False"
                                                            },
                                                            "computeWithForm": false
                                                        }
                                                    ]
                                                },
                                                {
                                                    "formName": "TestForm",
                                                    "formModes": [
                                                        {
                                                            "modeName": "default",
                                                            "fields": [
                                                                {
                                                                    "name": "colour",
                                                                    "type": "string",
                                                                    "readOnly": true
                                                                },
                                                                {
                                                                    "name": "Form",
                                                                    "type": "string",
                                                                    "readOnly": true
                                                                },
                                                                {
                                                                    "name": "name",
                                                                    "type": "string"
                                                                }
                                                            ],
                                                            "readAccessFormula": {
                                                                "formulaType": "domino",
                                                                "formula": "@True"
                                                            },
                                                            "writeAccessFormula": {
                                                                "formulaType": "domino",
                                                                "formula": "@True"
                                                            },
                                                            "deleteAccessFormula": {
                                                                "formulaType": "domino",
                                                                "formula": "@False"
                                                            },
                                                            "computeWithForm": false
                                                        }
                                                    ]
                                                }
                                            ],
                                            "formAliases": {
                                                "Entry": "Entry",
                                                "SampleEntry": "SampleEntry",
                                                "Customer": "Customer",
                                                "IdPConfig": "IdP Configuration",
                                                "OdataSampleForm": "OdataSampleForm",
                                                "TestForm": "TestForm"
                                            },
                                            "@unid": "6334EDA70A42ABB948258846002F115C"
                                        }
                                    },
                                    "simpleResponseWithFieldGroup": {
                                        "value": {
                                            "schemaName": "demofieldGroup",
                                            "description": "Demo database",
                                            "nsfPath": "Demo.nsf",
                                            "icon": "Base64 stuff, preferably SVG",
                                            "iconName": "mountain",
                                            "isActive": true,
                                            "requireRevisionToUpdate": false,
                                            "allowDecryption": true,
                                            "formulaEngine": "domino",
                                            "owners": [
                                            ],
                                            "openAccess": true,
                                            "allowCode": true,
                                            "dqlAccess": true,
                                            "dqlFormula": {
                                                "formulaType": "domino",
                                                "formula": "@True"
                                            },
                                            "views": [
                                                {
                                                    "name": "Customers",
                                                    "alias": [
                                                        "Customers"
                                                    ],
                                                    "unid": "86C72C1BF64B6DF04825847100373215"
                                                },
                                                {
                                                    "name": "($All)",
                                                    "alias": [
                                                        "($All)"
                                                    ],
                                                    "unid": "0E35D520A1EBBB5B48258435003E8284"
                                                }
                                            ],
                                            "agents": [
                                            ],
                                            "forms": [
                                                {
                                                    "formName": "SampleForm",
                                                    "formModes": [
                                                        {
                                                            "modeName": "default",
                                                            "fields": [
                                                                {
                                                                    "name": "Form",
                                                                    "type": "string",
                                                                    "readOnly": true
                                                                },
                                                                {
                                                                    "name": "Pet",
                                                                    "type": "string"
                                                                },
                                                                {
                                                                    "name": "Color",
                                                                    "type": "string"
                                                                },
                                                                {
                                                                    "name": "Shape",
                                                                    "type": "string"
                                                                },
                                                                {
                                                                    "name": "Taste",
                                                                    "type": "string"
                                                                },
                                                                {
                                                                    "name": "Age",
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "integer"
                                                                    },
                                                                    "fieldGroup": "person"
                                                                },
                                                                {
                                                                    "name": "Name",
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "fieldGroup": "person"
                                                                }
                                                            ],
                                                            "required": [
                                                                "Form"
                                                            ],
                                                            "readAccessFormula": {
                                                                "formulaType": "domino",
                                                                "formula": "@True"
                                                            },
                                                            "writeAccessFormula": {
                                                                "formulaType": "domino",
                                                                "formula": "@True"
                                                            },
                                                            "deleteAccessFormula": {
                                                                "formulaType": "domino",
                                                                "formula": "@False"
                                                            },
                                                            "computeWithForm": false
                                                        },
                                                        {
                                                            "modeName": "dql",
                                                            "fields": [
                                                                {
                                                                    "name": "Form",
                                                                    "type": "string",
                                                                    "readOnly": true
                                                                },
                                                                {
                                                                    "name": "Color",
                                                                    "type": "string"
                                                                }
                                                            ],
                                                            "required": [
                                                                "Form"
                                                            ],
                                                            "readAccessFormula": {
                                                                "formulaType": "domino",
                                                                "formula": "@True"
                                                            },
                                                            "writeAccessFormula": {
                                                                "formulaType": "domino",
                                                                "formula": "@True"
                                                            },
                                                            "deleteAccessFormula": {
                                                                "formulaType": "domino",
                                                                "formula": "@False"
                                                            },
                                                            "computeWithForm": false
                                                        }
                                                    ]
                                                }
                                            ],
                                            "formAliases": {
                                                "Entry": "Entry",
                                                "SampleEntry": "SampleEntry",
                                                "Customer": "Customer",
                                                "IdPConfig": "IdP Configuration",
                                                "OdataSampleForm": "OdataSampleForm",
                                                "TestForm": "TestForm"
                                            },
                                            "@unid": "1B86E97A90B038484825884600322DFE"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "successful creation"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    },
                    "501": {
                        "$ref": "#/components/responses/501"
                    }
                },
                "security": [
                    {
                        "jwt": [
                        ]
                    }
                ],
                "operationId": "createUpdateSchema",
                "summary": "Create a rest configuration for a database",
                "x-keep-version": 1
            },
            "delete": {
                "tags": [
                    "schema"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StatusMessage"
                                },
                                "examples": {
                                    "restconfigDeleteSimpleMessage": {
                                        "value": {
                                            "statusText": "OK",
                                            "status": 200,
                                            "message": "Deleted restcon from demo.nsf"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Successful delete"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "jwt": [
                        ]
                    }
                ],
                "operationId": "deleteSchema",
                "summary": "Delete a rest configuration from the database",
                "x-keep-version": 1
            },
            "parameters": [
                {
                    "name": "nsfPath",
                    "description": "Path in internet style relative to the Domino data directory.\ne.g. \"demo.nsf\" or \"sales/england/crm_gb.nsf\"",
                    "schema": {
                        "type": "string"
                    },
                    "in": "query",
                    "required": true
                },
                {
                    "name": "configName",
                    "description": "Internal name of the configuration e.g. \"default\", \"crm\"",
                    "schema": {
                        "type": "string"
                    },
                    "in": "query",
                    "required": true
                }
            ]
        },
        "/scopes": {
            "summary": "URL Endpoint for listing Keep-enabled scopes",
            "description": "A list of NSF that have at least one schema linked to a scope name and marked as active - starting point for exploring available data",
            "get": {
                "tags": [
                    "scope"
                ],
                "parameters": [
                    {
                        "name": "includeAll",
                        "description": "Include active and inactive scopes",
                        "schema": {
                            "type": "boolean"
                        },
                        "in": "query"
                    },
                    {
                        "name": "skipIcon",
                        "description": "Skips the icon data",
                        "schema": {
                            "type": "boolean"
                        },
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/KeepDBShort"
                                    }
                                },
                                "examples": {
                                    "KeepDatabases": {
                                        "value": [
                                            {
                                                "apiName": "keepconfig",
                                                "nsfPath": "KeepConfig.nsf",
                                                "description": "Configuration settings for the KEEP API, handle with care",
                                                "schemaName": "keepconfig"
                                            },
                                            {
                                                "apiName": "demofieldGroup",
                                                "nsfPath": "Demo.nsf",
                                                "description": "Demo database",
                                                "schemaName": "demofieldGroup"
                                            },
                                            {
                                                "apiName": "demoapi",
                                                "nsfPath": "Demo.nsf",
                                                "description": "Demo database",
                                                "schemaName": "demoapi"
                                            }
                                        ]
                                    }
                                }
                            }
                        },
                        "description": "JSON list of databases enabled for Keep access"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "jwt": [
                        ]
                    }
                ],
                "operationId": "fetchScopes",
                "summary": "Retrieve lists of databases available based on query",
                "description": "Get a list of databases enabled by the Domino Administrator for Keep access as JSON",
                "x-keep-version": 1
            }
        },
        "/scope": {
            "summary": "Retrieve a Keep Database configurations",
            "description": "Operation on a Keep configuration for a NSF.\nOptional: creation of a new empty database, update and delete. ",
            "get": {
                "tags": [
                    "scope"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/KeepDatabase"
                                },
                                "examples": {
                                    "database": {
                                        "value": {
                                            "apiName": "demoNofieldGroup",
                                            "nsfPath": "Demo.nsf",
                                            "iconName": "mountain",
                                            "icon": "Base64 stuff, preferably SVG",
                                            "description": "Demo database",
                                            "formulaEngine": "domino",
                                            "schemaName": "demoNofieldGroup",
                                            "active": true,
                                            "requireRevisionToUpdate": false,
                                            "allowDecryption": true,
                                            "cacheTimestamp": 1,
                                            "dqlAccess": true,
                                            "dqlFormula": {
                                                "formulaType": "domino",
                                                "formula": "@True"
                                            },
                                            "allowCode": true,
                                            "openAccess": true,
                                            "forms": [
                                                {
                                                    "formName": "SampleForm",
                                                    "alias": [
                                                    ],
                                                    "formModes": [
                                                        {
                                                            "modeName": "default",
                                                            "validationRules": [
                                                            ],
                                                            "readAccessFormula": {
                                                                "formulaType": "domino",
                                                                "formula": "@True"
                                                            },
                                                            "writeAccessFormula": {
                                                                "formulaType": "domino",
                                                                "formula": "@True"
                                                            },
                                                            "deleteAccessFormula": {
                                                                "formulaType": "domino",
                                                                "formula": "@False"
                                                            },
                                                            "computeWithForm": false,
                                                            "required": [
                                                                "Form"
                                                            ],
                                                            "fields": [
                                                                {
                                                                    "name": "Age",
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "integer",
                                                                        "minitems": -1,
                                                                        "uniqueitems": false,
                                                                        "minimum": 0,
                                                                        "maximum": 0,
                                                                        "exclusiveMinimum": -1,
                                                                        "readOnly": false,
                                                                        "writeOnly": false,
                                                                        "minLenght": -1,
                                                                        "maxLength": -1
                                                                    },
                                                                    "minitems": -1,
                                                                    "uniqueitems": false,
                                                                    "minimum": 0,
                                                                    "maximum": 0,
                                                                    "exclusiveMinimum": -1,
                                                                    "readOnly": false,
                                                                    "writeOnly": false,
                                                                    "minLenght": -1,
                                                                    "maxLength": -1
                                                                },
                                                                {
                                                                    "name": "Color",
                                                                    "type": "string",
                                                                    "minitems": -1,
                                                                    "uniqueitems": false,
                                                                    "minimum": 0,
                                                                    "maximum": 0,
                                                                    "exclusiveMinimum": -1,
                                                                    "readOnly": false,
                                                                    "writeOnly": false,
                                                                    "minLenght": -1,
                                                                    "maxLength": -1
                                                                },
                                                                {
                                                                    "name": "Form",
                                                                    "type": "string",
                                                                    "minitems": -1,
                                                                    "uniqueitems": false,
                                                                    "minimum": 0,
                                                                    "maximum": 0,
                                                                    "exclusiveMinimum": -1,
                                                                    "readOnly": true,
                                                                    "writeOnly": false,
                                                                    "minLenght": -1,
                                                                    "maxLength": -1
                                                                },
                                                                {
                                                                    "name": "Name",
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "string",
                                                                        "minitems": -1,
                                                                        "uniqueitems": false,
                                                                        "minimum": 0,
                                                                        "maximum": 0,
                                                                        "exclusiveMinimum": -1,
                                                                        "readOnly": false,
                                                                        "writeOnly": false,
                                                                        "minLenght": -1,
                                                                        "maxLength": -1
                                                                    },
                                                                    "minitems": -1,
                                                                    "uniqueitems": false,
                                                                    "minimum": 0,
                                                                    "maximum": 0,
                                                                    "exclusiveMinimum": -1,
                                                                    "readOnly": false,
                                                                    "writeOnly": false,
                                                                    "minLenght": -1,
                                                                    "maxLength": -1
                                                                },
                                                                {
                                                                    "name": "Pet",
                                                                    "type": "string",
                                                                    "minitems": -1,
                                                                    "uniqueitems": false,
                                                                    "minimum": 0,
                                                                    "maximum": 0,
                                                                    "exclusiveMinimum": -1,
                                                                    "readOnly": false,
                                                                    "writeOnly": false,
                                                                    "minLenght": -1,
                                                                    "maxLength": -1
                                                                },
                                                                {
                                                                    "name": "Shape",
                                                                    "type": "string",
                                                                    "minitems": -1,
                                                                    "uniqueitems": false,
                                                                    "minimum": 0,
                                                                    "maximum": 0,
                                                                    "exclusiveMinimum": -1,
                                                                    "readOnly": false,
                                                                    "writeOnly": false,
                                                                    "minLenght": -1,
                                                                    "maxLength": -1
                                                                },
                                                                {
                                                                    "name": "Taste",
                                                                    "type": "string",
                                                                    "minitems": -1,
                                                                    "uniqueitems": false,
                                                                    "minimum": 0,
                                                                    "maximum": 0,
                                                                    "exclusiveMinimum": -1,
                                                                    "readOnly": false,
                                                                    "writeOnly": false,
                                                                    "minLenght": -1,
                                                                    "maxLength": -1
                                                                }
                                                            ],
                                                            "readAccessFields": [
                                                                {
                                                                    "name": "Age",
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "integer",
                                                                        "minitems": -1,
                                                                        "uniqueitems": false,
                                                                        "minimum": 0,
                                                                        "maximum": 0,
                                                                        "exclusiveMinimum": -1,
                                                                        "readOnly": false,
                                                                        "writeOnly": false,
                                                                        "minLenght": -1,
                                                                        "maxLength": -1
                                                                    },
                                                                    "minitems": -1,
                                                                    "uniqueitems": false,
                                                                    "minimum": 0,
                                                                    "maximum": 0,
                                                                    "exclusiveMinimum": -1,
                                                                    "readOnly": false,
                                                                    "writeOnly": false,
                                                                    "minLenght": -1,
                                                                    "maxLength": -1
                                                                },
                                                                {
                                                                    "name": "Color",
                                                                    "type": "string",
                                                                    "minitems": -1,
                                                                    "uniqueitems": false,
                                                                    "minimum": 0,
                                                                    "maximum": 0,
                                                                    "exclusiveMinimum": -1,
                                                                    "readOnly": false,
                                                                    "writeOnly": false,
                                                                    "minLenght": -1,
                                                                    "maxLength": -1
                                                                },
                                                                {
                                                                    "name": "Form",
                                                                    "type": "string",
                                                                    "minitems": -1,
                                                                    "uniqueitems": false,
                                                                    "minimum": 0,
                                                                    "maximum": 0,
                                                                    "exclusiveMinimum": -1,
                                                                    "readOnly": true,
                                                                    "writeOnly": false,
                                                                    "minLenght": -1,
                                                                    "maxLength": -1
                                                                },
                                                                {
                                                                    "name": "Name",
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "string",
                                                                        "minitems": -1,
                                                                        "uniqueitems": false,
                                                                        "minimum": 0,
                                                                        "maximum": 0,
                                                                        "exclusiveMinimum": -1,
                                                                        "readOnly": false,
                                                                        "writeOnly": false,
                                                                        "minLenght": -1,
                                                                        "maxLength": -1
                                                                    },
                                                                    "minitems": -1,
                                                                    "uniqueitems": false,
                                                                    "minimum": 0,
                                                                    "maximum": 0,
                                                                    "exclusiveMinimum": -1,
                                                                    "readOnly": false,
                                                                    "writeOnly": false,
                                                                    "minLenght": -1,
                                                                    "maxLength": -1
                                                                },
                                                                {
                                                                    "name": "Pet",
                                                                    "type": "string",
                                                                    "minitems": -1,
                                                                    "uniqueitems": false,
                                                                    "minimum": 0,
                                                                    "maximum": 0,
                                                                    "exclusiveMinimum": -1,
                                                                    "readOnly": false,
                                                                    "writeOnly": false,
                                                                    "minLenght": -1,
                                                                    "maxLength": -1
                                                                },
                                                                {
                                                                    "name": "Shape",
                                                                    "type": "string",
                                                                    "minitems": -1,
                                                                    "uniqueitems": false,
                                                                    "minimum": 0,
                                                                    "maximum": 0,
                                                                    "exclusiveMinimum": -1,
                                                                    "readOnly": false,
                                                                    "writeOnly": false,
                                                                    "minLenght": -1,
                                                                    "maxLength": -1
                                                                },
                                                                {
                                                                    "name": "Taste",
                                                                    "type": "string",
                                                                    "minitems": -1,
                                                                    "uniqueitems": false,
                                                                    "minimum": 0,
                                                                    "maximum": 0,
                                                                    "exclusiveMinimum": -1,
                                                                    "readOnly": false,
                                                                    "writeOnly": false,
                                                                    "minLenght": -1,
                                                                    "maxLength": -1
                                                                }
                                                            ],
                                                            "writeAccessFields": [
                                                                {
                                                                    "name": "Age",
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "integer",
                                                                        "minitems": -1,
                                                                        "uniqueitems": false,
                                                                        "minimum": 0,
                                                                        "maximum": 0,
                                                                        "exclusiveMinimum": -1,
                                                                        "readOnly": false,
                                                                        "writeOnly": false,
                                                                        "minLenght": -1,
                                                                        "maxLength": -1
                                                                    },
                                                                    "minitems": -1,
                                                                    "uniqueitems": false,
                                                                    "minimum": 0,
                                                                    "maximum": 0,
                                                                    "exclusiveMinimum": -1,
                                                                    "readOnly": false,
                                                                    "writeOnly": false,
                                                                    "minLenght": -1,
                                                                    "maxLength": -1
                                                                },
                                                                {
                                                                    "name": "Color",
                                                                    "type": "string",
                                                                    "minitems": -1,
                                                                    "uniqueitems": false,
                                                                    "minimum": 0,
                                                                    "maximum": 0,
                                                                    "exclusiveMinimum": -1,
                                                                    "readOnly": false,
                                                                    "writeOnly": false,
                                                                    "minLenght": -1,
                                                                    "maxLength": -1
                                                                },
                                                                {
                                                                    "name": "Name",
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "string",
                                                                        "minitems": -1,
                                                                        "uniqueitems": false,
                                                                        "minimum": 0,
                                                                        "maximum": 0,
                                                                        "exclusiveMinimum": -1,
                                                                        "readOnly": false,
                                                                        "writeOnly": false,
                                                                        "minLenght": -1,
                                                                        "maxLength": -1
                                                                    },
                                                                    "minitems": -1,
                                                                    "uniqueitems": false,
                                                                    "minimum": 0,
                                                                    "maximum": 0,
                                                                    "exclusiveMinimum": -1,
                                                                    "readOnly": false,
                                                                    "writeOnly": false,
                                                                    "minLenght": -1,
                                                                    "maxLength": -1
                                                                },
                                                                {
                                                                    "name": "Pet",
                                                                    "type": "string",
                                                                    "minitems": -1,
                                                                    "uniqueitems": false,
                                                                    "minimum": 0,
                                                                    "maximum": 0,
                                                                    "exclusiveMinimum": -1,
                                                                    "readOnly": false,
                                                                    "writeOnly": false,
                                                                    "minLenght": -1,
                                                                    "maxLength": -1
                                                                },
                                                                {
                                                                    "name": "Shape",
                                                                    "type": "string",
                                                                    "minitems": -1,
                                                                    "uniqueitems": false,
                                                                    "minimum": 0,
                                                                    "maximum": 0,
                                                                    "exclusiveMinimum": -1,
                                                                    "readOnly": false,
                                                                    "writeOnly": false,
                                                                    "minLenght": -1,
                                                                    "maxLength": -1
                                                                },
                                                                {
                                                                    "name": "Taste",
                                                                    "type": "string",
                                                                    "minitems": -1,
                                                                    "uniqueitems": false,
                                                                    "minimum": 0,
                                                                    "maximum": 0,
                                                                    "exclusiveMinimum": -1,
                                                                    "readOnly": false,
                                                                    "writeOnly": false,
                                                                    "minLenght": -1,
                                                                    "maxLength": -1
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "modeName": "dql",
                                                            "validationRules": [
                                                            ],
                                                            "readAccessFormula": {
                                                                "formulaType": "domino",
                                                                "formula": "@True"
                                                            },
                                                            "writeAccessFormula": {
                                                                "formulaType": "domino",
                                                                "formula": "@True"
                                                            },
                                                            "deleteAccessFormula": {
                                                                "formulaType": "domino",
                                                                "formula": "@False"
                                                            },
                                                            "computeWithForm": false,
                                                            "required": [
                                                                "Form"
                                                            ],
                                                            "fields": [
                                                                {
                                                                    "name": "Color",
                                                                    "type": "string",
                                                                    "minitems": -1,
                                                                    "uniqueitems": false,
                                                                    "minimum": 0,
                                                                    "maximum": 0,
                                                                    "exclusiveMinimum": -1,
                                                                    "readOnly": false,
                                                                    "writeOnly": false,
                                                                    "minLenght": -1,
                                                                    "maxLength": -1
                                                                },
                                                                {
                                                                    "name": "Form",
                                                                    "type": "string",
                                                                    "minitems": -1,
                                                                    "uniqueitems": false,
                                                                    "minimum": 0,
                                                                    "maximum": 0,
                                                                    "exclusiveMinimum": -1,
                                                                    "readOnly": true,
                                                                    "writeOnly": false,
                                                                    "minLenght": -1,
                                                                    "maxLength": -1
                                                                }
                                                            ],
                                                            "readAccessFields": [
                                                                {
                                                                    "name": "Color",
                                                                    "type": "string",
                                                                    "minitems": -1,
                                                                    "uniqueitems": false,
                                                                    "minimum": 0,
                                                                    "maximum": 0,
                                                                    "exclusiveMinimum": -1,
                                                                    "readOnly": false,
                                                                    "writeOnly": false,
                                                                    "minLenght": -1,
                                                                    "maxLength": -1
                                                                },
                                                                {
                                                                    "name": "Form",
                                                                    "type": "string",
                                                                    "minitems": -1,
                                                                    "uniqueitems": false,
                                                                    "minimum": 0,
                                                                    "maximum": 0,
                                                                    "exclusiveMinimum": -1,
                                                                    "readOnly": true,
                                                                    "writeOnly": false,
                                                                    "minLenght": -1,
                                                                    "maxLength": -1
                                                                }
                                                            ],
                                                            "writeAccessFields": [
                                                                {
                                                                    "name": "Color",
                                                                    "type": "string",
                                                                    "minitems": -1,
                                                                    "uniqueitems": false,
                                                                    "minimum": 0,
                                                                    "maximum": 0,
                                                                    "exclusiveMinimum": -1,
                                                                    "readOnly": false,
                                                                    "writeOnly": false,
                                                                    "minLenght": -1,
                                                                    "maxLength": -1
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "views": [
                                                {
                                                    "name": "($All)",
                                                    "alias": [
                                                        "($All)"
                                                    ],
                                                    "unid": "0E35D520A1EBBB5B48258435003E8284"
                                                },
                                                {
                                                    "name": "Customers",
                                                    "alias": [
                                                        "Customers"
                                                    ],
                                                    "unid": "86C72C1BF64B6DF04825847100373215"
                                                }
                                            ],
                                            "agents": [
                                            ],
                                            "formAliases": {
                                                "Customer": "Customer",
                                                "Entry": "Entry",
                                                "IdPConfig": "IdP Configuration",
                                                "OdataSampleForm": "OdataSampleForm",
                                                "SampleEntry": "SampleEntry",
                                                "TestForm": "TestForm"
                                            },
                                            "availableViews": [
                                                "($All)",
                                                "0E35D520A1EBBB5B48258435003E8284",
                                                "86C72C1BF64B6DF04825847100373215",
                                                "Customers"
                                            ],
                                            "configuredForms": [
                                                "SampleForm"
                                            ],
                                            "dxlpath": "D:\\Program Files (x86)\\HCL\\Notes\\Data\\dxl.d\\Demo.nsf.dxl"
                                        }
                                    },
                                    "databaseWithFieldInfo": {
                                        "value": {
                                            "apiName": "demofieldGroup",
                                            "nsfPath": "Demo.nsf",
                                            "iconName": "mountain",
                                            "icon": "Base64 stuff, preferably SVG",
                                            "description": "Demo database",
                                            "formulaEngine": "domino",
                                            "schemaName": "demofieldGroup",
                                            "active": true,
                                            "requireRevisionToUpdate": false,
                                            "allowDecryption": true,
                                            "cacheTimestamp": 1,
                                            "dqlAccess": true,
                                            "dqlFormula": {
                                                "formulaType": "domino",
                                                "formula": "@True"
                                            },
                                            "allowCode": true,
                                            "openAccess": true,
                                            "forms": [
                                                {
                                                    "formName": "SampleForm",
                                                    "alias": [
                                                    ],
                                                    "formModes": [
                                                        {
                                                            "modeName": "default",
                                                            "validationRules": [
                                                            ],
                                                            "readAccessFormula": {
                                                                "formulaType": "domino",
                                                                "formula": "@True"
                                                            },
                                                            "writeAccessFormula": {
                                                                "formulaType": "domino",
                                                                "formula": "@True"
                                                            },
                                                            "deleteAccessFormula": {
                                                                "formulaType": "domino",
                                                                "formula": "@False"
                                                            },
                                                            "computeWithForm": false,
                                                            "required": [
                                                                "Form"
                                                            ],
                                                            "fields": [
                                                                {
                                                                    "name": "Age",
                                                                    "type": "array",
                                                                    "fieldGroup": "person",
                                                                    "items": {
                                                                        "type": "integer",
                                                                        "minitems": -1,
                                                                        "uniqueitems": false,
                                                                        "minimum": 0,
                                                                        "maximum": 0,
                                                                        "exclusiveMinimum": -1,
                                                                        "readOnly": false,
                                                                        "writeOnly": false,
                                                                        "minLenght": -1,
                                                                        "maxLength": -1
                                                                    },
                                                                    "minitems": -1,
                                                                    "uniqueitems": false,
                                                                    "minimum": 0,
                                                                    "maximum": 0,
                                                                    "exclusiveMinimum": -1,
                                                                    "readOnly": false,
                                                                    "writeOnly": false,
                                                                    "minLenght": -1,
                                                                    "maxLength": -1
                                                                },
                                                                {
                                                                    "name": "Color",
                                                                    "type": "string",
                                                                    "minitems": -1,
                                                                    "uniqueitems": false,
                                                                    "minimum": 0,
                                                                    "maximum": 0,
                                                                    "exclusiveMinimum": -1,
                                                                    "readOnly": false,
                                                                    "writeOnly": false,
                                                                    "minLenght": -1,
                                                                    "maxLength": -1
                                                                },
                                                                {
                                                                    "name": "Form",
                                                                    "type": "string",
                                                                    "minitems": -1,
                                                                    "uniqueitems": false,
                                                                    "minimum": 0,
                                                                    "maximum": 0,
                                                                    "exclusiveMinimum": -1,
                                                                    "readOnly": true,
                                                                    "writeOnly": false,
                                                                    "minLenght": -1,
                                                                    "maxLength": -1
                                                                },
                                                                {
                                                                    "name": "Name",
                                                                    "type": "array",
                                                                    "fieldGroup": "person",
                                                                    "items": {
                                                                        "type": "string",
                                                                        "minitems": -1,
                                                                        "uniqueitems": false,
                                                                        "minimum": 0,
                                                                        "maximum": 0,
                                                                        "exclusiveMinimum": -1,
                                                                        "readOnly": false,
                                                                        "writeOnly": false,
                                                                        "minLenght": -1,
                                                                        "maxLength": -1
                                                                    },
                                                                    "minitems": -1,
                                                                    "uniqueitems": false,
                                                                    "minimum": 0,
                                                                    "maximum": 0,
                                                                    "exclusiveMinimum": -1,
                                                                    "readOnly": false,
                                                                    "writeOnly": false,
                                                                    "minLenght": -1,
                                                                    "maxLength": -1
                                                                },
                                                                {
                                                                    "name": "Pet",
                                                                    "type": "string",
                                                                    "minitems": -1,
                                                                    "uniqueitems": false,
                                                                    "minimum": 0,
                                                                    "maximum": 0,
                                                                    "exclusiveMinimum": -1,
                                                                    "readOnly": false,
                                                                    "writeOnly": false,
                                                                    "minLenght": -1,
                                                                    "maxLength": -1
                                                                },
                                                                {
                                                                    "name": "Shape",
                                                                    "type": "string",
                                                                    "minitems": -1,
                                                                    "uniqueitems": false,
                                                                    "minimum": 0,
                                                                    "maximum": 0,
                                                                    "exclusiveMinimum": -1,
                                                                    "readOnly": false,
                                                                    "writeOnly": false,
                                                                    "minLenght": -1,
                                                                    "maxLength": -1
                                                                },
                                                                {
                                                                    "name": "Taste",
                                                                    "type": "string",
                                                                    "minitems": -1,
                                                                    "uniqueitems": false,
                                                                    "minimum": 0,
                                                                    "maximum": 0,
                                                                    "exclusiveMinimum": -1,
                                                                    "readOnly": false,
                                                                    "writeOnly": false,
                                                                    "minLenght": -1,
                                                                    "maxLength": -1
                                                                }
                                                            ],
                                                            "readAccessFields": [
                                                                {
                                                                    "name": "Age",
                                                                    "type": "array",
                                                                    "fieldGroup": "person",
                                                                    "items": {
                                                                        "type": "integer",
                                                                        "minitems": -1,
                                                                        "uniqueitems": false,
                                                                        "minimum": 0,
                                                                        "maximum": 0,
                                                                        "exclusiveMinimum": -1,
                                                                        "readOnly": false,
                                                                        "writeOnly": false,
                                                                        "minLenght": -1,
                                                                        "maxLength": -1
                                                                    },
                                                                    "minitems": -1,
                                                                    "uniqueitems": false,
                                                                    "minimum": 0,
                                                                    "maximum": 0,
                                                                    "exclusiveMinimum": -1,
                                                                    "readOnly": false,
                                                                    "writeOnly": false,
                                                                    "minLenght": -1,
                                                                    "maxLength": -1
                                                                },
                                                                {
                                                                    "name": "Color",
                                                                    "type": "string",
                                                                    "minitems": -1,
                                                                    "uniqueitems": false,
                                                                    "minimum": 0,
                                                                    "maximum": 0,
                                                                    "exclusiveMinimum": -1,
                                                                    "readOnly": false,
                                                                    "writeOnly": false,
                                                                    "minLenght": -1,
                                                                    "maxLength": -1
                                                                },
                                                                {
                                                                    "name": "Form",
                                                                    "type": "string",
                                                                    "minitems": -1,
                                                                    "uniqueitems": false,
                                                                    "minimum": 0,
                                                                    "maximum": 0,
                                                                    "exclusiveMinimum": -1,
                                                                    "readOnly": true,
                                                                    "writeOnly": false,
                                                                    "minLenght": -1,
                                                                    "maxLength": -1
                                                                },
                                                                {
                                                                    "name": "Name",
                                                                    "type": "array",
                                                                    "fieldGroup": "person",
                                                                    "items": {
                                                                        "type": "string",
                                                                        "minitems": -1,
                                                                        "uniqueitems": false,
                                                                        "minimum": 0,
                                                                        "maximum": 0,
                                                                        "exclusiveMinimum": -1,
                                                                        "readOnly": false,
                                                                        "writeOnly": false,
                                                                        "minLenght": -1,
                                                                        "maxLength": -1
                                                                    },
                                                                    "minitems": -1,
                                                                    "uniqueitems": false,
                                                                    "minimum": 0,
                                                                    "maximum": 0,
                                                                    "exclusiveMinimum": -1,
                                                                    "readOnly": false,
                                                                    "writeOnly": false,
                                                                    "minLenght": -1,
                                                                    "maxLength": -1
                                                                },
                                                                {
                                                                    "name": "Pet",
                                                                    "type": "string",
                                                                    "minitems": -1,
                                                                    "uniqueitems": false,
                                                                    "minimum": 0,
                                                                    "maximum": 0,
                                                                    "exclusiveMinimum": -1,
                                                                    "readOnly": false,
                                                                    "writeOnly": false,
                                                                    "minLenght": -1,
                                                                    "maxLength": -1
                                                                },
                                                                {
                                                                    "name": "Shape",
                                                                    "type": "string",
                                                                    "minitems": -1,
                                                                    "uniqueitems": false,
                                                                    "minimum": 0,
                                                                    "maximum": 0,
                                                                    "exclusiveMinimum": -1,
                                                                    "readOnly": false,
                                                                    "writeOnly": false,
                                                                    "minLenght": -1,
                                                                    "maxLength": -1
                                                                },
                                                                {
                                                                    "name": "Taste",
                                                                    "type": "string",
                                                                    "minitems": -1,
                                                                    "uniqueitems": false,
                                                                    "minimum": 0,
                                                                    "maximum": 0,
                                                                    "exclusiveMinimum": -1,
                                                                    "readOnly": false,
                                                                    "writeOnly": false,
                                                                    "minLenght": -1,
                                                                    "maxLength": -1
                                                                }
                                                            ],
                                                            "writeAccessFields": [
                                                                {
                                                                    "name": "Age",
                                                                    "type": "array",
                                                                    "fieldGroup": "person",
                                                                    "items": {
                                                                        "type": "integer",
                                                                        "minitems": -1,
                                                                        "uniqueitems": false,
                                                                        "minimum": 0,
                                                                        "maximum": 0,
                                                                        "exclusiveMinimum": -1,
                                                                        "readOnly": false,
                                                                        "writeOnly": false,
                                                                        "minLenght": -1,
                                                                        "maxLength": -1
                                                                    },
                                                                    "minitems": -1,
                                                                    "uniqueitems": false,
                                                                    "minimum": 0,
                                                                    "maximum": 0,
                                                                    "exclusiveMinimum": -1,
                                                                    "readOnly": false,
                                                                    "writeOnly": false,
                                                                    "minLenght": -1,
                                                                    "maxLength": -1
                                                                },
                                                                {
                                                                    "name": "Color",
                                                                    "type": "string",
                                                                    "minitems": -1,
                                                                    "uniqueitems": false,
                                                                    "minimum": 0,
                                                                    "maximum": 0,
                                                                    "exclusiveMinimum": -1,
                                                                    "readOnly": false,
                                                                    "writeOnly": false,
                                                                    "minLenght": -1,
                                                                    "maxLength": -1
                                                                },
                                                                {
                                                                    "name": "Name",
                                                                    "type": "array",
                                                                    "fieldGroup": "person",
                                                                    "items": {
                                                                        "type": "string",
                                                                        "minitems": -1,
                                                                        "uniqueitems": false,
                                                                        "minimum": 0,
                                                                        "maximum": 0,
                                                                        "exclusiveMinimum": -1,
                                                                        "readOnly": false,
                                                                        "writeOnly": false,
                                                                        "minLenght": -1,
                                                                        "maxLength": -1
                                                                    },
                                                                    "minitems": -1,
                                                                    "uniqueitems": false,
                                                                    "minimum": 0,
                                                                    "maximum": 0,
                                                                    "exclusiveMinimum": -1,
                                                                    "readOnly": false,
                                                                    "writeOnly": false,
                                                                    "minLenght": -1,
                                                                    "maxLength": -1
                                                                },
                                                                {
                                                                    "name": "Pet",
                                                                    "type": "string",
                                                                    "minitems": -1,
                                                                    "uniqueitems": false,
                                                                    "minimum": 0,
                                                                    "maximum": 0,
                                                                    "exclusiveMinimum": -1,
                                                                    "readOnly": false,
                                                                    "writeOnly": false,
                                                                    "minLenght": -1,
                                                                    "maxLength": -1
                                                                },
                                                                {
                                                                    "name": "Shape",
                                                                    "type": "string",
                                                                    "minitems": -1,
                                                                    "uniqueitems": false,
                                                                    "minimum": 0,
                                                                    "maximum": 0,
                                                                    "exclusiveMinimum": -1,
                                                                    "readOnly": false,
                                                                    "writeOnly": false,
                                                                    "minLenght": -1,
                                                                    "maxLength": -1
                                                                },
                                                                {
                                                                    "name": "Taste",
                                                                    "type": "string",
                                                                    "minitems": -1,
                                                                    "uniqueitems": false,
                                                                    "minimum": 0,
                                                                    "maximum": 0,
                                                                    "exclusiveMinimum": -1,
                                                                    "readOnly": false,
                                                                    "writeOnly": false,
                                                                    "minLenght": -1,
                                                                    "maxLength": -1
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "modeName": "dql",
                                                            "validationRules": [
                                                            ],
                                                            "readAccessFormula": {
                                                                "formulaType": "domino",
                                                                "formula": "@True"
                                                            },
                                                            "writeAccessFormula": {
                                                                "formulaType": "domino",
                                                                "formula": "@True"
                                                            },
                                                            "deleteAccessFormula": {
                                                                "formulaType": "domino",
                                                                "formula": "@False"
                                                            },
                                                            "computeWithForm": false,
                                                            "required": [
                                                                "Form"
                                                            ],
                                                            "fields": [
                                                                {
                                                                    "name": "Color",
                                                                    "type": "string",
                                                                    "minitems": -1,
                                                                    "uniqueitems": false,
                                                                    "minimum": 0,
                                                                    "maximum": 0,
                                                                    "exclusiveMinimum": -1,
                                                                    "readOnly": false,
                                                                    "writeOnly": false,
                                                                    "minLenght": -1,
                                                                    "maxLength": -1
                                                                },
                                                                {
                                                                    "name": "Form",
                                                                    "type": "string",
                                                                    "minitems": -1,
                                                                    "uniqueitems": false,
                                                                    "minimum": 0,
                                                                    "maximum": 0,
                                                                    "exclusiveMinimum": -1,
                                                                    "readOnly": true,
                                                                    "writeOnly": false,
                                                                    "minLenght": -1,
                                                                    "maxLength": -1
                                                                }
                                                            ],
                                                            "readAccessFields": [
                                                                {
                                                                    "name": "Color",
                                                                    "type": "string",
                                                                    "minitems": -1,
                                                                    "uniqueitems": false,
                                                                    "minimum": 0,
                                                                    "maximum": 0,
                                                                    "exclusiveMinimum": -1,
                                                                    "readOnly": false,
                                                                    "writeOnly": false,
                                                                    "minLenght": -1,
                                                                    "maxLength": -1
                                                                },
                                                                {
                                                                    "name": "Form",
                                                                    "type": "string",
                                                                    "minitems": -1,
                                                                    "uniqueitems": false,
                                                                    "minimum": 0,
                                                                    "maximum": 0,
                                                                    "exclusiveMinimum": -1,
                                                                    "readOnly": true,
                                                                    "writeOnly": false,
                                                                    "minLenght": -1,
                                                                    "maxLength": -1
                                                                }
                                                            ],
                                                            "writeAccessFields": [
                                                                {
                                                                    "name": "Color",
                                                                    "type": "string",
                                                                    "minitems": -1,
                                                                    "uniqueitems": false,
                                                                    "minimum": 0,
                                                                    "maximum": 0,
                                                                    "exclusiveMinimum": -1,
                                                                    "readOnly": false,
                                                                    "writeOnly": false,
                                                                    "minLenght": -1,
                                                                    "maxLength": -1
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "views": [
                                                {
                                                    "name": "($All)",
                                                    "alias": [
                                                        "($All)"
                                                    ],
                                                    "unid": "0E35D520A1EBBB5B48258435003E8284"
                                                },
                                                {
                                                    "name": "Customers",
                                                    "alias": [
                                                        "Customers"
                                                    ],
                                                    "unid": "86C72C1BF64B6DF04825847100373215"
                                                }
                                            ],
                                            "agents": [
                                            ],
                                            "formAliases": {
                                                "Customer": "Customer",
                                                "Entry": "Entry",
                                                "IdPConfig": "IdP Configuration",
                                                "OdataSampleForm": "OdataSampleForm",
                                                "SampleEntry": "SampleEntry",
                                                "TestForm": "TestForm"
                                            },
                                            "availableViews": [
                                                "($All)",
                                                "0E35D520A1EBBB5B48258435003E8284",
                                                "86C72C1BF64B6DF04825847100373215",
                                                "Customers"
                                            ],
                                            "configuredForms": [
                                                "SampleForm"
                                            ],
                                            "dxlpath": "D:\\Program Files (x86)\\HCL\\Notes\\Data\\dxl.d\\Demo.nsf.dxl"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Successful retrieval"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                },
                                "examples": {
                                    "NotFound": {
                                        "value": {
                                            "status": 404,
                                            "message": "No config found for demo"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "No such database"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "jwt": [
                        ]
                    }
                ],
                "operationId": "getScope",
                "summary": "Retrieves configuration for one scope mapped to a database schema",
                "x-keep-version": 1
            },
            "parameters": [
                {
                    "examples": {
                        "default": {
                            "value": "demo"
                        }
                    },
                    "name": "dataSource",
                    "description": "Keep DB Name",
                    "schema": {
                        "type": "string"
                    },
                    "in": "query",
                    "required": true
                }
            ]
        },
        "/scope/mode/{form}/{mode}": {
            "summary": "Retrieve a Keep Database configurations",
            "description": "Operation on a Keep configuration for a NSF.\nOptional: creation of a new empty database, update and delete. ",
            "get": {
                "tags": [
                    "scope"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/KeepForm"
                                }
                            }
                        },
                        "description": "Successful retrieval"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                },
                                "examples": {
                                    "NotFound": {
                                        "value": {
                                            "status": 404,
                                            "message": "No config found for demo and smpleform"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "No such form in the database"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "jwt": [
                        ]
                    }
                ],
                "operationId": "fetchFormModes",
                "summary": "Retrieves configuration for one mode of a form of a scope mapped to a database schema",
                "x-keep-version": 1
            },
            "parameters": [
                {
                    "examples": {
                        "default": {
                            "value": "demo"
                        }
                    },
                    "name": "dataSource",
                    "description": "Keep DB Name",
                    "schema": {
                        "type": "string"
                    },
                    "in": "query",
                    "required": true
                },
                {
                    "name": "form",
                    "description": "name or alias as stored in document",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                },
                {
                    "name": "mode",
                    "description": "access mode",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/scope/form/{form}": {
            "summary": "Retrieve a Keep Database configurations",
            "description": "Operation on a Keep configuration for a NSF.\nOptional: creation of a new empty database, update and delete. ",
            "get": {
                "tags": [
                    "scope"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/KeepForm"
                                }
                            }
                        },
                        "description": "Successful retrieval"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                },
                                "examples": {
                                    "NotFound": {
                                        "value": {
                                            "status": 404,
                                            "message": "No config found for demo and smpleform"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "No such form in the database"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "jwt": [
                        ]
                    }
                ],
                "operationId": "getScopeForm",
                "summary": "Retrieves configuration for one form of a scope mapped to a database schema",
                "x-keep-version": 1
            },
            "parameters": [
                {
                    "examples": {
                        "default": {
                            "value": "demo"
                        }
                    },
                    "name": "dataSource",
                    "description": "Keep DB Name",
                    "schema": {
                        "type": "string"
                    },
                    "in": "query",
                    "required": true
                },
                {
                    "name": "form",
                    "description": "name or alias as stored in document",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/attachments/{unid}": {
            "summary": "Add an attachment to a document",
            "post": {
                "requestBody": {
                    "description": "It's a file requested. The fieldName is not required. ",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "data"
                ],
                "parameters": [
                    {
                        "name": "fieldName",
                        "description": "Name of the field in which the attachment resides. Pass this to remove the hotspot for the attachment from that rich text field, otherwise the hotspot will remain. If the attachment is attached directly to the document, not a field, there is not need to do this.",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AttachmentsUNIDResponseMessage"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "status": "upload complete",
                                            "filename": "myFile.xlsx"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Success"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "jwt": [
                        ]
                    }
                ],
                "operationId": "createDocumentAttachment",
                "summary": "Creates a new attachment in an existing document",
                "description": "The filename passed will be used, if unique. Otherwise a unique name will be evaluated from the passed filename.",
                "x-keep-version": 1
            },
            "parameters": [
                {
                    "examples": {
                        "CustomApp": {
                            "value": "demo"
                        },
                        "Directory": {
                            "value": "dominodirectory"
                        }
                    },
                    "name": "dataSource",
                    "description": "Keep alias for the database to be queried",
                    "schema": {
                        "type": "string"
                    },
                    "in": "query",
                    "required": true
                },
                {
                    "examples": {
                        "sample": {
                            "value": "94CA3B3B5E035D6048258471003639C6"
                        }
                    },
                    "name": "unid",
                    "description": "Universal Id of the document to be acted upon",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                },
                {
                    "name": "fieldName",
                    "description": "Name of the field in which the attachment resides. Pass this to remove the hotspot for the attachment from that rich text field, otherwise the hotspot will remain. If the attachment is attached directly to the document, not a field, there is not need to do this.",
                    "schema": {
                        "type": "string"
                    },
                    "in": "query",
                    "required": false
                }
            ]
        },
        "/info": {
            "summary": "Provides basic information about the keep and Domino runtime",
            "description": "Will return Domino and Keep Version\nFor more complete information use the management endpoints typically port 8889",
            "get": {
                "tags": [
                    "admin"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/KeepInfo"
                                }
                            }
                        },
                        "description": "Runtime info"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "jwt": [
                        ]
                    }
                ],
                "operationId": "getInfo",
                "summary": "Get information about Domino and KEEP Version",
                "description": "JSON element with basic version information",
                "x-keep-version": 1
            }
        },
        "/admin/application/{client_id}/secret": {
            "summary": "Generates a new app secret for the application and changes status to active, if appropriate",
            "post": {
                "requestBody": {
                    "description": "client_id and status must be provided",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OAuthApplicationSecretRequest"
                            },
                            "examples": {
                                "CreateAppSecret": {
                                    "value": {
                                        "client_id": "2ca900-a7d5-a7dcf3",
                                        "status": "isActive"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "admin"
                ],
                "parameters": [
                    {
                        "examples": {
                            "ForceOverwrite": {
                                "value": "true"
                            },
                            "KeepExsisting": {
                                "value": "false"
                            }
                        },
                        "name": "force",
                        "description": "when set to true, an existing secret will get overwritten.\nNo effect if no secret exists",
                        "schema": {
                            "type": "boolean"
                        },
                        "in": "query"
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OAuthApplicationSecretResponse"
                                },
                                "examples": {
                                    "AppSecretResponse": {
                                        "value": {
                                            "client_id": "9c5fed-38c4-441808",
                                            "appSecret": "7e368d-6b3b-54eda8",
                                            "client_secret": "7e368d-6b3b-54eda8"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Successful created."
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "jwt": [
                        ]
                    }
                ],
                "operationId": "generateKeepApplicationSecret",
                "summary": "Generates a new client_secret",
                "description": "The client_secret is used as app password in the oauth Dance",
                "x-keep-version": 1
            },
            "delete": {
                "tags": [
                    "admin"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StatusMessage"
                                }
                            }
                        },
                        "description": "Successfull deletion"
                    }
                },
                "security": [
                    {
                        "jwt": [
                        ]
                    }
                ],
                "operationId": "deleteKeepApplicationSecret",
                "summary": "Remove an application secret",
                "x-keep-version": 1
            },
            "parameters": [
                {
                    "examples": {
                        "Sample": {
                            "value": "1fe2cd-ac38-26c7d6"
                        }
                    },
                    "name": "client_id",
                    "description": "App ID",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/admin/scopes": {
            "summary": "Connection of scope (public name) to a defined schema (a.k.a KeepDbConfig) in a NSF",
            "description": "scope names are unique to a Domino domain, while schema definitions are unique only to the nsf they reside in.\nThis endpoint allows to CRUD on the mappings between scope and schema. It will show active and inactive scopes and is for use of the admin. API consumerss rather use /scope instead of /admin/scope",
            "get": {
                "tags": [
                    "admin"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/RestMapping"
                                    }
                                }
                            }
                        },
                        "description": "List of configs"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    },
                    "501": {
                        "$ref": "#/components/responses/501"
                    }
                },
                "security": [
                    {
                        "jwt": [
                        ]
                    }
                ],
                "operationId": "fetchScopeMappings",
                "summary": "all restMappings on the server",
                "description": "Maps a schemas to scopes",
                "x-keep-version": 1
            }
        },
        "/scope/access": {
            "summary": "Retrieve a Keep Database configurations",
            "description": "Operation on a Keep configuration for a NSF.\nOptional: creation of a new empty database, update and delete. ",
            "get": {
                "tags": [
                    "scope"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful retrieval"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                },
                                "examples": {
                                    "NotFound": {
                                        "value": {
                                            "status": 404,
                                            "message": "No config found for demo and smpleform"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "No such form in the database"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "deprecated": false,
                "security": [
                    {
                        "jwt": [
                        ]
                    }
                ],
                "operationId": "getScopeAccess",
                "summary": "Provides information on ACCESS levels for current user",
                "x-keep-version": 1
            },
            "parameters": [
                {
                    "examples": {
                        "default": {
                            "value": "demo"
                        }
                    },
                    "name": "dataSource",
                    "description": "Keep DB Name",
                    "schema": {
                        "type": "string"
                    },
                    "in": "query",
                    "required": true
                }
            ]
        },
        "/odata": {
            "summary": "Get a list of ODATA enabled databases",
            "get": {
                "tags": [
                    "odata"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "For display in UI"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "basic": [
                        ]
                    },
                    {
                        "jwt": [
                        ]
                    }
                ],
                "operationId": "fetchOdataList",
                "summary": "JSON to be consumed in HTML Page",
                "x-keep-version": 1
            }
        }
    },
    "components": {
        "schemas": {
            "AgentInfo": {
                "title": "Root Type for agentInfo",
                "description": "",
                "type": "object",
                "properties": {
                    "name": {
                        "description": "Name of the agent, matches design",
                        "type": "string"
                    },
                    "alias": {
                        "description": "Collection of alternate names, might match aliases of the Domino design",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "unid": {
                        "description": "Primary key to find the agent",
                        "type": "string"
                    }
                },
                "example": {
                    "name": "(CustomerUpdates)",
                    "alias": [
                        "KundenAbruf",
                        "ग्राहकों"
                    ],
                    "unid": "ABCD12345"
                }
            },
            "DesignColumnSimple": {
                "description": "",
                "required": [
                    "name",
                    "formula",
                    "separateMultipleValues"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "title": {
                        "description": "",
                        "type": "string"
                    },
                    "formula": {
                        "description": "",
                        "type": "string"
                    },
                    "sort": {
                        "description": "",
                        "enum": [
                            "ascending",
                            "descending",
                            "none"
                        ],
                        "type": "string"
                    },
                    "separateMultipleValues": {
                        "description": "",
                        "type": "boolean"
                    }
                }
            },
            "DesignFieldSimple": {
                "description": "",
                "required": [
                    "name",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "type": {
                        "description": "",
                        "enum": [
                            "text",
                            "number",
                            "richtext",
                            "datetime"
                        ],
                        "type": "string"
                    },
                    "allowMultiValues": {
                        "description": "",
                        "type": "boolean"
                    }
                }
            },
            "DesignNSFSimple": {
                "description": "Basic database object. NOTE: This is fit for limited current purpose, not complete for production",
                "required": [
                    "title",
                    "nsfPath"
                ],
                "type": "object",
                "properties": {
                    "title": {
                        "description": "",
                        "type": "string"
                    },
                    "templateName": {
                        "description": "programmatic name of the template",
                        "type": "string"
                    },
                    "nsfPath": {
                        "description": "Path in internet style relative to the Domino data directory",
                        "type": "string"
                    }
                }
            },
            "ErrorMessage": {
                "title": "Root Type for errormessage",
                "description": "Detailed error message, might contain stacktrace",
                "type": "object",
                "properties": {
                    "details": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    },
                    "status": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "example": {
                    "details": "Long list of details",
                    "message": "We screwed up",
                    "status": 500
                }
            },
            "ExecutionRequest": {
                "title": "Root Type for executionrequest",
                "description": "Code sent to server to be executed and results returned",
                "required": [
                    "context",
                    "payload"
                ],
                "type": "object",
                "properties": {
                    "context": {
                        "description": "The data context to be provided for the call.\nBy default `session` and `database` are given, more based on this property"
                    },
                    "payload": {
                        "description": "code to be executed",
                        "type": "string"
                    }
                },
                "example": {
                    "context": {
                        "collection": [
                            "id",
                            "id2",
                            "id3"
                        ],
                        "document": "someunid",
                        "query": "",
                        "view": "($All)"
                    },
                    "payload": "DIM db as NotesDatabase\nDim doc as NotesDocument"
                }
            },
            "ExecutionResult": {
                "title": "Root Type for executionresult",
                "description": "Outcome of an operation",
                "type": "object",
                "properties": {
                    "console": {
                        "description": "Anything that went out with print(\"Hello World\") in the agent",
                        "type": "string"
                    },
                    "results": {
                        "description": "Array of execution results, should the agent write results",
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string"
                                },
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "age": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "name": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "status": {
                        "description": "Success or failure or error count",
                        "type": "string"
                    }
                },
                "example": {
                    "console": "Some output\nNextLine\nNextLine",
                    "results": [
                        {
                            "id": "2136198263921",
                            "items": {
                                "age": 42,
                                "name": "Joe"
                            }
                        }
                    ],
                    "status": "success"
                }
            },
            "FormulaResult": {
                "description": "Return value when requesting formula execution",
                "required": [
                    "request",
                    "result"
                ],
                "type": "object",
                "properties": {
                    "request": {
                        "$ref": "#/components/schemas/FormulaRequest",
                        "description": "The original request"
                    },
                    "result": {
                        "description": "What was the outcome of the evaluation",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FormulaResultElement"
                        }
                    }
                },
                "example": {
                    "result": [
                        {
                            "unid": "8C525AE6BE15DB6148258831001F5B7F",
                            "result": [
                                0
                            ]
                        },
                        {
                            "unid": "AA78E397F5397D054825883100453848",
                            "result": [
                                0
                            ]
                        }
                    ]
                }
            },
            "FormulaResultElement": {
                "title": "Root Type for formularesultelement",
                "description": "One simple element of return value when requesting formula execution",
                "required": [
                    "unid",
                    "result"
                ],
                "type": "object",
                "properties": {
                    "unid": {
                        "description": "Unique ID of document formula result is from.  If no document or query specified, unid will be an empty string",
                        "type": "string"
                    },
                    "result": {
                        "description": "Result is returned as an array.",
                        "type": "array",
                        "items": {

                        }
                    }
                },
                "example": {
                    "unid": "documentUnid",
                    "result": [
                        "formulaResult1",
                        "formulaResult2"
                    ]
                }
            },
            "KeepDBShort": {
                "title": "Root Type for keepdatabase",
                "description": "Entry available in keep API",
                "type": "object",
                "properties": {
                    "apiName": {
                        "description": "How this database is known to the API",
                        "type": "string"
                    },
                    "description": {
                        "description": "Description with human readable details of the database's purpose",
                        "type": "string"
                    },
                    "nsfPath": {
                        "description": "Location on Domino server",
                        "type": "string"
                    },
                    "schemaName": {
                        "description": "The internal schema name used",
                        "type": "string"
                    },
                    "iconName": {
                        "description": "Alt text for icon",
                        "type": "string"
                    },
                    "icon": {
                        "description": "Base64 encoded icon (preferably svg)",
                        "type": "string"
                    },
                    "isActive": {
                        "description": "is the definition currently in use",
                        "type": "boolean"
                    }
                },
                "example": {
                    "apiName": "keepconfig",
                    "nsfPath": "KeepConfig.nsf",
                    "description": "Configuration settings for the KEEP API, handle with care",
                    "schemaName": "keepconfig",
                    "iconName": "Sunrise",
                    "isActive": true
                }
            },
            "KeepForm": {
                "description": "Definition of a keep form including form modes",
                "required": [
                    "formName",
                    "formModes"
                ],
                "type": "object",
                "properties": {
                    "formName": {
                        "description": "Name of the form as stored in the document, might be an alias",
                        "type": "string"
                    },
                    "fieldGroups": {
                        "description": "Definition of fieldgroups that form detail records inside a document",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/KeepFieldGroup"
                        }
                    },
                    "formModes": {
                        "description": "Array of FormModes configured for this database. Might be empty",
                        "minItems": 1,
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/KeepFormMode"
                        }
                    },
                    "alias": {
                        "description": "Alternate names or alias of the form.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "StatusMessage": {
                "title": "Root Type for statusmessage",
                "description": "Keep-formatted status message",
                "required": [
                    "message",
                    "status",
                    "statusCode"
                ],
                "type": "object",
                "properties": {
                    "status": {
                        "description": "Success / failure status",
                        "type": "string"
                    },
                    "statusCode": {
                        "format": "int32",
                        "description": "HTTP status code",
                        "type": "integer"
                    },
                    "message": {
                        "description": "Short descriptive message",
                        "type": "string"
                    },
                    "unid": {
                        "$ref": "#/components/schemas/Unid",
                        "description": "Document primary key"
                    },
                    "details": {
                        "description": "Json Object containing further details, if appropriate",
                        "type": "string"
                    }
                },
                "example": {
                    "status": "OK",
                    "statusCode": 200,
                    "message": "deletion complete",
                    "unid": "61CCE871E79E8DDB8025852F004DFF2D"
                }
            },
            "ViewInfo": {
                "title": "Root Type for viewInfo",
                "description": "",
                "type": "object",
                "properties": {
                    "name": {
                        "description": "Name of the view, matches design",
                        "type": "string"
                    },
                    "alias": {
                        "description": "Collection of alternate names, might match aliases of the Domino design",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "unid": {
                        "description": "Primary key to find the view",
                        "type": "string"
                    }
                },
                "example": {
                    "name": "(Customers)",
                    "alias": [
                        "Kunden",
                        "ग्राहकों"
                    ],
                    "unid": "ABCD12345"
                }
            },
            "Unid": {
                "description": "32 char universalId A-Z0-9, primary key unique across replicas",
                "maxLength": 32,
                "minLength": 32,
                "pattern": "[0-9A-F]*",
                "type": "string",
                "readOnly": true,
                "example": "6834F14BE9CA69F68525871E00583D1B"
            },
            "UnidWritable": {
                "description": "32 char universalId A-Z0-9, primary key unique across replicas",
                "maxLength": 32,
                "minLength": 32,
                "pattern": "[0-9A-F]*",
                "type": "string",
                "readOnly": false,
                "example": "6834F14BE9CA69F68525871E00583D1B"
            },
            "AdminCache": {
                "title": "Root Type for AdminCache",
                "description": "Definition of a Keep cache of design element summaries.",
                "type": "object",
                "properties": {
                    "cached": {
                        "description": "If the specified database has been cached, then return true. Otherwise false.  ",
                        "type": "boolean"
                    },
                    "apiName": {
                        "description": "How this database is known to the API.",
                        "type": "string"
                    },
                    "nsfPath": {
                        "description": "Location on Domino server.",
                        "type": "string"
                    },
                    "formcount": {
                        "format": "int32",
                        "description": "Form count exsit in the Keep cache folder. ",
                        "type": "integer"
                    },
                    "viewcount": {
                        "format": "int32",
                        "description": "View count exsit in the Keep cache folder. ",
                        "type": "integer"
                    },
                    "agentcount": {
                        "format": "int32",
                        "description": "Agent count exsit in the Keep cache folder. ",
                        "type": "integer"
                    },
                    "librarycount": {
                        "format": "int32",
                        "description": "Library count exsit in the Keep cache folder. ",
                        "type": "integer"
                    },
                    "replicaid": {
                        "description": "A 16-character combination of letters and numbers that represents the replica ID of a Notes database.",
                        "type": "string"
                    },
                    "title": {
                        "description": "The title of the database.",
                        "type": "string"
                    }
                },
                "example": {
                    "cached": true,
                    "apiName": "testdb",
                    "nsfPath": "Demo.nsf",
                    "formcount": 8,
                    "viewcount": 5,
                    "agentcount": 2,
                    "librarycount": 0
                }
            },
            "DesignFormSimple": {
                "description": "Definition design information for specific design element Form.",
                "required": [
                    "name",
                    "fields"
                ],
                "type": "object",
                "properties": {
                    "@conflictaction": {
                        "description": "Indicates how to handle form replication conflicts. ",
                        "type": "string",
                        "readOnly": true,
                        "example": "createconflicts"
                    },
                    "@hide": {
                        "type": "string",
                        "readOnly": true
                    },
                    "@name": {
                        "description": "The name of the form.",
                        "type": "string",
                        "readOnly": true,
                        "example": "TestForm"
                    },
                    "@noteid": {
                        "description": "The note ID of a document, which is uniquely identifies a document within a particular database.",
                        "type": "string",
                        "readOnly": true,
                        "example": "276"
                    },
                    "@unid": {
                        "description": "Universal Id of the document, uniquely identifies a document across all replicas of a database",
                        "type": "string",
                        "readOnly": true,
                        "example": "360A6B7035CD03C248258816000DDB47"
                    },
                    "@alias": {
                        "description": "Alternate names or alias of the form.",
                        "type": "string",
                        "readOnly": true,
                        "example": "TestForm"
                    },
                    "fields": {
                        "description": "The fields on a forms. ",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DesignFieldSimple"
                        }
                    }
                },
                "example": {
                    "@alias": "TestForm",
                    "@conflictaction": "createconflicts",
                    "@hide": "web mobile",
                    "@name": "TestForm",
                    "@noteid": "276",
                    "@unid": "360A6B7035CD03C248258816000DDB47",
                    "first_name": {
                        "kind": "editable",
                        "type": "text"
                    },
                    "last_name": {
                        "kind": "editable",
                        "type": "text"
                    },
                    "email": {
                        "kind": "editable",
                        "type": "text"
                    },
                    "gender": {
                        "kind": "editable",
                        "type": "text"
                    },
                    "ip_address": {
                        "kind": "editable",
                        "type": "text"
                    },
                    "Color": {
                        "kind": "editable",
                        "type": "text"
                    },
                    "Pet": {
                        "kind": "editable",
                        "type": "text"
                    },
                    "@created": {
                        "kind": "editable",
                        "type": "datetime"
                    },
                    "$FILES": {
                        "kind": "editable",
                        "type": "attachment"
                    }
                }
            },
            "ODataServiceObject": {
                "title": "Root Type for ODataServiceObject",
                "description": "Entity object for OData service document of a database.",
                "type": "object",
                "properties": {
                    "name": {
                        "description": "The form name. ",
                        "type": "string"
                    },
                    "kind": {
                        "description": "EntitySet",
                        "type": "string"
                    },
                    "url": {
                        "description": "The form name currently",
                        "type": "string"
                    }
                },
                "example": {
                    "name": "TestForm",
                    "kind": "EntitySet",
                    "url": "TestForm"
                }
            },
            "ODataDbResponse": {
                "title": "Root Type for OdataDbResponse",
                "description": "Response for request of get OData service document of a database.",
                "type": "object",
                "properties": {
                    "@odata.context": {
                        "description": "OData metadata URI of a database.  \nOData metadata is a machine-readable description of the entity model designed to enable client consumption",
                        "type": "string"
                    },
                    "value": {
                        "description": "All OData service objects of a database.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ODataServiceObject"
                        }
                    }
                },
                "example": {
                    "@odata.context": "http://localhost:8880/api/v1/odata/testdb/$metadata",
                    "value": [
                        {
                            "name": "Entry",
                            "kind": "EntitySet",
                            "url": "Entry"
                        },
                        {
                            "name": "OdataSampleForm",
                            "kind": "EntitySet",
                            "url": "OdataSampleForm"
                        },
                        {
                            "name": "NewForm",
                            "kind": "EntitySet",
                            "url": "NewForm"
                        },
                        {
                            "name": "SampleEntry",
                            "kind": "EntitySet",
                            "url": "SampleEntry"
                        },
                        {
                            "name": "TestForm",
                            "kind": "EntitySet",
                            "url": "TestForm"
                        }
                    ]
                }
            },
            "ODataDbNameResponse": {
                "title": "Root Type for ODataDbNameResponse",
                "description": "Response for request of get OData service document of a database for specified form or view.",
                "type": "object",
                "properties": {
                    "@odata.context": {
                        "description": "This is the context URL (see [OData-Protocol]) for the payload.",
                        "type": "string"
                    },
                    "value": {
                        "description": "All the documents in OData formats. ",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ODataDocument"
                        }
                    }
                },
                "example": {
                    "@odata.context": "http://localhost:8880/api/v1/odata/testdb/$metadata#TestForm",
                    "value": [
                        {
                            "@odata.id": "http://localhost:8880/api/v1/odata/testdb/TestForm/40618262F3167AD74825881400245261",
                            "@odata.editLink": "http://localhost:8880/api/v1/odata/testdb/TestForm/40618262F3167AD74825881400245261",
                            "@odata.etag": "W/\" 6242a8fb\"",
                            "_x0040_unid": "40618262F3167AD74825881400245261",
                            "_x0040_parentUnid": "F29238E3622EB4FE48258814002451C8",
                            "_x0040_noteid": 6486,
                            "_x0040_created": "2022-03-29T14:36:43+08:00",
                            "_x0040_lastmodified": "2022-03-29T14:36:43+08:00",
                            "_x0040_revision": "bc021da739785e3a7efb4b3beebd5bcc",
                            "_x0040_lastaccessed": "2022-03-29T14:36:43+08:00",
                            "_x0040_size": 139,
                            "_x0040_unread": true,
                            "Color": "Yellow",
                            "Form": "TestForm",
                            "Pet": "Kelp gull",
                            "email": "patger7k@soup.io",
                            "first_name": "Pablo",
                            "gender": "Male",
                            "ip_address": "245.54.137.150",
                            "last_name": "Atger"
                        },
                        {
                            "@odata.id": "http://localhost:8880/api/v1/odata/testdb/TestForm/99A6E13F05C7153F4825881400250475",
                            "@odata.editLink": "http://localhost:8880/api/v1/odata/testdb/TestForm/99A6E13F05C7153F4825881400250475",
                            "@odata.etag": "W/\" 6242aac3\"",
                            "_x0040_unid": "99A6E13F05C7153F4825881400250475",
                            "_x0040_parentUnid": "C43804D7178AF0EB48258814002503EA",
                            "_x0040_noteid": 6546,
                            "_x0040_created": "2022-03-29T14:44:19+08:00",
                            "_x0040_lastmodified": "2022-03-29T14:44:19+08:00",
                            "_x0040_lastaccessed": "2022-03-29T14:44:19+08:00",
                            "_x0040_size": 139,
                            "_x0040_unread": true,
                            "Color": "Yellow",
                            "Form": "TestForm",
                            "Pet": "Kelp gull",
                            "email": "patger7k@soup.io",
                            "first_name": "Pablo",
                            "gender": "Male",
                            "ip_address": "245.54.137.150",
                            "last_name": "Atger"
                        }
                    ]
                }
            },
            "BulkUnids": {
                "title": "Root Type for bulkUnids",
                "description": "Collection of UNIDs for bulk retrieval or deletions",
                "type": "object",
                "properties": {
                    "unids": {
                        "description": "List of UNIDs to act upon",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UnidWritable"
                        }
                    },
                    "mode": {
                        "description": "mode to use to act on the documents. defaults to default",
                        "type": "string"
                    }
                },
                "additionalProperties": false,
                "example": {
                    "unids": [
                        "1234567890ABCDEF1234567890ABCDEF",
                        "2234567890ABCDEF1234567890ABCDEA",
                        "ABCDEF1234567890ABCDEF1234567890"
                    ],
                    "mode": "default"
                }
            },
            "BulkUpdateDocuments": {
                "title": "Root Type for BulkUpdateDocuments2",
                "description": "Update documents based on a query, a form mode and a set of fields to be updated",
                "type": "object",
                "properties": {
                    "query": {
                        "description": "DQL query string",
                        "type": "string"
                    },
                    "mode": {
                        "description": "Form mode as configured for any of the forms returned by the query",
                        "type": "string"
                    },
                    "replaceItems": {
                        "description": "Key value pairs, subject to form mode scrutiny",
                        "type": "object"
                    },
                    "maxScanDocs": {
                        "format": "int32",
                        "description": "Limit the number of documents to be scanned",
                        "type": "integer"
                    },
                    "returnUpdatedDocument": {
                        "description": "Should contain updated document in the response",
                        "type": "boolean"
                    },
                    "maxScanEntries": {
                        "format": "int32",
                        "description": "Limit the entries (see DQL documentation for it)",
                        "type": "integer"
                    },
                    "timeoutSecs": {
                        "format": "int32",
                        "description": "Query timeout in seconds",
                        "type": "integer"
                    },
                    "viewRefresh": {
                        "description": "Should views get refreshed?",
                        "type": "boolean"
                    },
                    "noViews": {
                        "description": "Disable use of views when true",
                        "type": "boolean"
                    },
                    "variables": {
                        "description": "Key/Value to replace ?Variables",
                        "type": "object"
                    },
                    "start": {
                        "description": "Default is 0.",
                        "type": "integer"
                    },
                    "count": {
                        "description": "How many to return default is maxInt",
                        "type": "number"
                    }
                },
                "additionalProperties": false,
                "example": {
                    "query": "Form = 'Marketing' and Newsletter = 'Weekly' and Color = ?Color",
                    "mode": "default",
                    "replaceItems": {
                        "Newsletter": "every week"
                    },
                    "maxScanDocs": 500000,
                    "maxScanEntries": 200000,
                    "timeoutSecs": 300,
                    "viewRefresh": true,
                    "noViews": false,
                    "variables": {
                        "Color": "Maroon",
                        "Pet": "Giraffe"
                    }
                }
            },
            "DesignAgentSimple": {
                "title": "Root Type for DesignAgentSimple",
                "description": "Definition design information for specific design element Agent.",
                "type": "object",
                "properties": {
                    "@trigger": {
                        "description": "Indicates when this agent runs.",
                        "type": "string",
                        "readOnly": true
                    },
                    "@documentset": {
                        "description": "Represents a specified set of target documents that are manipulated by an agent.\n\nThe following types run an agent on:\n\nall - All the documents in the database.\n\nallinview - All documents in a view.\n\nmodified - All new and modified documents.\n\nrunonce - The current document once.\n\nselected - Only the selected documents.\n\nunreadinview - All unread documents in a view.\n\nnone",
                        "type": "string"
                    },
                    "@unid": {
                        "description": "The Note UNID of the agent.",
                        "type": "string"
                    },
                    "@name": {
                        "description": "The name of the agent.",
                        "type": "string"
                    },
                    "@validForKeep": {
                        "description": "If this agent has been configured to use in Keep. ",
                        "type": "boolean",
                        "readOnly": true
                    },
                    "@noteid": {
                        "description": "The note ID of the agent, which is uniquely identifies a document within a particular database.",
                        "type": "string"
                    },
                    "@type": {
                        "description": "Indicates the type of the agent (simple action, formula, LotusScript, imported Java, or Java).",
                        "type": "string"
                    }
                },
                "example": {
                    "@trigger": "MANUAL",
                    "@documentset": "SELECTED",
                    "@unid": "3F8E64B529DA6CF848258435004A37CC",
                    "@name": "Fix Body",
                    "@validForKeep": "",
                    "@noteid": "",
                    "@type": "LOTUSSCRIPT"
                }
            },
            "DesignViewSimple": {
                "description": "Definition design information for specific design element View.",
                "required": [
                    "name",
                    "columns",
                    "selectionFormula"
                ],
                "type": "object",
                "properties": {
                    "@name": {
                        "description": "The name of the view.",
                        "type": "string",
                        "readOnly": true,
                        "example": "Customers"
                    },
                    "@noteid": {
                        "description": "The note ID of a view, which is uniquely identifies a view within a particular database.",
                        "type": "string",
                        "readOnly": true,
                        "example": "222"
                    },
                    "@unid": {
                        "description": "Universal Id of the view, uniquely identifies a view across all replicas of a database",
                        "type": "string",
                        "readOnly": true,
                        "example": "86C72C1BF64B6DF04825847100373215"
                    },
                    "@alias": {
                        "description": "Alternate names or alias of the view.",
                        "type": "string",
                        "readOnly": true
                    },
                    "selectionFormula": {
                        "description": "",
                        "type": "string"
                    },
                    "columns": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DesignColumnSimple"
                        }
                    }
                },
                "example": {
                    "@alias": "",
                    "@name": "Customers",
                    "@noteid": "1be",
                    "@unid": "86C72C1BF64B6DF04825847100373215",
                    "$0": {
                        "title": "#",
                        "formula": "@DocNumber"
                    },
                    "$1": {
                        "title": "Created",
                        "formula": "@Created"
                    },
                    "last_name": {
                        "title": "LastName",
                        "formula": ""
                    },
                    "first_name": {
                        "title": "FirstName",
                        "formula": ""
                    },
                    "email": {
                        "title": "eMail",
                        "formula": ""
                    },
                    "Color": {
                        "title": "Color",
                        "formula": ""
                    },
                    "Pet": {
                        "title": "Pet",
                        "formula": ""
                    }
                }
            },
            "DesignSubFormSimple": {
                "title": "Root Type for DesignSubFormSimple",
                "description": "Definition design information for specific design element Form.",
                "type": "object",
                "properties": {
                    "@conflictaction": {
                        "description": "Indicates how to handle form replication conflicts. ",
                        "type": "string",
                        "readOnly": true,
                        "example": "createconflicts"
                    },
                    "@hide": {
                        "type": "string",
                        "readOnly": true
                    },
                    "@name": {
                        "description": "The name of the form.",
                        "type": "string",
                        "readOnly": true,
                        "example": "subFormSharedField"
                    },
                    "@noteid": {
                        "description": "The note ID of a document, which is uniquely identifies a document within a particular database.",
                        "type": "string",
                        "readOnly": true,
                        "example": "276"
                    },
                    "@unid": {
                        "description": "Universal Id of the document, uniquely identifies a document across all replicas of a database",
                        "type": "string",
                        "readOnly": true,
                        "example": "360A6B7035CD03C248258816000DDB47"
                    },
                    "@alias": {
                        "description": "Alternate names or alias of the form.",
                        "type": "string",
                        "readOnly": true,
                        "example": "subFormAlias"
                    },
                    "fields": {
                        "description": "The fields on a subform. ",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DesignFieldSimple"
                        }
                    }
                },
                "example": {
                    "@alias": "subFormAlias",
                    "@conflictaction": "createconflicts",
                    "@hide": "",
                    "@name": "subFormSharedField",
                    "@noteid": "282",
                    "@unid": "CC96242D1260ED3B4825881E002A410B",
                    "Group": {
                        "kind": "editable",
                        "type": "text",
                        "allowmultivalues": false
                    },
                    "Group_Leader": {
                        "kind": "editable",
                        "type": "text",
                        "allowmultivalues": false
                    }
                }
            },
            "DesignFormSimpleRequest": {
                "title": "Root Type for DesignFormSimpleRequest",
                "description": "Definition of request to create specific design element Form.",
                "type": "object",
                "properties": {
                    "name": {
                        "description": "The name of the form.",
                        "type": "string"
                    },
                    "alias": {
                        "description": "Alternate names or alias of the form.",
                        "type": "string"
                    },
                    "fields": {
                        "description": "The fields on a forms. ",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DesignFieldSimple"
                        }
                    }
                },
                "example": {
                    "name": "Entry",
                    "alias": "",
                    "fields": [
                        {
                            "name": "name",
                            "type": "text",
                            "allowmultivalues": false
                        },
                        {
                            "name": "email",
                            "type": "text",
                            "allowmultivalues": false
                        },
                        {
                            "name": "newField",
                            "type": "text",
                            "allowmultivalues": true
                        }
                    ]
                }
            },
            "DesignViewSimpleRequest": {
                "title": "Root Type for DesignViewSimpleRequest",
                "description": "Definition of request to create specific design element View.",
                "type": "object",
                "properties": {
                    "name": {
                        "description": "The name of the view.",
                        "type": "string"
                    },
                    "selectionFormula": {
                        "description": "The formula to select documents for a view. ",
                        "type": "string"
                    },
                    "columns": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DesignColumnSimple"
                        }
                    }
                },
                "example": {
                    "name": "entries",
                    "selectionFormula": "Form = \"Entry\"",
                    "columns": [
                        {
                            "name": "name",
                            "title": "name",
                            "separatemultiplevalues": false,
                            "sort": "ascending",
                            "formula": "name"
                        },
                        {
                            "name": "email",
                            "title": "email",
                            "separatemultiplevalues": false,
                            "sort": "ascending",
                            "formula": "email"
                        }
                    ]
                }
            },
            "BasicAuthForOauthFlow": {
                "title": "Root Type for basicauthrequest",
                "description": "API way to get a token for Domino IdP login",
                "required": [
                    "password",
                    "username",
                    "scopes"
                ],
                "type": "object",
                "properties": {
                    "password": {
                        "format": "password",
                        "description": "Password, not written on a Post-it",
                        "type": "string"
                    },
                    "username": {
                        "description": "Who you are or your eMail",
                        "type": "string"
                    },
                    "scopes": {
                        "description": "mandatory scopes value of 'oauth'\n",
                        "enum": [
                            "oauth"
                        ],
                        "type": "string"
                    }
                },
                "example": {
                    "password": "supersecret",
                    "username": "FirstName LastName",
                    "scopes": "oauth"
                }
            },
            "KeepFormMode": {
                "title": "Root Type for keepdatabase_formmode",
                "description": "Form modes for Keep Database config",
                "required": [
                    "deleteAccessFormula",
                    "modeName",
                    "fields",
                    "readAccessFormula",
                    "writeAccessFormula"
                ],
                "type": "object",
                "properties": {
                    "computeWithForm": {
                        "description": "Compute with form before saving",
                        "type": "boolean"
                    },
                    "deleteAccessFormula": {
                        "$ref": "#/components/schemas/KeepFormula",
                        "description": "Formuls to determine delete access"
                    },
                    "modeName": {
                        "description": "lowercase, name of the mode. Special names are default and odata ",
                        "type": "string"
                    },
                    "onLoad": {
                        "$ref": "#/components/schemas/KeepFormula",
                        "description": "Formula to run after loading a document, before returning to the caller"
                    },
                    "onSave": {
                        "$ref": "#/components/schemas/KeepFormula",
                        "description": "Formula to run after receiving a document, before save"
                    },
                    "readAccessFormula": {
                        "$ref": "#/components/schemas/KeepFormula",
                        "description": "Formula to determine read access for this mode"
                    },
                    "writeAccessFormula": {
                        "$ref": "#/components/schemas/KeepFormula",
                        "description": "Formula to determine write permissions"
                    },
                    "validationRules": {
                        "description": "formula rules to determine access",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/KeepFormula"
                        }
                    },
                    "fields": {
                        "anyOf": [
                            {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/KeepField"
                                }
                            }
                        ],
                        "description": "all fields in this mode",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/KeepField"
                        }
                    },
                    "required": {
                        "description": "List of fields that are required to be provided",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "readAccessFields": {
                        "description": "read access fields in this mode",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/KeepField"
                        }
                    },
                    "writeAccessFields": {
                        "description": "write access fields in this mode",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/KeepField"
                        }
                    }
                },
                "example": {
                    "modeName": "default",
                    "validationRules": [
                    ],
                    "readAccessFormula": {
                        "formulaType": "domino",
                        "formula": "@True"
                    },
                    "writeAccessFormula": {
                        "formulaType": "domino",
                        "formula": "@True"
                    },
                    "deleteAccessFormula": {
                        "formulaType": "domino",
                        "formula": "@False"
                    },
                    "computeWithForm": false,
                    "required": [
                        "Form",
                        "first_name",
                        "email"
                    ],
                    "fields": [
                        {
                            "name": "color",
                            "type": "string",
                            "format": "string",
                            "minitems": -1,
                            "uniqueitems": false,
                            "minimum": 0,
                            "maximum": 0,
                            "exclusiveMinimum": -1,
                            "readOnly": false,
                            "writeOnly": false,
                            "minLenght": -1,
                            "maxLength": -1,
                            "summaryField": true
                        },
                        {
                            "name": "email",
                            "type": "string",
                            "format": "string",
                            "minitems": -1,
                            "uniqueitems": false,
                            "minimum": 0,
                            "maximum": 0,
                            "exclusiveMinimum": -1,
                            "readOnly": false,
                            "writeOnly": false,
                            "minLenght": -1,
                            "maxLength": -1,
                            "summaryField": true
                        },
                        {
                            "name": "first_name",
                            "type": "string",
                            "format": "string",
                            "minitems": -1,
                            "uniqueitems": false,
                            "minimum": 0,
                            "maximum": 0,
                            "exclusiveMinimum": -1,
                            "readOnly": false,
                            "writeOnly": false,
                            "minLenght": -1,
                            "maxLength": -1,
                            "summaryField": true
                        },
                        {
                            "name": "Form",
                            "type": "string",
                            "format": "string",
                            "minitems": -1,
                            "uniqueitems": false,
                            "minimum": 0,
                            "maximum": 0,
                            "exclusiveMinimum": -1,
                            "readOnly": true,
                            "writeOnly": false,
                            "minLenght": -1,
                            "maxLength": -1,
                            "summaryField": true
                        },
                        {
                            "name": "hobbies",
                            "type": "array",
                            "format": "string",
                            "items": {
                                "type": "string",
                                "format": "string",
                                "minitems": -1,
                                "uniqueitems": false,
                                "minimum": 0,
                                "maximum": 0,
                                "exclusiveMinimum": -1,
                                "readOnly": false,
                                "writeOnly": false,
                                "minLenght": -1,
                                "maxLength": -1,
                                "summaryField": true
                            },
                            "minitems": -1,
                            "uniqueitems": false,
                            "minimum": 0,
                            "maximum": 0,
                            "exclusiveMinimum": -1,
                            "readOnly": false,
                            "writeOnly": false,
                            "minLenght": -1,
                            "maxLength": -1,
                            "summaryField": true
                        },
                        {
                            "name": "last_name",
                            "type": "string",
                            "format": "string",
                            "minitems": -1,
                            "uniqueitems": false,
                            "minimum": 0,
                            "maximum": 0,
                            "exclusiveMinimum": -1,
                            "readOnly": false,
                            "writeOnly": false,
                            "minLenght": -1,
                            "maxLength": -1,
                            "summaryField": true
                        },
                        {
                            "name": "Pet",
                            "type": "string",
                            "format": "string",
                            "minitems": -1,
                            "uniqueitems": false,
                            "minimum": 0,
                            "maximum": 0,
                            "exclusiveMinimum": -1,
                            "readOnly": false,
                            "writeOnly": false,
                            "minLenght": -1,
                            "maxLength": -1,
                            "summaryField": true
                        }
                    ],
                    "readAccessFields": [
                        {
                            "name": "color",
                            "type": "string",
                            "format": "string",
                            "minitems": -1,
                            "uniqueitems": false,
                            "minimum": 0,
                            "maximum": 0,
                            "exclusiveMinimum": -1,
                            "readOnly": false,
                            "writeOnly": false,
                            "minLenght": -1,
                            "maxLength": -1,
                            "summaryField": true
                        },
                        {
                            "name": "email",
                            "type": "string",
                            "format": "string",
                            "minitems": -1,
                            "uniqueitems": false,
                            "minimum": 0,
                            "maximum": 0,
                            "exclusiveMinimum": -1,
                            "readOnly": false,
                            "writeOnly": false,
                            "minLenght": -1,
                            "maxLength": -1,
                            "summaryField": true
                        },
                        {
                            "name": "first_name",
                            "type": "string",
                            "format": "string",
                            "minitems": -1,
                            "uniqueitems": false,
                            "minimum": 0,
                            "maximum": 0,
                            "exclusiveMinimum": -1,
                            "readOnly": false,
                            "writeOnly": false,
                            "minLenght": -1,
                            "maxLength": -1,
                            "summaryField": true
                        },
                        {
                            "name": "Form",
                            "type": "string",
                            "format": "string",
                            "minitems": -1,
                            "uniqueitems": false,
                            "minimum": 0,
                            "maximum": 0,
                            "exclusiveMinimum": -1,
                            "readOnly": true,
                            "writeOnly": false,
                            "minLenght": -1,
                            "maxLength": -1,
                            "summaryField": true
                        },
                        {
                            "name": "hobbies",
                            "type": "array",
                            "format": "string",
                            "items": {
                                "type": "string",
                                "format": "string",
                                "minitems": -1,
                                "uniqueitems": false,
                                "minimum": 0,
                                "maximum": 0,
                                "exclusiveMinimum": -1,
                                "readOnly": false,
                                "writeOnly": false,
                                "minLenght": -1,
                                "maxLength": -1,
                                "summaryField": true
                            },
                            "minitems": -1,
                            "uniqueitems": false,
                            "minimum": 0,
                            "maximum": 0,
                            "exclusiveMinimum": -1,
                            "readOnly": false,
                            "writeOnly": false,
                            "minLenght": -1,
                            "maxLength": -1,
                            "summaryField": true
                        },
                        {
                            "name": "last_name",
                            "type": "string",
                            "format": "string",
                            "minitems": -1,
                            "uniqueitems": false,
                            "minimum": 0,
                            "maximum": 0,
                            "exclusiveMinimum": -1,
                            "readOnly": false,
                            "writeOnly": false,
                            "minLenght": -1,
                            "maxLength": -1,
                            "summaryField": true
                        },
                        {
                            "name": "Pet",
                            "type": "string",
                            "format": "string",
                            "minitems": -1,
                            "uniqueitems": false,
                            "minimum": 0,
                            "maximum": 0,
                            "exclusiveMinimum": -1,
                            "readOnly": false,
                            "writeOnly": false,
                            "minLenght": -1,
                            "maxLength": -1,
                            "summaryField": true
                        }
                    ],
                    "writeAccessFields": [
                        {
                            "name": "color",
                            "type": "string",
                            "format": "string",
                            "minitems": -1,
                            "uniqueitems": false,
                            "minimum": 0,
                            "maximum": 0,
                            "exclusiveMinimum": -1,
                            "readOnly": false,
                            "writeOnly": false,
                            "minLenght": -1,
                            "maxLength": -1,
                            "summaryField": true
                        },
                        {
                            "name": "email",
                            "type": "string",
                            "format": "string",
                            "minitems": -1,
                            "uniqueitems": false,
                            "minimum": 0,
                            "maximum": 0,
                            "exclusiveMinimum": -1,
                            "readOnly": false,
                            "writeOnly": false,
                            "minLenght": -1,
                            "maxLength": -1,
                            "summaryField": true
                        },
                        {
                            "name": "first_name",
                            "type": "string",
                            "format": "string",
                            "minitems": -1,
                            "uniqueitems": false,
                            "minimum": 0,
                            "maximum": 0,
                            "exclusiveMinimum": -1,
                            "readOnly": false,
                            "writeOnly": false,
                            "minLenght": -1,
                            "maxLength": -1,
                            "summaryField": true
                        },
                        {
                            "name": "hobbies",
                            "type": "array",
                            "format": "string",
                            "items": {
                                "type": "string",
                                "format": "string",
                                "minitems": -1,
                                "uniqueitems": false,
                                "minimum": 0,
                                "maximum": 0,
                                "exclusiveMinimum": -1,
                                "readOnly": false,
                                "writeOnly": false,
                                "minLenght": -1,
                                "maxLength": -1,
                                "summaryField": true
                            },
                            "minitems": -1,
                            "uniqueitems": false,
                            "minimum": 0,
                            "maximum": 0,
                            "exclusiveMinimum": -1,
                            "readOnly": false,
                            "writeOnly": false,
                            "minLenght": -1,
                            "maxLength": -1,
                            "summaryField": true
                        },
                        {
                            "name": "last_name",
                            "type": "string",
                            "format": "string",
                            "minitems": -1,
                            "uniqueitems": false,
                            "minimum": 0,
                            "maximum": 0,
                            "exclusiveMinimum": -1,
                            "readOnly": false,
                            "writeOnly": false,
                            "minLenght": -1,
                            "maxLength": -1,
                            "summaryField": true
                        },
                        {
                            "name": "Pet",
                            "type": "string",
                            "format": "string",
                            "minitems": -1,
                            "uniqueitems": false,
                            "minimum": 0,
                            "maximum": 0,
                            "exclusiveMinimum": -1,
                            "readOnly": false,
                            "writeOnly": false,
                            "minLenght": -1,
                            "maxLength": -1,
                            "summaryField": true
                        }
                    ]
                }
            },
            "AttachmentsUNIDResponseMessage": {
                "title": "Root Type for AttachmentsUNIDResponseMessage",
                "description": "The response message for attachments/unid",
                "type": "object",
                "properties": {
                    "status": {
                        "description": "Short descriptive message",
                        "type": "string"
                    },
                    "filename": {
                        "description": "The filename user has uploaded.",
                        "type": "string"
                    }
                },
                "additionalProperties": false,
                "example": {
                    "status": "upload complete",
                    "filename": "1.txt"
                }
            },
            "ListDesignItem": {
                "description": "Result from design query. Names and uniqueIds\nTODO: Add form/view details",
                "required": [
                    "title",
                    "isFolder"
                ],
                "type": "object",
                "properties": {
                    "title": {
                        "description": "Title of the view or folder",
                        "type": "string"
                    },
                    "isFolder": {
                        "description": "true = it is a folder where user interaction or code determines the content\nfalse = it is a view with a fixed query, a.k.a View selection formula",
                        "type": "boolean"
                    },
                    "unid": {
                        "description": "UNID of the underlying View design element",
                        "type": "string"
                    },
                    "aliases": {
                        "description": "Aliases for the view title",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "type": {
                        "description": "If design item has a type, noted here.",
                        "type": "string"
                    }
                },
                "additionalProperties": false,
                "example": {
                    "title": "Customers",
                    "isFolder": false
                }
            },
            "LogoutBody": {
                "title": "Root Type for logoutBody",
                "description": "Code to send for logging out a current JWT based user",
                "required": [
                    "logout"
                ],
                "type": "object",
                "properties": {
                    "logout": {
                        "description": "Body to prevent an accidential logout",
                        "enum": [
                            "Yes"
                        ],
                        "type": "string"
                    }
                },
                "additionalProperties": false,
                "example": {
                    "logout": "Yes"
                }
            },
            "AuthResult": {
                "title": "Root Type for authresult",
                "description": "Result of a JWT login. Contains the JWT token and for convenience the claim in JSON readable format",
                "type": "object",
                "properties": {
                    "bearer": {
                        "description": "JWT Token for system access",
                        "type": "string"
                    },
                    "claims": {
                        "description": "Human readable JSON on the JWT claim content"
                    },
                    "leeway": {
                        "format": "int32",
                        "description": "The JWT library makes use of a leeway (in seconds) to account for when there is a clock skew times between the signing and verifying servers. Allow for a small leeway when checking whether a token has expired.",
                        "type": "integer"
                    },
                    "expSeconds": {
                        "format": "int32",
                        "description": "Expire time in seconds. ",
                        "type": "integer"
                    },
                    "issueDate": {
                        "format": "date-time",
                        "type": "string"
                    }
                },
                "additionalProperties": false,
                "example": {
                    "bearer": "some.jwt.string",
                    "claims": {
                        "iss": "SomeCert",
                        "sub": "CN=John Doe/O=Mauraders",
                        "scopes": "MAIL $DATA"
                    },
                    "leeway": 5,
                    "expSeconds": 21600,
                    "issueDate": "2021-04-01T01:32:34+08:00"
                }
            },
            "BulkCreateDocuments": {
                "title": "Root Type for bulkCreateDocuments",
                "description": "Upload an array of JSON objects to create new documents each",
                "required": [
                    "documents"
                ],
                "type": "object",
                "properties": {
                    "documents": {
                        "description": "JSON source for new Documents",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DominoDocument"
                        }
                    }
                },
                "example": {
                    "documents": [
                        {
                            "first_name": "Kristoffer",
                            "last_name": "Aaronsohn",
                            "email": "kaaronsohnf5@goo.ne.jp",
                            "gender": "Male",
                            "Color": "Purple",
                            "Pet": "Bandicoot, long-nosed",
                            "Form": "Customer"
                        },
                        {
                            "first_name": "Kristoffer",
                            "last_name": "Aaronsohn",
                            "email": "kaaronsohnf5@goo.ne.jp",
                            "gender": "Male",
                            "Color": "Purple",
                            "Pet": "Bandicoot, long-nosed",
                            "Form": "Customer"
                        },
                        {
                            "first_name": "Kristoffer",
                            "last_name": "Aaronsohn",
                            "email": "kaaronsohnf5@goo.ne.jp",
                            "gender": "Male",
                            "Color": "Purple",
                            "Pet": "Bandicoot, long-nosed",
                            "Form": "Customer"
                        },
                        {
                            "first_name": "Kristoffer",
                            "last_name": "Aaronsohn",
                            "email": "kaaronsohnf5@goo.ne.jp",
                            "gender": "Male",
                            "Color": "Purple",
                            "Pet": "Bandicoot, long-nosed",
                            "Form": "Customer"
                        },
                        {
                            "first_name": "Kristoffer",
                            "last_name": "Aaronsohn",
                            "email": "kaaronsohnf5@goo.ne.jp",
                            "gender": "Male",
                            "Color": "Purple",
                            "Pet": "Bandicoot, long-nosed",
                            "Form": "Customer"
                        }
                    ]
                }
            },
            "DocumentSimpleRequest": {
                "title": "Root Type for DocumentSimpleRequest",
                "description": "This is a sample Json format request body to create or update a domino document. The fields properties are just examples for one testform. ",
                "type": "object",
                "properties": {
                    "Form": {
                        "description": "The form name you want to operate with. ",
                        "type": "string"
                    }
                },
                "additionalProperties": {
                    "anyOf": [
                        {
                            "type": "number"
                        },
                        {
                            "type": "string"
                        },
                        {
                            "type": "boolean"
                        },
                        {
                            "type": "object"
                        },
                        {
                            "type": "array",
                            "items": {
                                "type": "number"
                            }
                        },
                        {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        {
                            "type": "array",
                            "items": {
                                "type": "boolean"
                            }
                        },
                        {
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    ],
                    "description": "Document specific fields with single or multi value"
                },
                "example": {
                    "first_name": "Winslow",
                    "last_name": "Andrews",
                    "email": "wandrews@canofsleep.com",
                    "gender": "Male",
                    "ip_address": "192.168.1.1",
                    "Color": "Pthalo Blue",
                    "Pet": "American Howling Retriever",
                    "Form": "Customer"
                }
            },
            "ODataDocument": {
                "title": "Root Type for ODataDbNameResponse",
                "description": "Definition for specified form or view of OData service document of a database.",
                "type": "object",
                "properties": {
                    "@odata.id": {
                        "description": "The ID of the OData entity.",
                        "type": "string",
                        "example": "http://localhost:8880/api/v1/odata/testdb/TestForm/F2A2C0994C07063E48258818002FCDAB"
                    },
                    "@odata.editLink": {
                        "description": "The link used to edit/update the entity,",
                        "type": "string",
                        "example": "http://localhost:8880/api/v1/odata/testdb/TestForm/F2A2C0994C07063E48258818002FCDAB"
                    },
                    "@odata.etag": {
                        "description": "Weak ETag of the current document",
                        "type": "string",
                        "example": "W/\\\" 6242a8fb\\\""
                    },
                    "_x0040_unid": {
                        "description": "Primary key of a document, unique across NSF databases with matching replicaIds",
                        "type": "string",
                        "example": "6834F14BE9CA69F68525871E00583D1B"
                    },
                    "_x0040_noteid": {
                        "format": "int32",
                        "description": "Local (current NSF only) primary key of a document",
                        "type": "integer",
                        "example": "90370"
                    },
                    "_x0040_created": {
                        "format": "date-time",
                        "description": "Date of document creation in ISO format",
                        "exclusiveMinimum": false,
                        "type": "string",
                        "example": "2022-03-29T14:36:43+08:00"
                    },
                    "_x0040_lastmodified": {
                        "format": "date-time",
                        "description": "Last update date of a document",
                        "type": "string",
                        "example": "2021-07-26T11:03:48-05:00"
                    },
                    "_x0040_revision": {
                        "description": "This field records the current revision version of document. It's a 32-character hex-encoded string of date. \n\nIf db config \"requireRevisionToUpdate\" is enabled, then revision is required when update document and only update document when revision version is right.",
                        "type": "string",
                        "example": "bc021da739785e3a7efb4b3beebd5bcc"
                    },
                    "_x0040_lastaccessed": {
                        "format": "date-time",
                        "description": "Last access date of a document",
                        "type": "string",
                        "example": "2021-07-26T11:03:48-05:00"
                    },
                    "_x0040_size": {
                        "format": "int32",
                        "description": "size in byte of a document",
                        "type": "integer",
                        "example": "114"
                    },
                    "_x0040_unread": {
                        "description": "Is the document unread by the current user",
                        "type": "boolean",
                        "example": "true"
                    },
                    "Form": {
                        "description": "Form name of a document",
                        "type": "string",
                        "example": "Customer"
                    }
                },
                "example": {
                    "@odata.id": "http://localhost:8880/api/v1/odata/testdb/TestForm/F2A2C0994C07063E48258818002FCDAB",
                    "@odata.editLink": "http://localhost:8880/api/v1/odata/testdb/TestForm/F2A2C0994C07063E48258818002FCDAB",
                    "@odata.etag": "W/\" 62480c60\"",
                    "_x0040_unid": "F2A2C0994C07063E48258818002FCDAB",
                    "_x0040_noteid": 6874,
                    "_x0040_created": "2022-04-02T16:42:08+08:00",
                    "_x0040_lastmodified": "2022-04-02T16:42:08+08:00",
                    "_x0040_revision": "bc021da739785e3a7efb4b3beebd5bcc",
                    "_x0040_lastaccessed": "2022-04-02T16:42:08+08:00",
                    "_x0040_size": 113,
                    "_x0040_unread": true,
                    "Color": "Pthalo Blue",
                    "Form": "TestForm",
                    "Pet": "American Howling Retriever",
                    "email": "wandrews@canofsleep.com",
                    "first_name": "Winslow",
                    "gender": "Male",
                    "ip_address": "192.168.1.1",
                    "last_name": "Andrews"
                }
            },
            "KeepAccess": {
                "title": "Root Type for KeepAccess",
                "description": "Provides information of access level required for KEEP operations:\n- Keep mapping in Domino directory\n- Keep configuration in individual databases\n\nMasks ACL and Role checks for users of the API",
                "required": [
                    "CreateDbMapping",
                    "DeleteDbMapping"
                ],
                "type": "object",
                "properties": {
                    "CreateDbMapping": {
                        "description": "Can the current user create KEEP configuration mappings",
                        "type": "boolean"
                    },
                    "DeleteDbMapping": {
                        "description": "Can the current user delete KEEP configuration mappings",
                        "type": "boolean"
                    },
                    "databases": {
                        "description": "Details of access to a given database",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/KeepAccessDetail"
                        }
                    }
                },
                "example": {
                    "CreateDbMapping": true,
                    "DeleteDbMapping": false,
                    "databases": [
                        {
                            "path": "demo.nsf",
                            "readKeepConfig": true,
                            "createDeleteKeepConfig": true,
                            "configurations": [
                                "demo",
                                "tango",
                                "test"
                            ]
                        }
                    ]
                }
            },
            "KeepAccessQuery": {
                "title": "Root Type for KeepAccess",
                "description": "Query to be send to check if user can read/update/delete KEEP configurations",
                "required": [
                    "checkAllNsf",
                    "onlyConfigured"
                ],
                "type": "object",
                "properties": {
                    "databases": {
                        "description": "List of file path to enquiry",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "checkAllNsf": {
                        "description": "Should the query check all databases on the current server - might take a while. Excludes mail files",
                        "type": "boolean",
                        "example": "false"
                    },
                    "onlyConfigured": {
                        "description": "Should only databases with existing KEEP configurations be returned",
                        "type": "boolean"
                    }
                },
                "example": {
                    "checkAllNsf": false,
                    "onlyConfigured": false,
                    "databases": [
                        "demo.nsf",
                        "apps/crm.nsf"
                    ]
                }
            },
            "KeepAccessDetail": {
                "title": "Root Type for KeepAccessDetail",
                "description": "Information about access to an individual database and, if access is sufficient, information about available configurations",
                "type": "object",
                "properties": {
                    "path": {
                        "description": "Path relativ to the data directory of an NSF",
                        "type": "string",
                        "example": "apps/demo.nsf"
                    },
                    "readKeepConfig": {
                        "description": "Can the given user read existing KEEP configurations",
                        "type": "boolean",
                        "example": "true"
                    },
                    "createDeleteKeepConfig": {
                        "description": "Can the current user create or delete KEEP configurations",
                        "type": "boolean",
                        "example": "true"
                    },
                    "configurations": {
                        "description": "List of KEEP configurations, ready to be mapped, in the design of a database",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": " [\n        \"demo\",\n        \"tango\",\n        \"test\"\n    ]"
                    },
                    "activeConfigurations": {
                        "description": "Map of confgurations in use. Key is the public name, value the NSF internal name",
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "example": "{\n    \"demo\": \"demo\"\n}"
                    }
                },
                "example": {
                    "path": "demo.nsf",
                    "readKeepConfig": true,
                    "createDeleteKeepConfig": true,
                    "configurations": [
                        "demo",
                        "tango",
                        "test"
                    ],
                    "activeConfigurations": {
                        "demo": "demo"
                    }
                }
            },
            "OAuthApplicationResponse": {
                "title": "Root Type for applicationRequest",
                "description": "Response for registering an application for OAuth IdP",
                "required": [
                    "client_id",
                    "client_name",
                    "client_uri",
                    "redirect_uris",
                    "scope",
                    "status",
                    "token_endpoint_auth_method"
                ],
                "type": "object",
                "properties": {
                    "client_name": {
                        "description": "Human readable Application name",
                        "type": "string"
                    },
                    "description": {
                        "description": "Desscription what the application does",
                        "type": "string"
                    },
                    "client_id": {
                        "description": "System generated client Id. Used for auth request and as user name for Token requests",
                        "type": "string"
                    },
                    "redirect_uris": {
                        "description": "List of callback URLs after consent is given. Must use https with the exception of http://localhost/some_url",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "scope": {
                        "description": "Scopes the application can (and will) request. When the application requests other scopes, token is denied",
                        "type": "string"
                    },
                    "client_uri": {
                        "description": "Start page of application. Can be used to create list of apps",
                        "type": "string"
                    },
                    "logo_uri": {
                        "description": "Optional: application logo URL",
                        "type": "string"
                    },
                    "token_endpoint_auth_method": {
                        "description": "Token endpoint authentication",
                        "enum": [
                            "client_secret_basic"
                        ],
                        "type": "string"
                    },
                    "status": {
                        "description": "Is this application active",
                        "enum": [
                            "isActive",
                            "disabled"
                        ],
                        "type": "string"
                    },
                    "contacts": {
                        "description": "URL, eMail, handles to contact people responsible for the app",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "@unid": {
                        "description": "Universal Id of the document.",
                        "type": "string",
                        "readOnly": true
                    },
                    "@author": {
                        "description": "The person who created the external application",
                        "type": "string",
                        "readOnly": true
                    },
                    "hasSecret": {
                        "description": "Flag to indicate if an application has a secret configured",
                        "type": "boolean"
                    }
                },
                "additionalProperties": false,
                "example": {
                    "@unid": "B7EF2F8AC28AEDC44825882B000AD946",
                    "author": "CN=John Doe/O=Mauraders",
                    "client_name": "My App",
                    "description": "Super cool demo App",
                    "client_id": "abcdef-1234-567890",
                    "hasSecret": false,
                    "redirect_uris": [
                        "http://localhost/callback",
                        "https://domino.projectcastle.io/identity",
                        "https://www.projectcastle.io/oauth"
                    ],
                    "scope": "demo $DECRYPT",
                    "client_uri": "https://www.projectcastle.io/coolapp",
                    "logo_uri": "https://www.projectcastle.io/castle.jpg",
                    "token_endpoint_auth_method": "client_secret_basic",
                    "contacts": [
                        "admin@projectcastle.io"
                    ],
                    "status": "isActive"
                }
            },
            "OAuthApplicationSecretRequest": {
                "title": "Root Type for OAuthApplicationSecretRequest",
                "description": "Meta data to generated secret for an application.",
                "required": [
                    "client_id",
                    "status"
                ],
                "type": "object",
                "properties": {
                    "client_id": {
                        "description": "System generated client Id for the application.",
                        "type": "string",
                        "example": "2ca900-a7d5-a7dcf3"
                    },
                    "status": {
                        "description": "Whether the application is active or disabled. ",
                        "enum": [
                            "isActive",
                            "disabled"
                        ],
                        "type": "string",
                        "example": "isActive"
                    }
                },
                "additionalProperties": false,
                "example": {
                    "client_id": "2ca900-a7d5-a7dcf3",
                    "status": "isActive"
                }
            },
            "OAuthApplicationSecretResponse": {
                "title": "Root Type for application",
                "description": "Response for a client_secret request. Client seccret is returned once",
                "required": [
                    "client_id",
                    "client_secret"
                ],
                "type": "object",
                "properties": {
                    "client_id": {
                        "description": "application ID, required as header for access",
                        "type": "string"
                    },
                    "client_secret": {
                        "description": "The application secret generated by Keep for the external application",
                        "type": "string"
                    },
                    "appSecret": {
                        "description": "The application secret generated by Keep for the external application",
                        "type": "string"
                    }
                },
                "additionalProperties": false,
                "example": {
                    "client_id": "9c5fed-38c4-441808",
                    "appSecret": "7e368d-6b3b-54eda8",
                    "client_secret": "7e368d-6b3b-54eda8"
                }
            },
            "OAuthApplicationRequest": {
                "title": "Root Type for applicationRequest",
                "description": "Meta data to register an application for OAuth IdP",
                "required": [
                    "client_name",
                    "scope",
                    "client_uri",
                    "redirect_uris"
                ],
                "type": "object",
                "properties": {
                    "client_name": {
                        "description": "Human readable Application name",
                        "type": "string"
                    },
                    "description": {
                        "description": "Description what the application does",
                        "type": "string"
                    },
                    "redirect_uris": {
                        "description": "List of callback URLs after consent is given. Must use https with the exception of http://localhost/some_url",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "scope": {
                        "description": "Scopes the application can (and will) request. When the application requests other scopes, token is denied",
                        "type": "string"
                    },
                    "client_uri": {
                        "description": "Start page of application. Can be used to create list of apps",
                        "type": "string"
                    },
                    "logo_uri": {
                        "description": "Optional: application logo URL",
                        "type": "string"
                    },
                    "status": {
                        "description": "Is this application active",
                        "enum": [
                            "isActive",
                            "disabled"
                        ]
                    },
                    "contacts": {
                        "description": "URL, eMail, handles to contact people responsible for the app",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "token_endpoint_auth_method": {
                        "description": "Token endpoint authentication",
                        "type": "string"
                    },
                    "client_id": {
                        "description": "Application ID. Empty on creation, required for update",
                        "type": "string"
                    }
                },
                "additionalProperties": false,
                "example": {
                    "client_name": "My App",
                    "description": "Super cool demo App",
                    "redirect_uris": [
                        "http://localhost/callback",
                        "https://domino.projectcastle.io/identity",
                        "https://www.projectcastle.io/oauth"
                    ],
                    "scope": "demo $DECRYPT",
                    "client_uri": "https://www.projectcastle.io/coolapp",
                    "logo_uri": "https://www.projectcastle.io/castle.jpg",
                    "contacts": [
                        "admin@projectcastle.io"
                    ],
                    "token_endpoint_auth_method": "client_secret_basic",
                    "status": "isActive"
                }
            },
            "OAuthApplicationRequestUpdate": {
                "title": "Root Type for OAuthApplicationRequestUpdate",
                "description": "Meta data to register an application for updating OAuth IdP",
                "type": "object",
                "properties": {
                    "client_name": {
                        "description": "Human readable Application name",
                        "type": "string"
                    },
                    "description": {
                        "description": "Description what the application does",
                        "type": "string"
                    },
                    "redirect_uris": {
                        "description": "List of callback URLs after consent is given. Must use https with the exception of http://localhost/some_url",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "scope": {
                        "description": "Scopes the application can (and will) request. When the application requests other scopes, token is denied",
                        "type": "string"
                    },
                    "client_uri": {
                        "description": "Start page of application. Can be used to create list of apps",
                        "type": "string"
                    },
                    "logo_uri": {
                        "description": "Optional: application logo URL",
                        "type": "string"
                    },
                    "status": {
                        "description": "Is this application active",
                        "enum": [
                            "isActive",
                            "disabled"
                        ]
                    },
                    "contacts": {
                        "description": "URL, eMail, handles to contact people responsible for the app",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "token_endpoint_auth_method": {
                        "description": "Token endpoint authentication",
                        "type": "string"
                    },
                    "isActive": {
                        "description": "DEPRECATED, Don't use",
                        "type": "string"
                    },
                    "client_id": {
                        "description": "Internal application id. Ignored here, taken from URL query parameter",
                        "type": "string"
                    }
                },
                "additionalProperties": false,
                "example": {
                    "client_name": "My App",
                    "description": "Super cool demo App",
                    "redirect_uris": [
                        "http://localhost/callback",
                        "https://domino.projectcastle.io/identity",
                        "https://www.projectcastle.io/oauth"
                    ],
                    "scope": "demo $DECRYPT",
                    "client_uri": "https://www.projectcastle.io/coolapp",
                    "logo_uri": "https://www.projectcastle.io/castle.jpg",
                    "contacts": [
                        "admin@projectcastle.io"
                    ],
                    "token_endpoint_auth_method": "client_secret_basic",
                    "status": "isActive"
                }
            },
            "DatabaseEntry": {
                "title": "Root Type for databaseentry",
                "description": "A database living on the sever's file system. Eventually with the API names it is known for",
                "type": "object",
                "properties": {
                    "title": {
                        "type": "string"
                    },
                    "apiNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "nsfPath": {
                        "type": "string"
                    }
                },
                "additionalProperties": false,
                "example": {
                    "apiNames": [
                        "addresses",
                        "systemdb"
                    ],
                    "nsfPath": "names.nsf",
                    "title": "Tango Addressbook"
                }
            },
            "KeepFieldGroup": {
                "title": "Root Type for KeepFieldGroup",
                "description": "A KeepFieldGroup describes the properites of a group of multi-value Notes items that form \"child records\" inside a single Notes document. Besides multi-value items, items with a common name and a counting suffix can form a field group",
                "required": [
                    "type",
                    "name",
                    "suffix"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "description": "Name tha links this definition to fieldGroup entries in KeepFields",
                        "type": "string",
                        "example": "itemLine"
                    },
                    "type": {
                        "description": "How is the group formed: by multi-value or common field name with counting suffix ",
                        "enum": [
                            "byName",
                            "multiValue"
                        ],
                        "type": "string",
                        "example": "multiValue"
                    },
                    "suffix": {
                        "description": "Separation character(s) between item name and counter",
                        "type": "string",
                        "example": "_"
                    },
                    "firstWithoutSuffix": {
                        "description": "For name linked items, does the first have the suffix (Name_1) or not (Name)",
                        "type": "boolean",
                        "example": "true"
                    },
                    "max": {
                        "format": "int32",
                        "description": "MAximum number of rows/item names to use",
                        "type": "integer",
                        "example": "42"
                    }
                },
                "example": {
                    "name": "OrderLine",
                    "type": "byName",
                    "suffix": "_",
                    "firstWithoutSuffix": true,
                    "max": 50
                }
            },
            "RestConfigShort": {
                "title": "Root Type for restConfigShort",
                "description": "Short summary of a rest configuration",
                "type": "object",
                "properties": {
                    "apiName": {
                        "description": "How this database is known to the API",
                        "type": "string"
                    },
                    "comment": {
                        "description": "The comment assigned to the design element",
                        "type": "string"
                    },
                    "template": {
                        "description": "The name of the note-specific template this design element is set to derive from",
                        "type": "string"
                    },
                    "prohibitRefresh": {
                        "description": "When notes database has been configured \"Inherit from the design template\", if \"Prohibit design refresh or replace to modify\" is checked, the design element will not be affected when you replace or refresh the design.",
                        "type": "boolean"
                    }
                },
                "additionalProperties": false,
                "example": {
                    "apiName": "restcon",
                    "comment": "REST API configuration restcon2",
                    "template": "",
                    "prohibitRefresh": false
                }
            },
            "AgentAsyncMessage": {
                "title": "Root Type for agentAsyncMessage",
                "description": "The status message of specific agent. ",
                "type": "object",
                "properties": {
                    "uuid": {
                        "description": "The uuid of the asynchronous agent to check status of.",
                        "type": "string"
                    },
                    "status": {
                        "description": "The status of the asynchronous agent. ",
                        "type": "string"
                    }
                },
                "additionalProperties": false,
                "example": {
                    "uuid": "251f1538-5c1d-4b64-b4a5-ae56dade65b6",
                    "status": "running"
                }
            },
            "FormulaRequest": {
                "title": "Root Type for formularequest",
                "description": "Body of a post to /run/formula to test or run a formula\nIf save is set to true, user must be the same as current user\n\nCannot set value for both a document unid and a dql query",
                "required": [
                    "type",
                    "formula",
                    "save",
                    "user"
                ],
                "type": "object",
                "properties": {
                    "user": {
                        "description": "User to be tested, can be empty if current user",
                        "type": "string"
                    },
                    "type": {
                        "description": "What type of formula shall be tested: Domino or OpenFormula",
                        "enum": [
                            "domino",
                            "openformula"
                        ],
                        "type": "string"
                    },
                    "formula": {
                        "description": "The actual formula",
                        "type": "string"
                    },
                    "unid": {
                        "description": "UniqueId of a document to test against. Can be empty if formula doesn't rely on fields in a document",
                        "type": "string"
                    },
                    "save": {
                        "description": "Should the document be saved back",
                        "type": "boolean"
                    },
                    "query": {
                        "description": "DQL Query to build a collection to run the formula against (and eventually save it)",
                        "type": "string"
                    }
                },
                "additionalProperties": false,
                "example": {
                    "user": "Peter Pan/Neverland",
                    "type": "domino",
                    "formula": "@IsMember(\"[admin]\";@UserRoles)",
                    "save": false,
                    "unid": "0624B6B9167EF29F48258614006F9A75",
                    "query": ""
                }
            },
            "KeepField": {
                "title": "Root Type for KeepField",
                "description": "Field description for fields / items in a KeepFormMode.\nDescribes name, type, and multi-value capability.\nModeled after json-schema where multi-value = array\nextension to json-schema limited to x-access-name\nto specify DOmino Names, Reader, Author nature\nAll other field copied from JSON Schema",
                "required": [
                    "type",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "description": "Field name. While anything theoretical is possible we stick to letters and numbers with the first letter capitalized. Not a hard rule to accomodate existing data",
                        "type": "string",
                        "example": "\"Form\""
                    },
                    "type": {
                        "description": "Data type, from JSON spec. Can be:\n- object\n- array\n- string\n- number\n- integer\n- boolean",
                        "enum": [
                            "object",
                            "array",
                            "string",
                            "number",
                            "integer",
                            "boolean"
                        ],
                        "type": "string",
                        "example": "\"string\""
                    },
                    "multivalue": {
                        "description": "Can the field process multiple values, HCL Domino style.\nWhen missing => false",
                        "type": "boolean",
                        "example": "true"
                    },
                    "fieldGroup": {
                        "description": "Domino multi-value fields can be grouped together to form a kind oc child record in a document. The fieldGroup defines such a grouping. It only is relevant for multi-value fields and isn't populated by default",
                        "type": "string",
                        "example": "recipients"
                    },
                    "description": {
                        "description": "Long text explanation what the field is about",
                        "type": "string",
                        "example": "Enter the following information yada yada yada"
                    },
                    "format": {
                        "description": "Format definition for Strings, extended from json-schema with readers, authors, names, json",
                        "enum": [
                            "authors",
                            "binary",
                            "byte",
                            "date",
                            "date-time",
                            "double",
                            "float",
                            "int32",
                            "int64",
                            "names",
                            "password",
                            "readers",
                            "richtext",
                            "boolean",
                            "string",
                            "json",
                            "attachments"
                        ],
                        "type": "string",
                        "example": "names"
                    },
                    "items": {
                        "description": "Item description can contain type and format",
                        "type": "object"
                    },
                    "minitems": {
                        "description": "for array type: minimum number of items",
                        "type": "integer",
                        "example": "2"
                    },
                    "uniqueitems": {
                        "description": "Shall array members be unique",
                        "type": "boolean",
                        "example": "true"
                    },
                    "minimum": {
                        "description": "lowest value, value included",
                        "type": "number",
                        "example": "2"
                    },
                    "maximum": {
                        "description": "maximum value, not included",
                        "type": "number",
                        "example": "42"
                    },
                    "exclusiveMinimum": {
                        "description": "Minimum value, not included",
                        "type": "number",
                        "example": "4"
                    },
                    "readOnly": {
                        "description": "Field can be read, but not updated. Can only be true if writeOnly is false",
                        "type": "boolean",
                        "example": "true"
                    },
                    "writeOnly": {
                        "description": "Field can be updated, but not read (Postbox / VoteBox style). Can only be true if readOnly is false",
                        "type": "boolean",
                        "example": "false"
                    },
                    "maxLength": {
                        "description": "not longer than that",
                        "type": "integer",
                        "example": "93"
                    },
                    "minLength": {
                        "description": "Low long is a String",
                        "type": "integer",
                        "example": "4"
                    }
                },
                "example": {
                    "name": "Age",
                    "type": "array",
                    "fieldGroup": "person",
                    "items": {
                        "type": "integer",
                        "minitems": -1,
                        "uniqueitems": false,
                        "minimum": 0,
                        "maximum": 0,
                        "exclusiveMinimum": -1,
                        "readOnly": false,
                        "writeOnly": false,
                        "minLenght": -1,
                        "maxLength": -1
                    },
                    "minitems": -1,
                    "uniqueitems": false,
                    "minimum": 0,
                    "maximum": 0,
                    "exclusiveMinimum": -1,
                    "readOnly": false,
                    "writeOnly": false,
                    "minLenght": -1,
                    "maxLength": -1
                }
            },
            "KeepFormula": {
                "title": "Root Type for KeepFormula",
                "description": "FOrmula in a scripting environment, that can be used for true/false evaluation or as a pre-load/save execution.",
                "required": [
                    "formulaType"
                ],
                "type": "object",
                "properties": {
                    "formulaType": {
                        "description": "computation model, currently Domino only",
                        "enum": [
                            "domino"
                        ],
                        "type": "string"
                    },
                    "formula": {
                        "description": "Formula code to run",
                        "type": "string"
                    },
                    "message": {
                        "description": "Optional message to use for fasilure of formula",
                        "type": "string"
                    }
                },
                "example": {
                    "formulaType": "Domino",
                    "formula": "@IsMember(\"[RaiseRequest]\"; @UserNamesList)"
                }
            },
            "AgentWithContextMessage": {
                "title": "Root Type for agentWithContextMessage",
                "description": "Runs an existing agent in a given database using a specific document as the agent's run context. The is the status message of the response.",
                "type": "object",
                "properties": {
                    "agentName": {
                        "description": "The agentName in the given database. ",
                        "type": "string"
                    },
                    "unid": {
                        "description": "The UNID of a document to passing by. NotesSession.documentContext can be used in the agent to access the relevant document. ",
                        "type": "string"
                    },
                    "returnMode": {
                        "description": "The mode configured in Keep. ",
                        "type": "string"
                    }
                },
                "additionalProperties": false,
                "example": {
                    "agentName": "processJson",
                    "unid": "36EBDFD11D4381F280258600003ED607",
                    "returnMode": "default"
                }
            },
            "AgentPayload": {
                "title": "Root Type for agentWithContextMessage",
                "description": "Runs an existing agent in a given database using a specific document as the agent's run context. The is the status message of the response.",
                "type": "object",
                "properties": {
                    "agentName": {
                        "description": "The agentName in the given database. ",
                        "type": "string"
                    },
                    "payload": {
                        "description": "Additional content to pass to the agent",
                        "type": "object"
                    }
                },
                "additionalProperties": false,
                "example": {
                    "agentName": "processJson",
                    "unid": "36EBDFD11D4381F280258600003ED607",
                    "returnMode": "default"
                }
            },
            "AgentPayloadAsync": {
                "title": "Root Type for agentPayload",
                "description": "payload for /run/agent endpoints",
                "required": [
                    "agentName"
                ],
                "type": "object",
                "properties": {
                    "agentName": {
                        "description": "The name of the agent. ",
                        "type": "string"
                    },
                    "callbackUrl": {
                        "description": "URL to call, only used if async=true",
                        "type": "string"
                    },
                    "method": {
                        "description": "Http request method you want to use when sending the callbackurl. ",
                        "type": "string"
                    },
                    "dataSource": {
                        "description": "Keep database containing the document to act upon, if different to the agent containing the agent",
                        "type": "string"
                    },
                    "callbackUrlError": {
                        "description": "URL to call if agent responds with status code other than 200. Only used if async=true",
                        "type": "string"
                    },
                    "payload": {
                        "description": "Additional content to pass to the agent",
                        "type": "object"
                    },
                    "runAsServer": {
                        "description": "Whether the agent should run as current user or as server. If the agent is designed to only run as the current web user, this property cannot be set to true.",
                        "type": "boolean"
                    }
                },
                "additionalProperties": false,
                "example": {
                    "agentName": "processJson",
                    "payload": {
                        "FirstName": "Adrian",
                        "TestVal": "20",
                        "TestBoolean": false
                    },
                    "runAsServer": false,
                    "callbackUrl": "https://www.acme.com/api/callback",
                    "method": "POST"
                }
            },
            "AdminBackup": {
                "title": "Root Type for AdminBackup",
                "description": "Definition of a Keep configuration.",
                "type": "object",
                "properties": {
                    "version": {
                        "description": "Basic information about Keep. ",
                        "type": "object"
                    },
                    "databases": {
                        "description": "All database configuration, including keepconfig(KeepConfig.nsf) which has configuration settings for the KEEP API. ",
                        "type": "object"
                    },
                    "apps": {
                        "description": "Application configuration. ",
                        "type": "object"
                    }
                },
                "example": {
                    "version": {
                        "keep-name": "HCL Project KEEP API",
                        "keep-desc": "Next generation APIs for HCL Domino",
                        "image-build": "2022-05-17 14:26",
                        "keep-vendor": "HCL Labs",
                        "keep-version": "1.5.0-SNAPSHOT-LocalBuild"
                    },
                    "databases": {
                        "keepconfig": {
                            "apiName": "keepconfig",
                            "nsfPath": "KeepConfig.nsf",
                            "iconName": "mountain",
                            "icon": "Base64 stuff, preferably SVG",
                            "description": "Configuration settings for the KEEP API, handle with care",
                            "schemaName": "keepconfig",
                            "active": true,
                            "requireRevisionToUpdate": false,
                            "allowDecryption": false,
                            "cacheTimestamp": 1,
                            "dqlAccess": true,
                            "dqlFormula": {
                                "formulaType": "domino",
                                "formula": "@False"
                            },
                            "allowCode": true,
                            "openAccess": true,
                            "forms": [
                            ],
                            "views": [
                            ],
                            "agents": [
                            ],
                            "formAliases": {

                            },
                            "availableViews": [
                            ],
                            "configuredForms": [
                            ],
                            "dxlpath": "D:\\Program Files (x86)\\HCL\\Notes\\Data\\dxl.d\\KeepConfig.nsf.dxl"
                        },
                        "names": {
                            "apiName": "names",
                            "nsfPath": "names.nsf",
                            "iconName": "mountain",
                            "icon": "Base64 stuff, preferably SVG",
                            "description": "Domino Directory on current Runtime",
                            "schemaName": "names",
                            "active": true,
                            "requireRevisionToUpdate": false,
                            "allowDecryption": false,
                            "cacheTimestamp": 1,
                            "dqlAccess": true,
                            "dqlFormula": {
                                "formulaType": "domino",
                                "formula": "@False"
                            },
                            "allowCode": true,
                            "openAccess": true,
                            "forms": [
                            ],
                            "views": [
                            ],
                            "agents": [
                            ],
                            "formAliases": {

                            },
                            "availableViews": [
                            ],
                            "configuredForms": [
                            ],
                            "dxlpath": "D:\\Program Files (x86)\\HCL\\Notes\\Data\\dxl.d\\names.nsf.dxl"
                        }
                    },
                    "apps": {
                        "unknown": {
                            "@unid": "D5000DB73418654A4825884400339438",
                            "author": "CN=John Doe/O=ProjectKeep",
                            "client_id": "d88b3b-4bd1-fe3dd2",
                            "client_name": "My Demo Application",
                            "hasSecret": false,
                            "client_uri": "",
                            "contacts": [
                                "CN=John Doe/O=ProjectKeep"
                            ],
                            "description": "",
                            "logo_uri": "",
                            "redirect_uris": [
                            ],
                            "scope": "",
                            "status": "disabled",
                            "token_endpoint_auth_method": "client_secret_basic"
                        }
                    }
                }
            },
            "RestMapping": {
                "title": "Root Type for restMapping",
                "description": "Maps a rest config from its internal name to the name it is visible. Info can be seen in the Internet sites of the domino directory. Also known as scope",
                "required": [
                    "apiName",
                    "nsfPath",
                    "schemaName",
                    "isActive"
                ],
                "type": "object",
                "properties": {
                    "Subject": {
                        "type": "string"
                    },
                    "apiName": {
                        "description": "Name that is used in ?datSsource= parameter to access mapped resource",
                        "pattern": "[a-z0-9]",
                        "type": "string"
                    },
                    "isActive": {
                        "description": "Allows to enable/disable API access without removing cofiguration",
                        "type": "boolean"
                    },
                    "icon": {
                        "description": "Base64 of an icon. SVG preferred",
                        "type": "string"
                    },
                    "iconName": {
                        "description": "alt text for icon",
                        "type": "string"
                    },
                    "ISiteNameFull": {
                        "type": "string"
                    },
                    "ISiteOrg": {
                        "type": "string"
                    },
                    "servers": {
                        "description": "fully qualified names of servers to run on. ALL when missing or empty",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "schemaName": {
                        "description": "name (without .json extension) of schema file in nsf REST file resources",
                        "pattern": "[a-z0-9]",
                        "type": "string"
                    },
                    "nsfPath": {
                        "description": "path relative to Domino data directory to nsf database",
                        "type": "string"
                    },
                    "description": {
                        "description": "Human readable explanation",
                        "type": "string"
                    }
                },
                "additionalProperties": false,
                "example": {
                    "Subject": "Engineering daily reports",
                    "apiName": "fieldreports",
                    "schemaName": "firsttry",
                    "nsfPath": "FieldReports.nsf",
                    "isActive": true,
                    "ISiteNameFull": "REST Database Site: demo (active)",
                    "ISiteOrg": "Domino REST access"
                }
            },
            "KeepDatabase": {
                "title": "Root Type for keepdbconfig",
                "description": "Configuration of a keep database including views, forms, agents, modes. Used only for admin endpoints.",
                "required": [
                    "nsfPath",
                    "formulaEngine",
                    "isActive"
                ],
                "type": "object",
                "properties": {
                    "apiName": {
                        "description": "How this database is known to the API",
                        "type": "string"
                    },
                    "description": {
                        "description": "Description with human readable details of the database's purpose",
                        "type": "string"
                    },
                    "formulaEngine": {
                        "description": "Script engine to be used to resolve permission formulas in FormModes or DQL access.\nNative Domino, OpenFormula or JavaScript\n\nCurrently only Native Domino is implemented",
                        "enum": [
                            "domino",
                            "openformula",
                            "javascript"
                        ],
                        "type": "string"
                    },
                    "icon": {
                        "description": "Base64 of an icon. SVG preferred",
                        "type": "string"
                    },
                    "iconName": {
                        "description": "alt text for icon",
                        "type": "string"
                    },
                    "isActive": {
                        "description": "Allows to enable/disable API access without removing cofiguration. This is used for scope. active is used for schema. ",
                        "type": "boolean"
                    },
                    "agents": {
                        "description": "List of agents that are permitted to be called from the API",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AgentInfo"
                        }
                    },
                    "allowCode": {
                        "description": "Can JS code be submitted for execution",
                        "type": "boolean"
                    },
                    "configuredForms": {
                        "description": "All forms that are configured for access via the KEEP API. Details in keepdatabaseconfig_formmode",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "readOnly": true
                        }
                    },
                    "dqlAccess": {
                        "description": "Does the API allow DQL queries to be submitted? DQL can query any document. Handle with care",
                        "type": "boolean"
                    },
                    "forms": {
                        "description": "Array with form configurations including form modes",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/KeepForm"
                        }
                    },
                    "openAccess": {
                        "description": "Can this database be accessed from a browser e.g. in a React app) or app without providing AppId and AppSecret. Still proper authentication using a JWT bearer is required",
                        "type": "boolean"
                    },
                    "dqlFormula": {
                        "$ref": "#/components/schemas/KeepFormula",
                        "description": "Formula to execute when DQL Access is permitted to determine if it is permitted for the current user.\nDomino or OpenFormula"
                    },
                    "formAliases": {
                        "description": "Collection of key / value pairs to map primary form names to potential alias values. A Notes document created with a form containing the alias will have the last alias value in its Form field",
                        "type": "object"
                    },
                    "requireRevisionToUpdate": {
                        "description": "If db config \"requireRevisionToUpdate\" is enabled, then revision is required when update document and only update document when revision version is right.\r\n ",
                        "type": "boolean"
                    },
                    "views": {
                        "description": "Array of Views that are available in the Keep API ",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ViewInfo"
                        }
                    },
                    "nsfPath": {
                        "description": "Location on Domino server",
                        "type": "string"
                    },
                    "schemaName": {
                        "description": "name (without .json extension) of schema file in nsf REST file resources",
                        "type": "string"
                    },
                    "allowDecryption": {
                        "description": "Allow decrypt the database",
                        "type": "boolean"
                    },
                    "cacheTimestamp": {
                        "description": "timestamp for when design data were last added",
                        "type": "integer"
                    },
                    "@unid": {
                        "description": "Universal Id of the document to be acted upon",
                        "type": "string",
                        "readOnly": true
                    },
                    "dxlpath": {
                        "description": "DXL path for this database",
                        "type": "string",
                        "readOnly": true
                    },
                    "availableViews": {
                        "description": "Array of Views that are available in the Keep API ",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ViewInfo"
                        }
                    },
                    "prohibitRefresh": {
                        "description": "indicates if the schema is protected against refresh by the design tast",
                        "type": "boolean"
                    }
                },
                "example": {
                    "apiName": "demoapi",
                    "schemaName": "demoapi",
                    "description": "Demo database",
                    "nsfPath": "Demo.nsf",
                    "icon": "Base64 stuff, preferably SVG",
                    "iconName": "mountain",
                    "isActive": true,
                    "requireRevisionToUpdate": false,
                    "allowDecryption": true,
                    "formulaEngine": "domino",
                    "openAccess": true,
                    "allowCode": true,
                    "dqlAccess": true,
                    "dqlFormula": {
                        "formulaType": "domino",
                        "formula": "@True"
                    },
                    "views": [
                        {
                            "name": "Customers",
                            "alias": [
                                "Customers"
                            ],
                            "unid": "86C72C1BF64B6DF04825847100373215"
                        },
                        {
                            "name": "MarketingInfo",
                            "alias": [
                                "MarketingInfo"
                            ],
                            "unid": "10EA9EC66EA748BC4825851100420810"
                        },
                        {
                            "name": "ChineseCustomers",
                            "alias": [
                                "ChineseCustomers"
                            ],
                            "unid": "3FE5CD63E179F21600258680006DB25B"
                        },
                        {
                            "name": "($All)",
                            "alias": [
                                "($All)"
                            ],
                            "unid": "0E35D520A1EBBB5B48258435003E8284"
                        },
                        {
                            "name": "Samples",
                            "alias": [
                                "Samples"
                            ],
                            "unid": "5318911D496571410025860D00544B17"
                        }
                    ],
                    "agents": [
                    ],
                    "forms": [
                        {
                            "formName": "Customer",
                            "formModes": [
                                {
                                    "modeName": "default",
                                    "fields": [
                                        {
                                            "name": "Form",
                                            "type": "string",
                                            "readOnly": true
                                        },
                                        {
                                            "name": "Pet",
                                            "type": "string"
                                        },
                                        {
                                            "name": "color",
                                            "type": "string"
                                        },
                                        {
                                            "name": "email",
                                            "type": "string"
                                        },
                                        {
                                            "name": "employee_count",
                                            "type": "integer"
                                        },
                                        {
                                            "name": "first_name",
                                            "type": "string"
                                        },
                                        {
                                            "name": "last_name",
                                            "type": "string"
                                        },
                                        {
                                            "name": "hobbies",
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        {
                                            "name": "Owner",
                                            "type": "string",
                                            "format": "authors"
                                        },
                                        {
                                            "name": "Body",
                                            "type": "object",
                                            "format": "richtext"
                                        }
                                    ],
                                    "required": [
                                        "Form",
                                        "email",
                                        "first_name"
                                    ],
                                    "readAccessFormula": {
                                        "formulaType": "domino",
                                        "formula": "@True"
                                    },
                                    "writeAccessFormula": {
                                        "formulaType": "domino",
                                        "formula": "@True"
                                    },
                                    "deleteAccessFormula": {
                                        "formulaType": "domino",
                                        "formula": "@False"
                                    },
                                    "computeWithForm": false
                                },
                                {
                                    "modeName": "dql",
                                    "fields": [
                                        {
                                            "name": "Form",
                                            "type": "string",
                                            "readOnly": true
                                        },
                                        {
                                            "name": "Pet",
                                            "type": "string"
                                        },
                                        {
                                            "name": "color",
                                            "type": "string"
                                        },
                                        {
                                            "name": "email",
                                            "type": "string"
                                        },
                                        {
                                            "name": "first_name",
                                            "type": "string"
                                        },
                                        {
                                            "name": "last_name",
                                            "type": "string"
                                        },
                                        {
                                            "name": "hobbies",
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    ],
                                    "required": [
                                        "Form",
                                        "email",
                                        "first_name"
                                    ],
                                    "readAccessFormula": {
                                        "formulaType": "domino",
                                        "formula": "@True"
                                    },
                                    "writeAccessFormula": {
                                        "formulaType": "domino",
                                        "formula": "@True"
                                    },
                                    "deleteAccessFormula": {
                                        "formulaType": "domino",
                                        "formula": "@False"
                                    },
                                    "computeWithForm": false
                                }
                            ]
                        },
                        {
                            "formName": "Marketing",
                            "formModes": [
                                {
                                    "modeName": "default",
                                    "fields": [
                                        {
                                            "name": "Form",
                                            "type": "string",
                                            "readOnly": true
                                        },
                                        {
                                            "name": "Assets",
                                            "type": "string"
                                        },
                                        {
                                            "name": "Country",
                                            "type": "string"
                                        },
                                        {
                                            "name": "FullName",
                                            "type": "string"
                                        },
                                        {
                                            "name": "Industry",
                                            "type": "string"
                                        },
                                        {
                                            "name": "Newsletter",
                                            "type": "string"
                                        },
                                        {
                                            "name": "email",
                                            "type": "string"
                                        },
                                        {
                                            "name": "gender",
                                            "type": "string",
                                            "writeOnly": true
                                        }
                                    ],
                                    "readAccessFormula": {
                                        "formulaType": "domino",
                                        "formula": "@True"
                                    },
                                    "writeAccessFormula": {
                                        "formulaType": "domino",
                                        "formula": "@True"
                                    },
                                    "deleteAccessFormula": {
                                        "formulaType": "domino",
                                        "formula": "@False"
                                    },
                                    "computeWithForm": false
                                }
                            ]
                        },
                        {
                            "formName": "SampleForm",
                            "formModes": [
                                {
                                    "modeName": "default",
                                    "fields": [
                                        {
                                            "name": "Color",
                                            "type": "string"
                                        },
                                        {
                                            "name": "Form",
                                            "type": "string"
                                        },
                                        {
                                            "name": "Shape",
                                            "type": "string"
                                        },
                                        {
                                            "name": "Taste",
                                            "type": "string"
                                        }
                                    ],
                                    "readAccessFormula": {
                                        "formulaType": "domino",
                                        "formula": "@True"
                                    },
                                    "writeAccessFormula": {
                                        "formulaType": "domino",
                                        "formula": "@True"
                                    },
                                    "deleteAccessFormula": {
                                        "formulaType": "domino",
                                        "formula": "@False"
                                    },
                                    "computeWithForm": false
                                },
                                {
                                    "modeName": "odata",
                                    "fields": [
                                        {
                                            "name": "Color",
                                            "type": "string"
                                        },
                                        {
                                            "name": "Form",
                                            "type": "string"
                                        },
                                        {
                                            "name": "Shape",
                                            "type": "string"
                                        },
                                        {
                                            "name": "Taste",
                                            "type": "string"
                                        }
                                    ],
                                    "readAccessFormula": {
                                        "formulaType": "domino",
                                        "formula": "@True"
                                    },
                                    "writeAccessFormula": {
                                        "formulaType": "domino",
                                        "formula": "@True"
                                    },
                                    "deleteAccessFormula": {
                                        "formulaType": "domino",
                                        "formula": "@False"
                                    },
                                    "computeWithForm": false
                                }
                            ]
                        },
                        {
                            "formName": "TestForm",
                            "formModes": [
                                {
                                    "modeName": "default",
                                    "fields": [
                                        {
                                            "name": "colour",
                                            "type": "string",
                                            "readOnly": true
                                        },
                                        {
                                            "name": "Form",
                                            "type": "string",
                                            "readOnly": true
                                        },
                                        {
                                            "name": "name",
                                            "type": "string"
                                        }
                                    ],
                                    "readAccessFormula": {
                                        "formulaType": "domino",
                                        "formula": "@True"
                                    },
                                    "writeAccessFormula": {
                                        "formulaType": "domino",
                                        "formula": "@True"
                                    },
                                    "deleteAccessFormula": {
                                        "formulaType": "domino",
                                        "formula": "@False"
                                    },
                                    "computeWithForm": false
                                }
                            ]
                        }
                    ],
                    "formAliases": {
                        "Entry": "Entry",
                        "SampleEntry": "SampleEntry",
                        "Customer": "Customer",
                        "IdPConfig": "IdP Configuration",
                        "OdataSampleForm": "OdataSampleForm",
                        "TestForm": "TestForm"
                    },
                    "@unid": "6334EDA70A42ABB948258846002F115C"
                }
            },
            "KeepInfoDetails": {
                "title": "Root Type for KeepInfoDetails",
                "description": "KEEP specific details",
                "type": "object",
                "properties": {
                    "keep-name": {
                        "type": "string"
                    },
                    "keep-desc": {
                        "type": "string"
                    },
                    "keep-version": {
                        "type": "string"
                    },
                    "keep-vendor": {
                        "type": "string"
                    },
                    "image-build": {
                        "format": "date-time",
                        "type": "string"
                    }
                },
                "example": {
                    "keep-name": "HCL Project KEEP core API",
                    "keep-desc": "Next generation APIs for HCL Domino",
                    "keep-version": "1.6.1-SNAPSHOT-LocalBuild",
                    "keep-vendor": "HCL Labs",
                    "image-build": "2022-07-13 08:38"
                }
            },
            "KeepInfoDomino": {
                "title": "Root Type for KeepInfoDomino",
                "description": "Domino part of KEEP info",
                "type": "object",
                "properties": {
                    "version": {
                        "type": "string"
                    },
                    "buildNumber": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "fixpackNumber": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "hotfixNumber": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "majorVersion": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "minorVersion": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "qmrNumber": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "qmuNumber": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "productionBuild": {
                        "type": "boolean"
                    }
                },
                "example": {
                    "version": "12.0-2 FP: 0 HF:0",
                    "buildNumber": 475,
                    "fixpackNumber": 0,
                    "hotfixNumber": 0,
                    "majorVersion": 12,
                    "minorVersion": 0,
                    "qmrNumber": 2,
                    "qmuNumber": 0,
                    "productionBuild": true
                }
            },
            "KeepInfo": {
                "title": "Root Type for KeepInfo",
                "description": "Basic Information about the running environment",
                "properties": {
                    "KeepProperties": {
                        "$ref": "#/components/schemas/KeepInfoDetails",
                        "description": "KEEP Build information"
                    },
                    "DominoProperties": {
                        "$ref": "#/components/schemas/KeepInfoDomino",
                        "description": "Domino build information"
                    }
                },
                "example": {
                    "Keep Properties": {
                        "keep-name": "HCL Project KEEP core API",
                        "keep-desc": "Next generation APIs for HCL Domino",
                        "keep-version": "1.6.1-SNAPSHOT-463",
                        "keep-vendor": "HCL Labs",
                        "image-build": "2022-07-11 16:18"
                    },
                    "Domino Properties": {
                        "version": "12.0-2 FP: 0 HF:0",
                        "buildNumber": 475,
                        "fixpackNumber": 0,
                        "hotfixNumber": 0,
                        "majorVersion": 12,
                        "minorVersion": 0,
                        "qmrNumber": 2,
                        "qmuNumber": 0,
                        "productionBuild": true
                    }
                }
            },
            "DocumentMeta": {
                "title": "DocumentMeta",
                "description": "Meta data common to all Domino documents that are read-only with the exception of form",
                "required": [
                    "Form"
                ],
                "type": "object",
                "properties": {
                    "unid": {
                        "$ref": "#/components/schemas/Unid",
                        "description": "Primary key of a document, unique across NSF databases with matching replicaIds",
                        "example": "6834F14BE9CA69F68525871E00583D1B"
                    },
                    "noteid": {
                        "description": "Local (current NSF only) primary key of a document",
                        "type": "integer",
                        "readOnly": true,
                        "example": "90370"
                    },
                    "created": {
                        "format": "date-time",
                        "description": "Date of document creation in ISO format",
                        "type": "string",
                        "readOnly": true,
                        "example": "2021-07-26T11:03:48-05:00"
                    },
                    "lastmodified": {
                        "format": "date-time",
                        "description": "Last update date of a document",
                        "type": "string",
                        "readOnly": true,
                        "example": "2021-07-26T11:03:48-05:00"
                    },
                    "lastaccessed": {
                        "format": "date-time",
                        "description": "Last access date of a document",
                        "type": "string",
                        "readOnly": true,
                        "example": "2021-07-26T11:03:48-05:00"
                    },
                    "size": {
                        "description": "size in byte of a document or json result",
                        "type": "integer",
                        "readOnly": true,
                        "example": "114"
                    },
                    "unread": {
                        "description": "Is the document unread by the current user",
                        "type": "boolean",
                        "readOnly": true,
                        "example": "true"
                    },
                    "etag": {
                        "description": "Weak ETag of the current document",
                        "type": "string",
                        "readOnly": true,
                        "example": "W/\\\" 60fedce4\\\""
                    },
                    "revision": {
                        "description": "This field records the current revision version of document. It's a 32-character hex-encoded string of date. \n\nIf db config \"requireRevisionToUpdate\" is enabled, then revision is required when update document and only update document when revision version is right.",
                        "type": "string",
                        "example": "cfb7351dd41a90f4e0c9afc06e30e59b"
                    }
                },
                "example": {
                    "@unid": "6834F14BE9CA69F68525871E00583D1B",
                    "@noteid": 90370,
                    "@created": "2021-07-26T11:03:48-05:00",
                    "@lastmodified": "2021-07-26T11:03:48-05:00",
                    "@revision": "cfb7351dd41a90f4e0c9afc06e30e59b",
                    "@lastaccessed": "2021-12-15T17:14:44+01:00",
                    "@size": 114,
                    "@unread": true,
                    "@etag": "W/\" 60fedce4\"",
                    "Form": "Customer"
                }
            },
            "DominoDocument": {
                "title": "DominoDocument",
                "description": "The JSON representation of a Domino document consisting of attributes (starting with @) and NotesItem having a name and one or more values",
                "required": [
                    "Form"
                ],
                "type": "object",
                "properties": {
                    "@meta": {
                        "$ref": "#/components/schemas/DocumentMeta",
                        "description": "Document meta data on request"
                    },
                    "Form": {
                        "description": "Form of a document, used to determine additionalProperties in detail",
                        "type": "string",
                        "example": "Customer"
                    }
                },
                "additionalProperties": {
                    "anyOf": [
                        {
                            "type": "number"
                        },
                        {
                            "type": "string"
                        },
                        {
                            "type": "boolean"
                        },
                        {
                            "type": "object"
                        },
                        {
                            "type": "array",
                            "items": {
                                "type": "number"
                            }
                        },
                        {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        {
                            "type": "array",
                            "items": {
                                "type": "boolean"
                            }
                        },
                        {
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    ],
                    "description": "Document specific fields with single or multi value"
                },
                "example": {
                    "@meta": {
                        "unid": "6834F14BE9CA69F68525871E00583D1B",
                        "noteid": 90370,
                        "created": "2021-07-26T11:03:48-05:00",
                        "lastmodified": "2021-07-26T11:03:48-05:00",
                        "lastaccessed": "2021-12-15T17:14:44+01:00",
                        "size": 114,
                        "unread": true,
                        "etag": "W/\" 60fedce4\""
                    },
                    "Color": "Red",
                    "Form": "Customer",
                    "Pet": "Black-capped chickadee",
                    "email": "gbranthwaite0@nba.com",
                    "first_name": "George",
                    "gender": "Male",
                    "ip_address": "91.254.204.27",
                    "last_name": "Hammer",
                    "body": {
                        "type": "text/html",
                        "encoding": "BASE64",
                        "content": "PGh0bWw+Cjxib2R5Pgo8aDIgc3R5bGU9ImNvbG9yOiAjMmU2YzgwOyI+S2VlcCBNaW1lPC9oMj4KPC9ib2R5Pgo8L2h0bWw+"
                    }
                }
            },
            "BasicAuthRequest": {
                "title": "Root Type for basicauthrequest",
                "description": "API way to get a token",
                "required": [
                    "password",
                    "username"
                ],
                "type": "object",
                "properties": {
                    "password": {
                        "format": "password",
                        "description": "Password, not written on a Post-it",
                        "type": "string",
                        "example": "supersecret"
                    },
                    "username": {
                        "description": "Who you are or your eMail",
                        "type": "string",
                        "example": "John Doe"
                    },
                    "scope": {
                        "description": "Optional approved scopes. A scope is a string, the scope field a series of space separated strings. If omitted the default value \"MAIL $DATA\" that give access to PIM functions and any database the user has access to. Other scopes can be the name of database aliases like \"demo\", \"crm\". The values are case sensitive. Regular database scopes are lower case. Scopes can't open access, that's what ACLs do, but limit them. For a user driven login, this makes limited sense, so it is mostly to achieve JWT parameter parity, so scopes can be tested without an IdP issuing a JWT at the end of an OAuth process\n",
                        "type": "string",
                        "example": "crm"
                    }
                },
                "additionalProperties": false,
                "example": {
                    "password": "supersecret",
                    "username": "FirstName LastName",
                    "scope": "MAIL $DATA"
                }
            },
            "RichTextRepresentation": {
                "description": "Format of RichText ",
                "enum": [
                    "html",
                    "mime",
                    "markdown"
                ],
                "type": "string"
            },
            "QueryRequest": {
                "title": "Root Type for queryrequest",
                "description": "Query and constraints for a DQL query to Domino. If not passing property 'mode', it will search from mode 'dql'. ",
                "required": [
                    "query"
                ],
                "type": "object",
                "properties": {
                    "maxScanDocs": {
                        "format": "int32",
                        "description": "Specifies the maximum allowable number of documents scanned across all query terms. DQL execution returns an error when exceeded. Default is 500,000.",
                        "type": "integer"
                    },
                    "maxScanEntries": {
                        "format": "int32",
                        "description": "Specifies the maximum allowable number of view entries scanned across all query terms. DQL execution return an error when exceeded. Default is 200,000.",
                        "type": "integer"
                    },
                    "noViews": {
                        "description": "Specifies not to perform any view processing in satisfying a query. Default is False (off).",
                        "type": "boolean"
                    },
                    "query": {
                        "description": "The DQL query snippet. ",
                        "type": "string"
                    },
                    "timeoutSecs": {
                        "format": "int32",
                        "description": "Specifies the maximum allowable seconds a DQL query is allowed to run. DQL execution returns an error when exceeded. Default is 300 (5 minutes).",
                        "type": "integer"
                    },
                    "variables": {
                        "description": "Key/Value to replace ?Variables in property \"query\". ",
                        "type": "object"
                    },
                    "viewRefresh": {
                        "description": "Refresh a UI view to match its associated back-end view.",
                        "type": "boolean"
                    },
                    "mode": {
                        "description": "This is form mode configured in Keep Database. If no mode has been passed, it will use default \"dql\". ",
                        "type": "string",
                        "example": "dql"
                    },
                    "forms": {
                        "description": "List of form names to be added to the query. KEEP will lookup all potential alias values and add them to the query clause",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "additionalProperties": false,
                "example": {
                    "maxScanDocs": 500000,
                    "maxScanEntries": 200000,
                    "noViews": false,
                    "query": "form = 'Customer' and Color = ?Color",
                    "timeoutSecs": 300,
                    "mode": "default",
                    "variables": {
                        "Color": "Maroon",
                        "Pet": "Giraffe"
                    },
                    "viewRefresh": true
                }
            }
        },
        "responses": {
            "400": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ErrorMessage"
                        }
                    }
                },
                "description": "Invalid request. Shows up when submission is flaky:\n- Wrong authentication\n- Wrong content-type\n- Missing or wrong parameter types"
            },
            "401": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ErrorMessage"
                        },
                        "examples": {
                            "Unauthorized": {
                                "value": {
                                    "status": 401,
                                    "message": "Invalid credentials or account locked"
                                }
                            }
                        }
                    }
                },
                "description": "401 Unauthorized"
            },
            "403": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ErrorMessage"
                        },
                        "examples": {
                            "Forbidden": {
                                "value": {
                                    "message": "Nice try chap, ask before next time",
                                    "status": 403
                                }
                            }
                        }
                    }
                },
                "description": "Forbidden"
            },
            "404": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ErrorMessage"
                        },
                        "examples": {
                            "NotFound": {
                                "value": {
                                    "message": "This is not the data you seek!",
                                    "status": 404
                                }
                            }
                        }
                    }
                },
                "description": "Content not found"
            },
            "405": {
                "description": "Method not allowed"
            },
            "406": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ErrorMessage"
                        },
                        "examples": {
                            "GenericRejection": {
                                "value": {
                                    "details": "The haferlup needs left turning shrufti",
                                    "message": "This is not a supported operation. Try again",
                                    "status": 406
                                }
                            }
                        }
                    }
                },
                "description": "Invalid operation - something got requested that isn't supported"
            },
            "500": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ErrorMessage"
                        },
                        "examples": {
                            "GenericError": {
                                "value": {
                                    "details": "Dreaded pirate NullPointer",
                                    "message": "Sorry pal, we screwed up",
                                    "status": 500
                                }
                            }
                        }
                    }
                },
                "description": "The server screwed up"
            },
            "501": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ErrorMessage"
                        },
                        "examples": {
                            "NextVersion": {
                                "value": {
                                    "details": "We do sprints, not marathons",
                                    "message": "Not now, maybe tomorrow",
                                    "status": 501
                                }
                            }
                        }
                    }
                },
                "description": "Working on it, just not yet"
            }
        },
        "securitySchemes": {
            "basic": {
                "scheme": "basic",
                "type": "http",
                "description": "Basic authentication for Excel oData feed"
            },
            "jwt": {
                "scheme": "bearer",
                "type": "http",
                "description": "Token based auth (preferred)"
            }
        }
    },
    "security": [
        {
            "jwt": [
            ]
        },
        {

        },
        {
            "basic": [
            ]
        }
    ],
    "tags": [
        {
            "name": "admin",
            "description": "The endpoints allow to manage scopes (the Domino databases exposed), OAuth application registration and the general setup of KEEP APIs. Accessing these endpoints requires a [KEEPAdmin] role for the user"
        },
        {
            "name": "design",
            "description": "Domino design elements including internal Source Code"
        },
        {
            "name": "data",
            "description": "CRUD of DOmino NoSQL data in JSON format. Workhorse APIs, used by applications to operate"
        },
        {
            "name": "authentication",
            "description": "URL Endpoints to get access to the system"
        },
        {
            "name": "code",
            "description": "URL Endpoints to run code against data"
        },
        {
            "name": "odata",
            "description": "Endpoints serving OData compliant information"
        },
        {
            "name": "scope",
            "description": "Endpoints to retrieve information about scopes. Domino databases are made known through a scope that defines access to forms, fields, views and agents. Readable by mortal users"
        },
        {
            "name": "schema",
            "description": "Data definitions how the API returns and accepts data, creating independence from Domino design elements. Creating or altering a schema requires designer access to the respective database"
        }
    ]
}