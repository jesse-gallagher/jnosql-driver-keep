/**
 * HCL Domino REST API basis
 * REST APIs for Domino and more done right. With declarative security and access to Code, Design and Data
 *
 * The version of the OpenAPI document: 1.0.10
 * Contact: HeyHCL@pnp-hcl.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openntf.xsp.nosql.communication.driver.keep.client.model;

import java.util.List;

import jakarta.json.bind.annotation.JsonbProperty;

/**
  * Information about access to an individual database and, if access is sufficient, information about available configurations
 **/

public class KeepAccessDetail  {
  
 /**
   * Path relativ to the data directory of an NSF
  **/
  @JsonbProperty("path")
  private String path;

 /**
   * Can the given user read existing Domino REST API configurations
  **/
  @JsonbProperty("readKeepConfig")
  private Boolean readKeepConfig;

 /**
   * Can the current user create or delete Domino REST API configurations
  **/
  @JsonbProperty("createDeleteKeepConfig")
  private Boolean createDeleteKeepConfig;

 /**
   * List of Domino REST API configurations, ready to be mapped, in the design of a database
  **/
  @JsonbProperty("configurations")
  private List<KeepAccessQuery> configurations = null;

 /**
   * Map of confgurations in use. Key is the public name, value the NSF internal name
  **/
  @JsonbProperty("activeConfigurations")
  private List<Object> activeConfigurations = null;

 /**
   * Path relativ to the data directory of an NSF
   * @return path
  **/
  public String getPath() {
    return path;
  }

  /**
    * Set path
  **/
  public void setPath(String path) {
    this.path = path;
  }

  public KeepAccessDetail path(String path) {
    this.path = path;
    return this;
  }

 /**
   * Can the given user read existing Domino REST API configurations
   * @return readKeepConfig
  **/
  public Boolean getReadKeepConfig() {
    return readKeepConfig;
  }

  /**
    * Set readKeepConfig
  **/
  public void setReadKeepConfig(Boolean readKeepConfig) {
    this.readKeepConfig = readKeepConfig;
  }

  public KeepAccessDetail readKeepConfig(Boolean readKeepConfig) {
    this.readKeepConfig = readKeepConfig;
    return this;
  }

 /**
   * Can the current user create or delete Domino REST API configurations
   * @return createDeleteKeepConfig
  **/
  public Boolean getCreateDeleteKeepConfig() {
    return createDeleteKeepConfig;
  }

  /**
    * Set createDeleteKeepConfig
  **/
  public void setCreateDeleteKeepConfig(Boolean createDeleteKeepConfig) {
    this.createDeleteKeepConfig = createDeleteKeepConfig;
  }

  public KeepAccessDetail createDeleteKeepConfig(Boolean createDeleteKeepConfig) {
    this.createDeleteKeepConfig = createDeleteKeepConfig;
    return this;
  }

 /**
   * List of Domino REST API configurations, ready to be mapped, in the design of a database
   * @return configurations
  **/
  public List<KeepAccessQuery> getConfigurations() {
    return configurations;
  }

  /**
    * Set configurations
  **/
  public void setConfigurations(List<KeepAccessQuery> configurations) {
    this.configurations = configurations;
  }

  public KeepAccessDetail configurations(List<KeepAccessQuery> configurations) {
    this.configurations = configurations;
    return this;
  }

  public KeepAccessDetail addConfigurationsItem(KeepAccessQuery configurationsItem) {
    this.configurations.add(configurationsItem);
    return this;
  }

 /**
   * Map of confgurations in use. Key is the public name, value the NSF internal name
   * @return activeConfigurations
  **/
  public List<Object> getActiveConfigurations() {
    return activeConfigurations;
  }

  /**
    * Set activeConfigurations
  **/
  public void setActiveConfigurations(List<Object> activeConfigurations) {
    this.activeConfigurations = activeConfigurations;
  }

  public KeepAccessDetail activeConfigurations(List<Object> activeConfigurations) {
    this.activeConfigurations = activeConfigurations;
    return this;
  }

  public KeepAccessDetail addActiveConfigurationsItem(Object activeConfigurationsItem) {
    this.activeConfigurations.add(activeConfigurationsItem);
    return this;
  }


  /**
    * Create a string representation of this pojo.
  **/
  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class KeepAccessDetail {\n");
    
    sb.append("    path: ").append(toIndentedString(path)).append("\n");
    sb.append("    readKeepConfig: ").append(toIndentedString(readKeepConfig)).append("\n");
    sb.append("    createDeleteKeepConfig: ").append(toIndentedString(createDeleteKeepConfig)).append("\n");
    sb.append("    configurations: ").append(toIndentedString(configurations)).append("\n");
    sb.append("    activeConfigurations: ").append(toIndentedString(activeConfigurations)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private static String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

