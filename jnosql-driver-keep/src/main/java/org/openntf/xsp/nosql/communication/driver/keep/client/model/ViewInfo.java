/**
 * HCL Project KEEP Core API v1
 * REST APIs for Domino and more done right. With declarative security and access to Code, Design and data
 *
 * The version of the OpenAPI document: 4.3.9
 * Contact: HeyHCL@pnp-hcl.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openntf.xsp.nosql.communication.driver.keep.client.model;

import java.util.List;

import jakarta.json.bind.annotation.JsonbProperty;

/**
  * 
 **/

public class ViewInfo  {
  
 /**
   * Name of the view, matches design
  **/
  @JsonbProperty("name")
  private String name;

 /**
   * Collection of alternate names, might match aliases of the Domino design
  **/
  @JsonbProperty("alias")
  private List<String> alias = null;

 /**
   * Primary key to find the view
  **/
  @JsonbProperty("unid")
  private String unid;

 /**
   * Name of the view, matches design
   * @return name
  **/
  public String getName() {
    return name;
  }

  /**
    * Set name
  **/
  public void setName(String name) {
    this.name = name;
  }

  public ViewInfo name(String name) {
    this.name = name;
    return this;
  }

 /**
   * Collection of alternate names, might match aliases of the Domino design
   * @return alias
  **/
  public List<String> getAlias() {
    return alias;
  }

  /**
    * Set alias
  **/
  public void setAlias(List<String> alias) {
    this.alias = alias;
  }

  public ViewInfo alias(List<String> alias) {
    this.alias = alias;
    return this;
  }

  public ViewInfo addAliasItem(String aliasItem) {
    this.alias.add(aliasItem);
    return this;
  }

 /**
   * Primary key to find the view
   * @return unid
  **/
  public String getUnid() {
    return unid;
  }

  /**
    * Set unid
  **/
  public void setUnid(String unid) {
    this.unid = unid;
  }

  public ViewInfo unid(String unid) {
    this.unid = unid;
    return this;
  }


  /**
    * Create a string representation of this pojo.
  **/
  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ViewInfo {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    alias: ").append(toIndentedString(alias)).append("\n");
    sb.append("    unid: ").append(toIndentedString(unid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private static String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

