/**
 * HCL Project KEEP Core API v1
 * REST APIs for Domino and more done right. With declarative security and access to Code, Design and data
 *
 * The version of the OpenAPI document: 4.3.9
 * Contact: HeyHCL@pnp-hcl.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openntf.xsp.nosql.communication.driver.keep.client.model;

import java.util.List;

import jakarta.json.bind.annotation.JsonbProperty;
import jakarta.validation.constraints.NotNull;

/**
  * Provides information of access level required for KEEP operations: - Keep mapping in Domino directory - Keep configuration in individual databases  Masks ACL and Role checks for users of the API
 **/

public class KeepAccess  {
  
 /**
   * Can the current user create KEEP configuration mappings
  **/
  @JsonbProperty("CreateDbMapping")
  private Boolean createDbMapping;

 /**
   * Can the current user delete KEEP configuration mappings
  **/
  @JsonbProperty("DeleteDbMapping")
  private Boolean deleteDbMapping;

 /**
   * Details of access to a given database
  **/
  @JsonbProperty("databases")
  private List<KeepAccessDetail> databases = null;

 /**
   * Can the current user create KEEP configuration mappings
   * @return createDbMapping
  **/
  @NotNull
  public Boolean getCreateDbMapping() {
    return createDbMapping;
  }

  /**
    * Set createDbMapping
  **/
  public void setCreateDbMapping(Boolean createDbMapping) {
    this.createDbMapping = createDbMapping;
  }

  public KeepAccess createDbMapping(Boolean createDbMapping) {
    this.createDbMapping = createDbMapping;
    return this;
  }

 /**
   * Can the current user delete KEEP configuration mappings
   * @return deleteDbMapping
  **/
  @NotNull
  public Boolean getDeleteDbMapping() {
    return deleteDbMapping;
  }

  /**
    * Set deleteDbMapping
  **/
  public void setDeleteDbMapping(Boolean deleteDbMapping) {
    this.deleteDbMapping = deleteDbMapping;
  }

  public KeepAccess deleteDbMapping(Boolean deleteDbMapping) {
    this.deleteDbMapping = deleteDbMapping;
    return this;
  }

 /**
   * Details of access to a given database
   * @return databases
  **/
  public List<KeepAccessDetail> getDatabases() {
    return databases;
  }

  /**
    * Set databases
  **/
  public void setDatabases(List<KeepAccessDetail> databases) {
    this.databases = databases;
  }

  public KeepAccess databases(List<KeepAccessDetail> databases) {
    this.databases = databases;
    return this;
  }

  public KeepAccess addDatabasesItem(KeepAccessDetail databasesItem) {
    this.databases.add(databasesItem);
    return this;
  }


  /**
    * Create a string representation of this pojo.
  **/
  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class KeepAccess {\n");
    
    sb.append("    createDbMapping: ").append(toIndentedString(createDbMapping)).append("\n");
    sb.append("    deleteDbMapping: ").append(toIndentedString(deleteDbMapping)).append("\n");
    sb.append("    databases: ").append(toIndentedString(databases)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private static String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

