/**
 * HCL Domino REST API basis
 * REST APIs for Domino and more done right. With declarative security and access to Code, Design and Data
 *
 * The version of the OpenAPI document: 1.0.8
 * Contact: HeyHCL@pnp-hcl.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openntf.xsp.nosql.communication.driver.keep.client.model;

import java.util.ArrayList;
import java.util.List;
import jakarta.json.bind.annotation.JsonbCreator;
import jakarta.json.bind.annotation.JsonbProperty;
import jakarta.validation.constraints.NotNull;

/**
 * Definition design information for specific design element View.
 **/

public class DesignViewSimple {

  /**
   * The name of the view.
   **/
  @JsonbProperty("@name")
  private String atName;

  /**
   * The note ID of a view, which is uniquely identifies a view within a particular database.
   **/
  @JsonbProperty("@noteid")
  private String atNoteid;

  /**
   * Universal Id of the view, uniquely identifies a view across all replicas of a database
   **/
  @JsonbProperty("@unid")
  private String atUnid;

  /**
   * Alternate names or alias of the view.
   **/
  @JsonbProperty("@alias")
  private String atAlias;

  /**
   * 
  **/
  @JsonbProperty("selectionFormula")
  private String selectionFormula;

  /**
   * 
  **/
  @JsonbProperty("columns")
  private List<DesignColumnSimple> columns = new ArrayList<>();

  public DesignViewSimple() {}

  @JsonbCreator
  public DesignViewSimple(
      @JsonbProperty(value = "@name", nillable = true) String atName,
      @JsonbProperty(value = "@noteid", nillable = true) String atNoteid,
      @JsonbProperty(value = "@unid", nillable = true) String atUnid,
      @JsonbProperty(value = "@alias", nillable = true) String atAlias) {
    this.atName = atName;
    this.atNoteid = atNoteid;
    this.atUnid = atUnid;
    this.atAlias = atAlias;
  }

  /**
   * The name of the view.
   * 
   * @return atName
   **/
  public String getAtName() {
    return atName;
  }


  /**
   * The note ID of a view, which is uniquely identifies a view within a particular database.
   * 
   * @return atNoteid
   **/
  public String getAtNoteid() {
    return atNoteid;
  }


  /**
   * Universal Id of the view, uniquely identifies a view across all replicas of a database
   * 
   * @return atUnid
   **/
  public String getAtUnid() {
    return atUnid;
  }


  /**
   * Alternate names or alias of the view.
   * 
   * @return atAlias
   **/
  public String getAtAlias() {
    return atAlias;
  }


  /**
   * @return selectionFormula
   **/
  @NotNull
  public String getSelectionFormula() {
    return selectionFormula;
  }

  /**
   * Set selectionFormula
   **/
  public void setSelectionFormula(String selectionFormula) {
    this.selectionFormula = selectionFormula;
  }

  public DesignViewSimple selectionFormula(String selectionFormula) {
    this.selectionFormula = selectionFormula;
    return this;
  }

  /**
   * @return columns
   **/
  @NotNull
  public List<DesignColumnSimple> getColumns() {
    return columns;
  }

  /**
   * Set columns
   **/
  public void setColumns(List<DesignColumnSimple> columns) {
    this.columns = columns;
  }

  public DesignViewSimple columns(List<DesignColumnSimple> columns) {
    this.columns = columns;
    return this;
  }

  public DesignViewSimple addColumnsItem(DesignColumnSimple columnsItem) {
    this.columns.add(columnsItem);
    return this;
  }


  /**
   * Create a string representation of this pojo.
   **/
  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DesignViewSimple {\n");

    sb.append("    atName: ").append(toIndentedString(atName)).append("\n");
    sb.append("    atNoteid: ").append(toIndentedString(atNoteid)).append("\n");
    sb.append("    atUnid: ").append(toIndentedString(atUnid)).append("\n");
    sb.append("    atAlias: ").append(toIndentedString(atAlias)).append("\n");
    sb.append("    selectionFormula: ").append(toIndentedString(selectionFormula)).append("\n");
    sb.append("    columns: ").append(toIndentedString(columns)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private static String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

