/**
 * HCL Project KEEP Core API v1
 * REST APIs for Domino and more done right. With declarative security and access to Code, Design and data
 *
 * The version of the OpenAPI document: 4.3.9
 * Contact: HeyHCL@pnp-hcl.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openntf.xsp.nosql.communication.driver.keep.client.model;

import jakarta.json.bind.annotation.JsonbProperty;
import jakarta.validation.constraints.NotNull;

/**
  * Basic database object. NOTE: This is fit for limited current purpose, not complete for production
 **/

public class DesignNSFSimple  {
  
 /**
   * 
  **/
  @JsonbProperty("title")
  private String title;

 /**
   * programmatic name of the template
  **/
  @JsonbProperty("templateName")
  private String templateName;

 /**
   * Path in internet style relative to the Domino data directory
  **/
  @JsonbProperty("nsfPath")
  private String nsfPath;

 /**
   * 
   * @return title
  **/
  @NotNull
  public String getTitle() {
    return title;
  }

  /**
    * Set title
  **/
  public void setTitle(String title) {
    this.title = title;
  }

  public DesignNSFSimple title(String title) {
    this.title = title;
    return this;
  }

 /**
   * programmatic name of the template
   * @return templateName
  **/
  public String getTemplateName() {
    return templateName;
  }

  /**
    * Set templateName
  **/
  public void setTemplateName(String templateName) {
    this.templateName = templateName;
  }

  public DesignNSFSimple templateName(String templateName) {
    this.templateName = templateName;
    return this;
  }

 /**
   * Path in internet style relative to the Domino data directory
   * @return nsfPath
  **/
  @NotNull
  public String getNsfPath() {
    return nsfPath;
  }

  /**
    * Set nsfPath
  **/
  public void setNsfPath(String nsfPath) {
    this.nsfPath = nsfPath;
  }

  public DesignNSFSimple nsfPath(String nsfPath) {
    this.nsfPath = nsfPath;
    return this;
  }


  /**
    * Create a string representation of this pojo.
  **/
  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DesignNSFSimple {\n");
    
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    templateName: ").append(toIndentedString(templateName)).append("\n");
    sb.append("    nsfPath: ").append(toIndentedString(nsfPath)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private static String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

