/**
 * Copyright Â© 2022-2023 Jesse Gallagher
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * HCL Domino REST API basis
 * REST APIs for Domino and more done right. With declarative security and access to Code, Design and Data
 *
 * The version of the OpenAPI document: 1.0.8
 * Contact: HeyHCL@pnp-hcl.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openntf.xsp.nosql.communication.driver.keep.client.model;

import java.util.List;
import jakarta.json.bind.annotation.JsonbProperty;
import jakarta.validation.constraints.NotNull;

/**
 * Provies information about the user, their groups, where the msil file is
 **/

public class UserInfo {

  @JsonbProperty("scope")
  private String scope;

  @JsonbProperty("names")
  private List<String> names = null;

  @JsonbProperty("email")
  private String email;

  @JsonbProperty("mailServer")
  private String mailServer;

  @JsonbProperty("mailFile")
  private String mailFile;

  /**
   * Subject full username
   **/
  @JsonbProperty("sub")
  private String sub;

  /**
   * User name
   **/
  @JsonbProperty("name")
  private String name;

  /**
   * User's given name, if known
   **/
  @JsonbProperty("given_name")
  private String givenName;

  /**
   * User's family name, if known
   **/
  @JsonbProperty("family_name")
  private String familyName;

  /**
   * A short username suitable for a new-account creation hint
   **/
  @JsonbProperty("preferred_username")
  private String preferredUsername;

  /**
   * Get scope
   * 
   * @return scope
   **/
  public String getScope() {
    return scope;
  }

  /**
   * Set scope
   **/
  public void setScope(String scope) {
    this.scope = scope;
  }

  public UserInfo scope(String scope) {
    this.scope = scope;
    return this;
  }

  /**
   * Get names
   * 
   * @return names
   **/
  public List<String> getNames() {
    return names;
  }

  /**
   * Set names
   **/
  public void setNames(List<String> names) {
    this.names = names;
  }

  public UserInfo names(List<String> names) {
    this.names = names;
    return this;
  }

  public UserInfo addNamesItem(String namesItem) {
    this.names.add(namesItem);
    return this;
  }

  /**
   * Get email
   * 
   * @return email
   **/
  public String getEmail() {
    return email;
  }

  /**
   * Set email
   **/
  public void setEmail(String email) {
    this.email = email;
  }

  public UserInfo email(String email) {
    this.email = email;
    return this;
  }

  /**
   * Get mailServer
   * 
   * @return mailServer
   **/
  public String getMailServer() {
    return mailServer;
  }

  /**
   * Set mailServer
   **/
  public void setMailServer(String mailServer) {
    this.mailServer = mailServer;
  }

  public UserInfo mailServer(String mailServer) {
    this.mailServer = mailServer;
    return this;
  }

  /**
   * Get mailFile
   * 
   * @return mailFile
   **/
  public String getMailFile() {
    return mailFile;
  }

  /**
   * Set mailFile
   **/
  public void setMailFile(String mailFile) {
    this.mailFile = mailFile;
  }

  public UserInfo mailFile(String mailFile) {
    this.mailFile = mailFile;
    return this;
  }

  /**
   * Subject full username
   * 
   * @return sub
   **/
  @NotNull
  public String getSub() {
    return sub;
  }

  /**
   * Set sub
   **/
  public void setSub(String sub) {
    this.sub = sub;
  }

  public UserInfo sub(String sub) {
    this.sub = sub;
    return this;
  }

  /**
   * User name
   * 
   * @return name
   **/
  public String getName() {
    return name;
  }

  /**
   * Set name
   **/
  public void setName(String name) {
    this.name = name;
  }

  public UserInfo name(String name) {
    this.name = name;
    return this;
  }

  /**
   * User&#39;s given name, if known
   * 
   * @return givenName
   **/
  public String getGivenName() {
    return givenName;
  }

  /**
   * Set givenName
   **/
  public void setGivenName(String givenName) {
    this.givenName = givenName;
  }

  public UserInfo givenName(String givenName) {
    this.givenName = givenName;
    return this;
  }

  /**
   * User&#39;s family name, if known
   * 
   * @return familyName
   **/
  public String getFamilyName() {
    return familyName;
  }

  /**
   * Set familyName
   **/
  public void setFamilyName(String familyName) {
    this.familyName = familyName;
  }

  public UserInfo familyName(String familyName) {
    this.familyName = familyName;
    return this;
  }

  /**
   * A short username suitable for a new-account creation hint
   * 
   * @return preferredUsername
   **/
  public String getPreferredUsername() {
    return preferredUsername;
  }

  /**
   * Set preferredUsername
   **/
  public void setPreferredUsername(String preferredUsername) {
    this.preferredUsername = preferredUsername;
  }

  public UserInfo preferredUsername(String preferredUsername) {
    this.preferredUsername = preferredUsername;
    return this;
  }


  /**
   * Create a string representation of this pojo.
   **/
  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserInfo {\n");

    sb.append("    scope: ").append(toIndentedString(scope)).append("\n");
    sb.append("    names: ").append(toIndentedString(names)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    mailServer: ").append(toIndentedString(mailServer)).append("\n");
    sb.append("    mailFile: ").append(toIndentedString(mailFile)).append("\n");
    sb.append("    sub: ").append(toIndentedString(sub)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    givenName: ").append(toIndentedString(givenName)).append("\n");
    sb.append("    familyName: ").append(toIndentedString(familyName)).append("\n");
    sb.append("    preferredUsername: ").append(toIndentedString(preferredUsername)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private static String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

