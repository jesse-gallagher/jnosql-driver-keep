/**
 * HCL Project KEEP Core API v1
 * REST APIs for Domino and more done right. With declarative security and access to Code, Design and data
 *
 * The version of the OpenAPI document: 4.3.9
 * Contact: HeyHCL@pnp-hcl.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openntf.xsp.nosql.communication.driver.keep.client.model;

import jakarta.json.bind.annotation.JsonbProperty;

/**
  * The status message of specific agent. 
 **/

public class AgentAsyncMessage  {
  
 /**
   * The uuid of the asynchronous agent to check status of.
  **/
  @JsonbProperty("uuid")
  private String uuid;

 /**
   * The status of the asynchronous agent. 
  **/
  @JsonbProperty("status")
  private String status;

 /**
   * The uuid of the asynchronous agent to check status of.
   * @return uuid
  **/
  public String getUuid() {
    return uuid;
  }

  /**
    * Set uuid
  **/
  public void setUuid(String uuid) {
    this.uuid = uuid;
  }

  public AgentAsyncMessage uuid(String uuid) {
    this.uuid = uuid;
    return this;
  }

 /**
   * The status of the asynchronous agent. 
   * @return status
  **/
  public String getStatus() {
    return status;
  }

  /**
    * Set status
  **/
  public void setStatus(String status) {
    this.status = status;
  }

  public AgentAsyncMessage status(String status) {
    this.status = status;
    return this;
  }


  /**
    * Create a string representation of this pojo.
  **/
  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AgentAsyncMessage {\n");
    
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private static String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

