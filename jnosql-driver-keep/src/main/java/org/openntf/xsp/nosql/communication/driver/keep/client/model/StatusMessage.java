/**
 * HCL Domino REST API basis
 * REST APIs for Domino and more done right. With declarative security and access to Code, Design and Data
 *
 * The version of the OpenAPI document: 1.0.8
 * Contact: HeyHCL@pnp-hcl.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openntf.xsp.nosql.communication.driver.keep.client.model;

import jakarta.json.bind.annotation.JsonbCreator;
import jakarta.json.bind.annotation.JsonbProperty;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Pattern;
import jakarta.validation.constraints.Size;

/**
 * Keep-formatted status message
 **/

public class StatusMessage {

  /**
   * Success / failure status
   **/
  @JsonbProperty("status")
  private String status;

  /**
   * HTTP status code
   **/
  @JsonbProperty("statusCode")
  private Integer statusCode;

  /**
   * Short descriptive message
   **/
  @JsonbProperty("message")
  private String message;

  /**
   * 32 char universalId A-Z0-9, primary key unique across replicas
   **/
  @JsonbProperty("unid")
  private String unid;

  /**
   * Json Object containing further details, if appropriate
   **/
  @JsonbProperty("details")
  private String details;

  public StatusMessage() {}

  @JsonbCreator
  public StatusMessage(
      @JsonbProperty(value = "unid", nillable = true) String unid) {
    this.unid = unid;
  }

  /**
   * Success / failure status
   * 
   * @return status
   **/
  @NotNull
  public String getStatus() {
    return status;
  }

  /**
   * Set status
   **/
  public void setStatus(String status) {
    this.status = status;
  }

  public StatusMessage status(String status) {
    this.status = status;
    return this;
  }

  /**
   * HTTP status code
   * 
   * @return statusCode
   **/
  @NotNull
  public Integer getStatusCode() {
    return statusCode;
  }

  /**
   * Set statusCode
   **/
  public void setStatusCode(Integer statusCode) {
    this.statusCode = statusCode;
  }

  public StatusMessage statusCode(Integer statusCode) {
    this.statusCode = statusCode;
    return this;
  }

  /**
   * Short descriptive message
   * 
   * @return message
   **/
  @NotNull
  public String getMessage() {
    return message;
  }

  /**
   * Set message
   **/
  public void setMessage(String message) {
    this.message = message;
  }

  public StatusMessage message(String message) {
    this.message = message;
    return this;
  }

  /**
   * 32 char universalId A-Z0-9, primary key unique across replicas
   * 
   * @return unid
   **/
  @Pattern(regexp = "[0-9A-F]*")
  @Size(min = 32, max = 32)
  public String getUnid() {
    return unid;
  }


  /**
   * Json Object containing further details, if appropriate
   * 
   * @return details
   **/
  public String getDetails() {
    return details;
  }

  /**
   * Set details
   **/
  public void setDetails(String details) {
    this.details = details;
  }

  public StatusMessage details(String details) {
    this.details = details;
    return this;
  }


  /**
   * Create a string representation of this pojo.
   **/
  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StatusMessage {\n");

    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    statusCode: ").append(toIndentedString(statusCode)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    unid: ").append(toIndentedString(unid)).append("\n");
    sb.append("    details: ").append(toIndentedString(details)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private static String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

